-- NOTE: This file is generated programmatically, and should not be 
-- modified by hand. Modify and rerun BdeepGen instead.

                           
-- | Bdeep provides convenient shorthand utility behaviors,  simple
-- composites of RDP behaviors for: 
--                            
--   deep application of behaviors 
--   deep extraction of products 
--                            
-- For example, rather than:  
--                            
-- > (bfirst . bsecond . bleft . bsecond) action 
--                            
-- Developers can simply write: 
--                            
-- > bonfsls action           
--                            
-- This reads as `behavior on first second left second`. Note that
-- the order of characters corresponds to the path of application.
-- These are defined up to 5 deep, for a total 1364 functions. The
-- shallow elements bonf (= bfirst), bons, bonl, bonr are included
-- for consistency.           
--                            
-- Similarly, rather than:    
--                            
-- > bfst >>> bsnd >>> bfst >>> bfst >>> bsnd 
--                            
-- Developers can write:      
--                            
-- > bxfsffs                  
--                            
-- This reads as `behavior extract first second first first second.
-- The forward order of characters corresponds to the path. This is
-- reverse the order of Lisp's car,cdr,cadadr conventions. 
--                            
-- To extract multiple elements, use the (&&&) behavior: 
--                            
--  > bxfsffs &&& bxssffs     
--                            
-- Note: extraction is NOT possible for left/right, due to duration 
-- coupling constraints. These are also defined up to 5 depth, for 
-- total 62 functions.       
--                           
-- The dual to bx* is also provided, for dual completeness. This is
-- another 60 functions for injection - `binlr` is `binl <<< binr`.
-- These might be useful if a behavior is a big switch, but that may 
-- be an anti-pattern (better to use a lot of small behaviors).
--                            
-- If 5 depth isn't enough, these operations are readily composed.
-- E.g. consider a stack-like environment:
--   extract 8th element: bxsssss >>> bxssf 
--   operate on 8th element: (bonsssss . bonssf) op 
-- Though FRP.Sirea.Bstack provides richer Forth-inspired operators
-- for pointfree stack operations.
--                            
-- Unfortunately, RDP behaviors are not compatible with Haskell's 
-- Arrow syntax, which would make it easier to provide local names
-- to complex parameters. At the moment, Sirea must be used in a
-- point-free style. These deep operations should keep this from
-- becoming too tedious.      
--                            
-- See Also:                  
--   FRP.Sirea.Behavior       
--   FRP.Sirea.Bstack         
--                            
{-# LANGUAGE TypeOperators #-} 
module FRP.Sirea.Bdeep 
    ( bxf, bxs, bxff, bxfs, bxsf, bxss
    , bxfff, bxffs, bxfsf, bxfss, bxsff, bxsfs
    , bxssf, bxsss, bxffff, bxfffs, bxffsf, bxffss
    , bxfsff, bxfsfs, bxfssf, bxfsss, bxsfff, bxsffs
    , bxsfsf, bxsfss, bxssff, bxssfs, bxsssf, bxssss
    , bxfffff, bxffffs, bxfffsf, bxfffss, bxffsff, bxffsfs
    , bxffssf, bxffsss, bxfsfff, bxfsffs, bxfsfsf, bxfsfss
    , bxfssff, bxfssfs, bxfsssf, bxfssss, bxsffff, bxsfffs
    , bxsffsf, bxsffss, bxsfsff, bxsfsfs, bxsfssf, bxsfsss
    , bxssfff, bxssffs, bxssfsf, bxssfss, bxsssff, bxsssfs
    , bxssssf, bxsssss, binl, binr, binll, binlr
    , binrl, binrr, binlll, binllr, binlrl, binlrr
    , binrll, binrlr, binrrl, binrrr, binllll, binlllr
    , binllrl, binllrr, binlrll, binlrlr, binlrrl, binlrrr
    , binrlll, binrllr, binrlrl, binrlrr, binrrll, binrrlr
    , binrrrl, binrrrr, binlllll, binllllr, binlllrl, binlllrr
    , binllrll, binllrlr, binllrrl, binllrrr, binlrlll, binlrllr
    , binlrlrl, binlrlrr, binlrrll, binlrrlr, binlrrrl, binlrrrr
    , binrllll, binrlllr, binrllrl, binrllrr, binrlrll, binrlrlr
    , binrlrrl, binrlrrr, binrrlll, binrrllr, binrrlrl, binrrlrr
    , binrrrll, binrrrlr, binrrrrl, binrrrrr, bonf, bons
    , bonl, bonr, bonff, bonfs, bonfl, bonfr
    , bonsf, bonss, bonsl, bonsr, bonlf, bonls
    , bonll, bonlr, bonrf, bonrs, bonrl, bonrr
    , bonfff, bonffs, bonffl, bonffr, bonfsf, bonfss
    , bonfsl, bonfsr, bonflf, bonfls, bonfll, bonflr
    , bonfrf, bonfrs, bonfrl, bonfrr, bonsff, bonsfs
    , bonsfl, bonsfr, bonssf, bonsss, bonssl, bonssr
    , bonslf, bonsls, bonsll, bonslr, bonsrf, bonsrs
    , bonsrl, bonsrr, bonlff, bonlfs, bonlfl, bonlfr
    , bonlsf, bonlss, bonlsl, bonlsr, bonllf, bonlls
    , bonlll, bonllr, bonlrf, bonlrs, bonlrl, bonlrr
    , bonrff, bonrfs, bonrfl, bonrfr, bonrsf, bonrss
    , bonrsl, bonrsr, bonrlf, bonrls, bonrll, bonrlr
    , bonrrf, bonrrs, bonrrl, bonrrr, bonffff, bonfffs
    , bonfffl, bonfffr, bonffsf, bonffss, bonffsl, bonffsr
    , bonfflf, bonffls, bonffll, bonfflr, bonffrf, bonffrs
    , bonffrl, bonffrr, bonfsff, bonfsfs, bonfsfl, bonfsfr
    , bonfssf, bonfsss, bonfssl, bonfssr, bonfslf, bonfsls
    , bonfsll, bonfslr, bonfsrf, bonfsrs, bonfsrl, bonfsrr
    , bonflff, bonflfs, bonflfl, bonflfr, bonflsf, bonflss
    , bonflsl, bonflsr, bonfllf, bonflls, bonflll, bonfllr
    , bonflrf, bonflrs, bonflrl, bonflrr, bonfrff, bonfrfs
    , bonfrfl, bonfrfr, bonfrsf, bonfrss, bonfrsl, bonfrsr
    , bonfrlf, bonfrls, bonfrll, bonfrlr, bonfrrf, bonfrrs
    , bonfrrl, bonfrrr, bonsfff, bonsffs, bonsffl, bonsffr
    , bonsfsf, bonsfss, bonsfsl, bonsfsr, bonsflf, bonsfls
    , bonsfll, bonsflr, bonsfrf, bonsfrs, bonsfrl, bonsfrr
    , bonssff, bonssfs, bonssfl, bonssfr, bonsssf, bonssss
    , bonsssl, bonsssr, bonsslf, bonssls, bonssll, bonsslr
    , bonssrf, bonssrs, bonssrl, bonssrr, bonslff, bonslfs
    , bonslfl, bonslfr, bonslsf, bonslss, bonslsl, bonslsr
    , bonsllf, bonslls, bonslll, bonsllr, bonslrf, bonslrs
    , bonslrl, bonslrr, bonsrff, bonsrfs, bonsrfl, bonsrfr
    , bonsrsf, bonsrss, bonsrsl, bonsrsr, bonsrlf, bonsrls
    , bonsrll, bonsrlr, bonsrrf, bonsrrs, bonsrrl, bonsrrr
    , bonlfff, bonlffs, bonlffl, bonlffr, bonlfsf, bonlfss
    , bonlfsl, bonlfsr, bonlflf, bonlfls, bonlfll, bonlflr
    , bonlfrf, bonlfrs, bonlfrl, bonlfrr, bonlsff, bonlsfs
    , bonlsfl, bonlsfr, bonlssf, bonlsss, bonlssl, bonlssr
    , bonlslf, bonlsls, bonlsll, bonlslr, bonlsrf, bonlsrs
    , bonlsrl, bonlsrr, bonllff, bonllfs, bonllfl, bonllfr
    , bonllsf, bonllss, bonllsl, bonllsr, bonlllf, bonllls
    , bonllll, bonlllr, bonllrf, bonllrs, bonllrl, bonllrr
    , bonlrff, bonlrfs, bonlrfl, bonlrfr, bonlrsf, bonlrss
    , bonlrsl, bonlrsr, bonlrlf, bonlrls, bonlrll, bonlrlr
    , bonlrrf, bonlrrs, bonlrrl, bonlrrr, bonrfff, bonrffs
    , bonrffl, bonrffr, bonrfsf, bonrfss, bonrfsl, bonrfsr
    , bonrflf, bonrfls, bonrfll, bonrflr, bonrfrf, bonrfrs
    , bonrfrl, bonrfrr, bonrsff, bonrsfs, bonrsfl, bonrsfr
    , bonrssf, bonrsss, bonrssl, bonrssr, bonrslf, bonrsls
    , bonrsll, bonrslr, bonrsrf, bonrsrs, bonrsrl, bonrsrr
    , bonrlff, bonrlfs, bonrlfl, bonrlfr, bonrlsf, bonrlss
    , bonrlsl, bonrlsr, bonrllf, bonrlls, bonrlll, bonrllr
    , bonrlrf, bonrlrs, bonrlrl, bonrlrr, bonrrff, bonrrfs
    , bonrrfl, bonrrfr, bonrrsf, bonrrss, bonrrsl, bonrrsr
    , bonrrlf, bonrrls, bonrrll, bonrrlr, bonrrrf, bonrrrs
    , bonrrrl, bonrrrr, bonfffff, bonffffs, bonffffl, bonffffr
    , bonfffsf, bonfffss, bonfffsl, bonfffsr, bonffflf, bonfffls
    , bonfffll, bonffflr, bonfffrf, bonfffrs, bonfffrl, bonfffrr
    , bonffsff, bonffsfs, bonffsfl, bonffsfr, bonffssf, bonffsss
    , bonffssl, bonffssr, bonffslf, bonffsls, bonffsll, bonffslr
    , bonffsrf, bonffsrs, bonffsrl, bonffsrr, bonfflff, bonfflfs
    , bonfflfl, bonfflfr, bonfflsf, bonfflss, bonfflsl, bonfflsr
    , bonffllf, bonfflls, bonfflll, bonffllr, bonfflrf, bonfflrs
    , bonfflrl, bonfflrr, bonffrff, bonffrfs, bonffrfl, bonffrfr
    , bonffrsf, bonffrss, bonffrsl, bonffrsr, bonffrlf, bonffrls
    , bonffrll, bonffrlr, bonffrrf, bonffrrs, bonffrrl, bonffrrr
    , bonfsfff, bonfsffs, bonfsffl, bonfsffr, bonfsfsf, bonfsfss
    , bonfsfsl, bonfsfsr, bonfsflf, bonfsfls, bonfsfll, bonfsflr
    , bonfsfrf, bonfsfrs, bonfsfrl, bonfsfrr, bonfssff, bonfssfs
    , bonfssfl, bonfssfr, bonfsssf, bonfssss, bonfsssl, bonfsssr
    , bonfsslf, bonfssls, bonfssll, bonfsslr, bonfssrf, bonfssrs
    , bonfssrl, bonfssrr, bonfslff, bonfslfs, bonfslfl, bonfslfr
    , bonfslsf, bonfslss, bonfslsl, bonfslsr, bonfsllf, bonfslls
    , bonfslll, bonfsllr, bonfslrf, bonfslrs, bonfslrl, bonfslrr
    , bonfsrff, bonfsrfs, bonfsrfl, bonfsrfr, bonfsrsf, bonfsrss
    , bonfsrsl, bonfsrsr, bonfsrlf, bonfsrls, bonfsrll, bonfsrlr
    , bonfsrrf, bonfsrrs, bonfsrrl, bonfsrrr, bonflfff, bonflffs
    , bonflffl, bonflffr, bonflfsf, bonflfss, bonflfsl, bonflfsr
    , bonflflf, bonflfls, bonflfll, bonflflr, bonflfrf, bonflfrs
    , bonflfrl, bonflfrr, bonflsff, bonflsfs, bonflsfl, bonflsfr
    , bonflssf, bonflsss, bonflssl, bonflssr, bonflslf, bonflsls
    , bonflsll, bonflslr, bonflsrf, bonflsrs, bonflsrl, bonflsrr
    , bonfllff, bonfllfs, bonfllfl, bonfllfr, bonfllsf, bonfllss
    , bonfllsl, bonfllsr, bonflllf, bonfllls, bonfllll, bonflllr
    , bonfllrf, bonfllrs, bonfllrl, bonfllrr, bonflrff, bonflrfs
    , bonflrfl, bonflrfr, bonflrsf, bonflrss, bonflrsl, bonflrsr
    , bonflrlf, bonflrls, bonflrll, bonflrlr, bonflrrf, bonflrrs
    , bonflrrl, bonflrrr, bonfrfff, bonfrffs, bonfrffl, bonfrffr
    , bonfrfsf, bonfrfss, bonfrfsl, bonfrfsr, bonfrflf, bonfrfls
    , bonfrfll, bonfrflr, bonfrfrf, bonfrfrs, bonfrfrl, bonfrfrr
    , bonfrsff, bonfrsfs, bonfrsfl, bonfrsfr, bonfrssf, bonfrsss
    , bonfrssl, bonfrssr, bonfrslf, bonfrsls, bonfrsll, bonfrslr
    , bonfrsrf, bonfrsrs, bonfrsrl, bonfrsrr, bonfrlff, bonfrlfs
    , bonfrlfl, bonfrlfr, bonfrlsf, bonfrlss, bonfrlsl, bonfrlsr
    , bonfrllf, bonfrlls, bonfrlll, bonfrllr, bonfrlrf, bonfrlrs
    , bonfrlrl, bonfrlrr, bonfrrff, bonfrrfs, bonfrrfl, bonfrrfr
    , bonfrrsf, bonfrrss, bonfrrsl, bonfrrsr, bonfrrlf, bonfrrls
    , bonfrrll, bonfrrlr, bonfrrrf, bonfrrrs, bonfrrrl, bonfrrrr
    , bonsffff, bonsfffs, bonsfffl, bonsfffr, bonsffsf, bonsffss
    , bonsffsl, bonsffsr, bonsfflf, bonsffls, bonsffll, bonsfflr
    , bonsffrf, bonsffrs, bonsffrl, bonsffrr, bonsfsff, bonsfsfs
    , bonsfsfl, bonsfsfr, bonsfssf, bonsfsss, bonsfssl, bonsfssr
    , bonsfslf, bonsfsls, bonsfsll, bonsfslr, bonsfsrf, bonsfsrs
    , bonsfsrl, bonsfsrr, bonsflff, bonsflfs, bonsflfl, bonsflfr
    , bonsflsf, bonsflss, bonsflsl, bonsflsr, bonsfllf, bonsflls
    , bonsflll, bonsfllr, bonsflrf, bonsflrs, bonsflrl, bonsflrr
    , bonsfrff, bonsfrfs, bonsfrfl, bonsfrfr, bonsfrsf, bonsfrss
    , bonsfrsl, bonsfrsr, bonsfrlf, bonsfrls, bonsfrll, bonsfrlr
    , bonsfrrf, bonsfrrs, bonsfrrl, bonsfrrr, bonssfff, bonssffs
    , bonssffl, bonssffr, bonssfsf, bonssfss, bonssfsl, bonssfsr
    , bonssflf, bonssfls, bonssfll, bonssflr, bonssfrf, bonssfrs
    , bonssfrl, bonssfrr, bonsssff, bonsssfs, bonsssfl, bonsssfr
    , bonssssf, bonsssss, bonssssl, bonssssr, bonssslf, bonsssls
    , bonsssll, bonssslr, bonsssrf, bonsssrs, bonsssrl, bonsssrr
    , bonsslff, bonsslfs, bonsslfl, bonsslfr, bonsslsf, bonsslss
    , bonsslsl, bonsslsr, bonssllf, bonsslls, bonsslll, bonssllr
    , bonsslrf, bonsslrs, bonsslrl, bonsslrr, bonssrff, bonssrfs
    , bonssrfl, bonssrfr, bonssrsf, bonssrss, bonssrsl, bonssrsr
    , bonssrlf, bonssrls, bonssrll, bonssrlr, bonssrrf, bonssrrs
    , bonssrrl, bonssrrr, bonslfff, bonslffs, bonslffl, bonslffr
    , bonslfsf, bonslfss, bonslfsl, bonslfsr, bonslflf, bonslfls
    , bonslfll, bonslflr, bonslfrf, bonslfrs, bonslfrl, bonslfrr
    , bonslsff, bonslsfs, bonslsfl, bonslsfr, bonslssf, bonslsss
    , bonslssl, bonslssr, bonslslf, bonslsls, bonslsll, bonslslr
    , bonslsrf, bonslsrs, bonslsrl, bonslsrr, bonsllff, bonsllfs
    , bonsllfl, bonsllfr, bonsllsf, bonsllss, bonsllsl, bonsllsr
    , bonslllf, bonsllls, bonsllll, bonslllr, bonsllrf, bonsllrs
    , bonsllrl, bonsllrr, bonslrff, bonslrfs, bonslrfl, bonslrfr
    , bonslrsf, bonslrss, bonslrsl, bonslrsr, bonslrlf, bonslrls
    , bonslrll, bonslrlr, bonslrrf, bonslrrs, bonslrrl, bonslrrr
    , bonsrfff, bonsrffs, bonsrffl, bonsrffr, bonsrfsf, bonsrfss
    , bonsrfsl, bonsrfsr, bonsrflf, bonsrfls, bonsrfll, bonsrflr
    , bonsrfrf, bonsrfrs, bonsrfrl, bonsrfrr, bonsrsff, bonsrsfs
    , bonsrsfl, bonsrsfr, bonsrssf, bonsrsss, bonsrssl, bonsrssr
    , bonsrslf, bonsrsls, bonsrsll, bonsrslr, bonsrsrf, bonsrsrs
    , bonsrsrl, bonsrsrr, bonsrlff, bonsrlfs, bonsrlfl, bonsrlfr
    , bonsrlsf, bonsrlss, bonsrlsl, bonsrlsr, bonsrllf, bonsrlls
    , bonsrlll, bonsrllr, bonsrlrf, bonsrlrs, bonsrlrl, bonsrlrr
    , bonsrrff, bonsrrfs, bonsrrfl, bonsrrfr, bonsrrsf, bonsrrss
    , bonsrrsl, bonsrrsr, bonsrrlf, bonsrrls, bonsrrll, bonsrrlr
    , bonsrrrf, bonsrrrs, bonsrrrl, bonsrrrr, bonlffff, bonlfffs
    , bonlfffl, bonlfffr, bonlffsf, bonlffss, bonlffsl, bonlffsr
    , bonlfflf, bonlffls, bonlffll, bonlfflr, bonlffrf, bonlffrs
    , bonlffrl, bonlffrr, bonlfsff, bonlfsfs, bonlfsfl, bonlfsfr
    , bonlfssf, bonlfsss, bonlfssl, bonlfssr, bonlfslf, bonlfsls
    , bonlfsll, bonlfslr, bonlfsrf, bonlfsrs, bonlfsrl, bonlfsrr
    , bonlflff, bonlflfs, bonlflfl, bonlflfr, bonlflsf, bonlflss
    , bonlflsl, bonlflsr, bonlfllf, bonlflls, bonlflll, bonlfllr
    , bonlflrf, bonlflrs, bonlflrl, bonlflrr, bonlfrff, bonlfrfs
    , bonlfrfl, bonlfrfr, bonlfrsf, bonlfrss, bonlfrsl, bonlfrsr
    , bonlfrlf, bonlfrls, bonlfrll, bonlfrlr, bonlfrrf, bonlfrrs
    , bonlfrrl, bonlfrrr, bonlsfff, bonlsffs, bonlsffl, bonlsffr
    , bonlsfsf, bonlsfss, bonlsfsl, bonlsfsr, bonlsflf, bonlsfls
    , bonlsfll, bonlsflr, bonlsfrf, bonlsfrs, bonlsfrl, bonlsfrr
    , bonlssff, bonlssfs, bonlssfl, bonlssfr, bonlsssf, bonlssss
    , bonlsssl, bonlsssr, bonlsslf, bonlssls, bonlssll, bonlsslr
    , bonlssrf, bonlssrs, bonlssrl, bonlssrr, bonlslff, bonlslfs
    , bonlslfl, bonlslfr, bonlslsf, bonlslss, bonlslsl, bonlslsr
    , bonlsllf, bonlslls, bonlslll, bonlsllr, bonlslrf, bonlslrs
    , bonlslrl, bonlslrr, bonlsrff, bonlsrfs, bonlsrfl, bonlsrfr
    , bonlsrsf, bonlsrss, bonlsrsl, bonlsrsr, bonlsrlf, bonlsrls
    , bonlsrll, bonlsrlr, bonlsrrf, bonlsrrs, bonlsrrl, bonlsrrr
    , bonllfff, bonllffs, bonllffl, bonllffr, bonllfsf, bonllfss
    , bonllfsl, bonllfsr, bonllflf, bonllfls, bonllfll, bonllflr
    , bonllfrf, bonllfrs, bonllfrl, bonllfrr, bonllsff, bonllsfs
    , bonllsfl, bonllsfr, bonllssf, bonllsss, bonllssl, bonllssr
    , bonllslf, bonllsls, bonllsll, bonllslr, bonllsrf, bonllsrs
    , bonllsrl, bonllsrr, bonlllff, bonlllfs, bonlllfl, bonlllfr
    , bonlllsf, bonlllss, bonlllsl, bonlllsr, bonllllf, bonlllls
    , bonlllll, bonllllr, bonlllrf, bonlllrs, bonlllrl, bonlllrr
    , bonllrff, bonllrfs, bonllrfl, bonllrfr, bonllrsf, bonllrss
    , bonllrsl, bonllrsr, bonllrlf, bonllrls, bonllrll, bonllrlr
    , bonllrrf, bonllrrs, bonllrrl, bonllrrr, bonlrfff, bonlrffs
    , bonlrffl, bonlrffr, bonlrfsf, bonlrfss, bonlrfsl, bonlrfsr
    , bonlrflf, bonlrfls, bonlrfll, bonlrflr, bonlrfrf, bonlrfrs
    , bonlrfrl, bonlrfrr, bonlrsff, bonlrsfs, bonlrsfl, bonlrsfr
    , bonlrssf, bonlrsss, bonlrssl, bonlrssr, bonlrslf, bonlrsls
    , bonlrsll, bonlrslr, bonlrsrf, bonlrsrs, bonlrsrl, bonlrsrr
    , bonlrlff, bonlrlfs, bonlrlfl, bonlrlfr, bonlrlsf, bonlrlss
    , bonlrlsl, bonlrlsr, bonlrllf, bonlrlls, bonlrlll, bonlrllr
    , bonlrlrf, bonlrlrs, bonlrlrl, bonlrlrr, bonlrrff, bonlrrfs
    , bonlrrfl, bonlrrfr, bonlrrsf, bonlrrss, bonlrrsl, bonlrrsr
    , bonlrrlf, bonlrrls, bonlrrll, bonlrrlr, bonlrrrf, bonlrrrs
    , bonlrrrl, bonlrrrr, bonrffff, bonrfffs, bonrfffl, bonrfffr
    , bonrffsf, bonrffss, bonrffsl, bonrffsr, bonrfflf, bonrffls
    , bonrffll, bonrfflr, bonrffrf, bonrffrs, bonrffrl, bonrffrr
    , bonrfsff, bonrfsfs, bonrfsfl, bonrfsfr, bonrfssf, bonrfsss
    , bonrfssl, bonrfssr, bonrfslf, bonrfsls, bonrfsll, bonrfslr
    , bonrfsrf, bonrfsrs, bonrfsrl, bonrfsrr, bonrflff, bonrflfs
    , bonrflfl, bonrflfr, bonrflsf, bonrflss, bonrflsl, bonrflsr
    , bonrfllf, bonrflls, bonrflll, bonrfllr, bonrflrf, bonrflrs
    , bonrflrl, bonrflrr, bonrfrff, bonrfrfs, bonrfrfl, bonrfrfr
    , bonrfrsf, bonrfrss, bonrfrsl, bonrfrsr, bonrfrlf, bonrfrls
    , bonrfrll, bonrfrlr, bonrfrrf, bonrfrrs, bonrfrrl, bonrfrrr
    , bonrsfff, bonrsffs, bonrsffl, bonrsffr, bonrsfsf, bonrsfss
    , bonrsfsl, bonrsfsr, bonrsflf, bonrsfls, bonrsfll, bonrsflr
    , bonrsfrf, bonrsfrs, bonrsfrl, bonrsfrr, bonrssff, bonrssfs
    , bonrssfl, bonrssfr, bonrsssf, bonrssss, bonrsssl, bonrsssr
    , bonrsslf, bonrssls, bonrssll, bonrsslr, bonrssrf, bonrssrs
    , bonrssrl, bonrssrr, bonrslff, bonrslfs, bonrslfl, bonrslfr
    , bonrslsf, bonrslss, bonrslsl, bonrslsr, bonrsllf, bonrslls
    , bonrslll, bonrsllr, bonrslrf, bonrslrs, bonrslrl, bonrslrr
    , bonrsrff, bonrsrfs, bonrsrfl, bonrsrfr, bonrsrsf, bonrsrss
    , bonrsrsl, bonrsrsr, bonrsrlf, bonrsrls, bonrsrll, bonrsrlr
    , bonrsrrf, bonrsrrs, bonrsrrl, bonrsrrr, bonrlfff, bonrlffs
    , bonrlffl, bonrlffr, bonrlfsf, bonrlfss, bonrlfsl, bonrlfsr
    , bonrlflf, bonrlfls, bonrlfll, bonrlflr, bonrlfrf, bonrlfrs
    , bonrlfrl, bonrlfrr, bonrlsff, bonrlsfs, bonrlsfl, bonrlsfr
    , bonrlssf, bonrlsss, bonrlssl, bonrlssr, bonrlslf, bonrlsls
    , bonrlsll, bonrlslr, bonrlsrf, bonrlsrs, bonrlsrl, bonrlsrr
    , bonrllff, bonrllfs, bonrllfl, bonrllfr, bonrllsf, bonrllss
    , bonrllsl, bonrllsr, bonrlllf, bonrllls, bonrllll, bonrlllr
    , bonrllrf, bonrllrs, bonrllrl, bonrllrr, bonrlrff, bonrlrfs
    , bonrlrfl, bonrlrfr, bonrlrsf, bonrlrss, bonrlrsl, bonrlrsr
    , bonrlrlf, bonrlrls, bonrlrll, bonrlrlr, bonrlrrf, bonrlrrs
    , bonrlrrl, bonrlrrr, bonrrfff, bonrrffs, bonrrffl, bonrrffr
    , bonrrfsf, bonrrfss, bonrrfsl, bonrrfsr, bonrrflf, bonrrfls
    , bonrrfll, bonrrflr, bonrrfrf, bonrrfrs, bonrrfrl, bonrrfrr
    , bonrrsff, bonrrsfs, bonrrsfl, bonrrsfr, bonrrssf, bonrrsss
    , bonrrssl, bonrrssr, bonrrslf, bonrrsls, bonrrsll, bonrrslr
    , bonrrsrf, bonrrsrs, bonrrsrl, bonrrsrr, bonrrlff, bonrrlfs
    , bonrrlfl, bonrrlfr, bonrrlsf, bonrrlss, bonrrlsl, bonrrlsr
    , bonrrllf, bonrrlls, bonrrlll, bonrrllr, bonrrlrf, bonrrlrs
    , bonrrlrl, bonrrlrr, bonrrrff, bonrrrfs, bonrrrfl, bonrrrfr
    , bonrrrsf, bonrrrss, bonrrrsl, bonrrrsr, bonrrrlf, bonrrrls
    , bonrrrll, bonrrrlr, bonrrrrf, bonrrrrs, bonrrrrl, bonrrrrr
    ) where 
import Control.Category ((<<<))
import FRP.Sirea.Behavior 


bxf :: (BProd b) => b (e  :&: s0) e
bxs :: (BProd b) => b (f0 :&: e ) e
bxff :: (BProd b) => b ((e  :&: s0) :&: s1) e
bxfs :: (BProd b) => b ((f0 :&: e ) :&: s1) e
bxsf :: (BProd b) => b (f1 :&: (e  :&: s0)) e
bxss :: (BProd b) => b (f1 :&: (f0 :&: e )) e
bxfff :: (BProd b) => b (((e  :&: s0) :&: s1) :&: s2) e
bxffs :: (BProd b) => b (((f0 :&: e ) :&: s1) :&: s2) e
bxfsf :: (BProd b) => b ((f1 :&: (e  :&: s0)) :&: s2) e
bxfss :: (BProd b) => b ((f1 :&: (f0 :&: e )) :&: s2) e
bxsff :: (BProd b) => b (f2 :&: ((e  :&: s0) :&: s1)) e
bxsfs :: (BProd b) => b (f2 :&: ((f0 :&: e ) :&: s1)) e
bxssf :: (BProd b) => b (f2 :&: (f1 :&: (e  :&: s0))) e
bxsss :: (BProd b) => b (f2 :&: (f1 :&: (f0 :&: e ))) e
bxffff :: (BProd b) => b ((((e  :&: s0) :&: s1) :&: s2) :&: s3) e
bxfffs :: (BProd b) => b ((((f0 :&: e ) :&: s1) :&: s2) :&: s3) e
bxffsf :: (BProd b) => b (((f1 :&: (e  :&: s0)) :&: s2) :&: s3) e
bxffss :: (BProd b) => b (((f1 :&: (f0 :&: e )) :&: s2) :&: s3) e
bxfsff :: (BProd b) => b ((f2 :&: ((e  :&: s0) :&: s1)) :&: s3) e
bxfsfs :: (BProd b) => b ((f2 :&: ((f0 :&: e ) :&: s1)) :&: s3) e
bxfssf :: (BProd b) => b ((f2 :&: (f1 :&: (e  :&: s0))) :&: s3) e
bxfsss :: (BProd b) => b ((f2 :&: (f1 :&: (f0 :&: e ))) :&: s3) e
bxsfff :: (BProd b) => b (f3 :&: (((e  :&: s0) :&: s1) :&: s2)) e
bxsffs :: (BProd b) => b (f3 :&: (((f0 :&: e ) :&: s1) :&: s2)) e
bxsfsf :: (BProd b) => b (f3 :&: ((f1 :&: (e  :&: s0)) :&: s2)) e
bxsfss :: (BProd b) => b (f3 :&: ((f1 :&: (f0 :&: e )) :&: s2)) e
bxssff :: (BProd b) => b (f3 :&: (f2 :&: ((e  :&: s0) :&: s1))) e
bxssfs :: (BProd b) => b (f3 :&: (f2 :&: ((f0 :&: e ) :&: s1))) e
bxsssf :: (BProd b) => b (f3 :&: (f2 :&: (f1 :&: (e  :&: s0)))) e
bxssss :: (BProd b) => b (f3 :&: (f2 :&: (f1 :&: (f0 :&: e )))) e
bxfffff :: (BProd b) => b (((((e  :&: s0) :&: s1) :&: s2) :&: s3) :&: s4) e
bxffffs :: (BProd b) => b (((((f0 :&: e ) :&: s1) :&: s2) :&: s3) :&: s4) e
bxfffsf :: (BProd b) => b ((((f1 :&: (e  :&: s0)) :&: s2) :&: s3) :&: s4) e
bxfffss :: (BProd b) => b ((((f1 :&: (f0 :&: e )) :&: s2) :&: s3) :&: s4) e
bxffsff :: (BProd b) => b (((f2 :&: ((e  :&: s0) :&: s1)) :&: s3) :&: s4) e
bxffsfs :: (BProd b) => b (((f2 :&: ((f0 :&: e ) :&: s1)) :&: s3) :&: s4) e
bxffssf :: (BProd b) => b (((f2 :&: (f1 :&: (e  :&: s0))) :&: s3) :&: s4) e
bxffsss :: (BProd b) => b (((f2 :&: (f1 :&: (f0 :&: e ))) :&: s3) :&: s4) e
bxfsfff :: (BProd b) => b ((f3 :&: (((e  :&: s0) :&: s1) :&: s2)) :&: s4) e
bxfsffs :: (BProd b) => b ((f3 :&: (((f0 :&: e ) :&: s1) :&: s2)) :&: s4) e
bxfsfsf :: (BProd b) => b ((f3 :&: ((f1 :&: (e  :&: s0)) :&: s2)) :&: s4) e
bxfsfss :: (BProd b) => b ((f3 :&: ((f1 :&: (f0 :&: e )) :&: s2)) :&: s4) e
bxfssff :: (BProd b) => b ((f3 :&: (f2 :&: ((e  :&: s0) :&: s1))) :&: s4) e
bxfssfs :: (BProd b) => b ((f3 :&: (f2 :&: ((f0 :&: e ) :&: s1))) :&: s4) e
bxfsssf :: (BProd b) => b ((f3 :&: (f2 :&: (f1 :&: (e  :&: s0)))) :&: s4) e
bxfssss :: (BProd b) => b ((f3 :&: (f2 :&: (f1 :&: (f0 :&: e )))) :&: s4) e
bxsffff :: (BProd b) => b (f4 :&: ((((e  :&: s0) :&: s1) :&: s2) :&: s3)) e
bxsfffs :: (BProd b) => b (f4 :&: ((((f0 :&: e ) :&: s1) :&: s2) :&: s3)) e
bxsffsf :: (BProd b) => b (f4 :&: (((f1 :&: (e  :&: s0)) :&: s2) :&: s3)) e
bxsffss :: (BProd b) => b (f4 :&: (((f1 :&: (f0 :&: e )) :&: s2) :&: s3)) e
bxsfsff :: (BProd b) => b (f4 :&: ((f2 :&: ((e  :&: s0) :&: s1)) :&: s3)) e
bxsfsfs :: (BProd b) => b (f4 :&: ((f2 :&: ((f0 :&: e ) :&: s1)) :&: s3)) e
bxsfssf :: (BProd b) => b (f4 :&: ((f2 :&: (f1 :&: (e  :&: s0))) :&: s3)) e
bxsfsss :: (BProd b) => b (f4 :&: ((f2 :&: (f1 :&: (f0 :&: e ))) :&: s3)) e
bxssfff :: (BProd b) => b (f4 :&: (f3 :&: (((e  :&: s0) :&: s1) :&: s2))) e
bxssffs :: (BProd b) => b (f4 :&: (f3 :&: (((f0 :&: e ) :&: s1) :&: s2))) e
bxssfsf :: (BProd b) => b (f4 :&: (f3 :&: ((f1 :&: (e  :&: s0)) :&: s2))) e
bxssfss :: (BProd b) => b (f4 :&: (f3 :&: ((f1 :&: (f0 :&: e )) :&: s2))) e
bxsssff :: (BProd b) => b (f4 :&: (f3 :&: (f2 :&: ((e  :&: s0) :&: s1)))) e
bxsssfs :: (BProd b) => b (f4 :&: (f3 :&: (f2 :&: ((f0 :&: e ) :&: s1)))) e
bxssssf :: (BProd b) => b (f4 :&: (f3 :&: (f2 :&: (f1 :&: (e  :&: s0))))) e
bxsssss :: (BProd b) => b (f4 :&: (f3 :&: (f2 :&: (f1 :&: (f0 :&: e ))))) e
-- binl is defined in FRP.Sirea.Behavior.
-- binr is defined in FRP.Sirea.Behavior.
binll :: (BSum b) => b e ((e  :|: r0) :|: r1)
binlr :: (BSum b) => b e ((l0 :|: e ) :|: r1)
binrl :: (BSum b) => b e (l1 :|: (e  :|: r0))
binrr :: (BSum b) => b e (l1 :|: (l0 :|: e ))
binlll :: (BSum b) => b e (((e  :|: r0) :|: r1) :|: r2)
binllr :: (BSum b) => b e (((l0 :|: e ) :|: r1) :|: r2)
binlrl :: (BSum b) => b e ((l1 :|: (e  :|: r0)) :|: r2)
binlrr :: (BSum b) => b e ((l1 :|: (l0 :|: e )) :|: r2)
binrll :: (BSum b) => b e (l2 :|: ((e  :|: r0) :|: r1))
binrlr :: (BSum b) => b e (l2 :|: ((l0 :|: e ) :|: r1))
binrrl :: (BSum b) => b e (l2 :|: (l1 :|: (e  :|: r0)))
binrrr :: (BSum b) => b e (l2 :|: (l1 :|: (l0 :|: e )))
binllll :: (BSum b) => b e ((((e  :|: r0) :|: r1) :|: r2) :|: r3)
binlllr :: (BSum b) => b e ((((l0 :|: e ) :|: r1) :|: r2) :|: r3)
binllrl :: (BSum b) => b e (((l1 :|: (e  :|: r0)) :|: r2) :|: r3)
binllrr :: (BSum b) => b e (((l1 :|: (l0 :|: e )) :|: r2) :|: r3)
binlrll :: (BSum b) => b e ((l2 :|: ((e  :|: r0) :|: r1)) :|: r3)
binlrlr :: (BSum b) => b e ((l2 :|: ((l0 :|: e ) :|: r1)) :|: r3)
binlrrl :: (BSum b) => b e ((l2 :|: (l1 :|: (e  :|: r0))) :|: r3)
binlrrr :: (BSum b) => b e ((l2 :|: (l1 :|: (l0 :|: e ))) :|: r3)
binrlll :: (BSum b) => b e (l3 :|: (((e  :|: r0) :|: r1) :|: r2))
binrllr :: (BSum b) => b e (l3 :|: (((l0 :|: e ) :|: r1) :|: r2))
binrlrl :: (BSum b) => b e (l3 :|: ((l1 :|: (e  :|: r0)) :|: r2))
binrlrr :: (BSum b) => b e (l3 :|: ((l1 :|: (l0 :|: e )) :|: r2))
binrrll :: (BSum b) => b e (l3 :|: (l2 :|: ((e  :|: r0) :|: r1)))
binrrlr :: (BSum b) => b e (l3 :|: (l2 :|: ((l0 :|: e ) :|: r1)))
binrrrl :: (BSum b) => b e (l3 :|: (l2 :|: (l1 :|: (e  :|: r0))))
binrrrr :: (BSum b) => b e (l3 :|: (l2 :|: (l1 :|: (l0 :|: e ))))
binlllll :: (BSum b) => b e (((((e  :|: r0) :|: r1) :|: r2) :|: r3) :|: r4)
binllllr :: (BSum b) => b e (((((l0 :|: e ) :|: r1) :|: r2) :|: r3) :|: r4)
binlllrl :: (BSum b) => b e ((((l1 :|: (e  :|: r0)) :|: r2) :|: r3) :|: r4)
binlllrr :: (BSum b) => b e ((((l1 :|: (l0 :|: e )) :|: r2) :|: r3) :|: r4)
binllrll :: (BSum b) => b e (((l2 :|: ((e  :|: r0) :|: r1)) :|: r3) :|: r4)
binllrlr :: (BSum b) => b e (((l2 :|: ((l0 :|: e ) :|: r1)) :|: r3) :|: r4)
binllrrl :: (BSum b) => b e (((l2 :|: (l1 :|: (e  :|: r0))) :|: r3) :|: r4)
binllrrr :: (BSum b) => b e (((l2 :|: (l1 :|: (l0 :|: e ))) :|: r3) :|: r4)
binlrlll :: (BSum b) => b e ((l3 :|: (((e  :|: r0) :|: r1) :|: r2)) :|: r4)
binlrllr :: (BSum b) => b e ((l3 :|: (((l0 :|: e ) :|: r1) :|: r2)) :|: r4)
binlrlrl :: (BSum b) => b e ((l3 :|: ((l1 :|: (e  :|: r0)) :|: r2)) :|: r4)
binlrlrr :: (BSum b) => b e ((l3 :|: ((l1 :|: (l0 :|: e )) :|: r2)) :|: r4)
binlrrll :: (BSum b) => b e ((l3 :|: (l2 :|: ((e  :|: r0) :|: r1))) :|: r4)
binlrrlr :: (BSum b) => b e ((l3 :|: (l2 :|: ((l0 :|: e ) :|: r1))) :|: r4)
binlrrrl :: (BSum b) => b e ((l3 :|: (l2 :|: (l1 :|: (e  :|: r0)))) :|: r4)
binlrrrr :: (BSum b) => b e ((l3 :|: (l2 :|: (l1 :|: (l0 :|: e )))) :|: r4)
binrllll :: (BSum b) => b e (l4 :|: ((((e  :|: r0) :|: r1) :|: r2) :|: r3))
binrlllr :: (BSum b) => b e (l4 :|: ((((l0 :|: e ) :|: r1) :|: r2) :|: r3))
binrllrl :: (BSum b) => b e (l4 :|: (((l1 :|: (e  :|: r0)) :|: r2) :|: r3))
binrllrr :: (BSum b) => b e (l4 :|: (((l1 :|: (l0 :|: e )) :|: r2) :|: r3))
binrlrll :: (BSum b) => b e (l4 :|: ((l2 :|: ((e  :|: r0) :|: r1)) :|: r3))
binrlrlr :: (BSum b) => b e (l4 :|: ((l2 :|: ((l0 :|: e ) :|: r1)) :|: r3))
binrlrrl :: (BSum b) => b e (l4 :|: ((l2 :|: (l1 :|: (e  :|: r0))) :|: r3))
binrlrrr :: (BSum b) => b e (l4 :|: ((l2 :|: (l1 :|: (l0 :|: e ))) :|: r3))
binrrlll :: (BSum b) => b e (l4 :|: (l3 :|: (((e  :|: r0) :|: r1) :|: r2)))
binrrllr :: (BSum b) => b e (l4 :|: (l3 :|: (((l0 :|: e ) :|: r1) :|: r2)))
binrrlrl :: (BSum b) => b e (l4 :|: (l3 :|: ((l1 :|: (e  :|: r0)) :|: r2)))
binrrlrr :: (BSum b) => b e (l4 :|: (l3 :|: ((l1 :|: (l0 :|: e )) :|: r2)))
binrrrll :: (BSum b) => b e (l4 :|: (l3 :|: (l2 :|: ((e  :|: r0) :|: r1))))
binrrrlr :: (BSum b) => b e (l4 :|: (l3 :|: (l2 :|: ((l0 :|: e ) :|: r1))))
binrrrrl :: (BSum b) => b e (l4 :|: (l3 :|: (l2 :|: (l1 :|: (e  :|: r0)))))
binrrrrr :: (BSum b) => b e (l4 :|: (l3 :|: (l2 :|: (l1 :|: (l0 :|: e )))))
bonf :: (BProd b) => b e e' -> b (e  :&: s0) (e' :&: s0)
bons :: (BProd b) => b e e' -> b (f0 :&: e ) (f0 :&: e')
bonl :: (BSum b) => b e e' -> b (e  :|: r0) (e' :|: r0)
bonr :: (BSum b) => b e e' -> b (l0 :|: e ) (l0 :|: e')
bonff :: (BProd b) => b e e' -> b ((e  :&: s0) :&: s1) ((e' :&: s0) :&: s1)
bonfs :: (BProd b) => b e e' -> b ((f0 :&: e ) :&: s1) ((f0 :&: e') :&: s1)
bonfl :: (BProd b, BSum b) => b e e' -> b ((e  :|: r0) :&: s1) ((e' :|: r0) :&: s1)
bonfr :: (BProd b, BSum b) => b e e' -> b ((l0 :|: e ) :&: s1) ((l0 :|: e') :&: s1)
bonsf :: (BProd b) => b e e' -> b (f1 :&: (e  :&: s0)) (f1 :&: (e' :&: s0))
bonss :: (BProd b) => b e e' -> b (f1 :&: (f0 :&: e )) (f1 :&: (f0 :&: e'))
bonsl :: (BProd b, BSum b) => b e e' -> b (f1 :&: (e  :|: r0)) (f1 :&: (e' :|: r0))
bonsr :: (BProd b, BSum b) => b e e' -> b (f1 :&: (l0 :|: e )) (f1 :&: (l0 :|: e'))
bonlf :: (BProd b, BSum b) => b e e' -> b ((e  :&: s0) :|: r1) ((e' :&: s0) :|: r1)
bonls :: (BProd b, BSum b) => b e e' -> b ((f0 :&: e ) :|: r1) ((f0 :&: e') :|: r1)
bonll :: (BSum b) => b e e' -> b ((e  :|: r0) :|: r1) ((e' :|: r0) :|: r1)
bonlr :: (BSum b) => b e e' -> b ((l0 :|: e ) :|: r1) ((l0 :|: e') :|: r1)
bonrf :: (BProd b, BSum b) => b e e' -> b (l1 :|: (e  :&: s0)) (l1 :|: (e' :&: s0))
bonrs :: (BProd b, BSum b) => b e e' -> b (l1 :|: (f0 :&: e )) (l1 :|: (f0 :&: e'))
bonrl :: (BSum b) => b e e' -> b (l1 :|: (e  :|: r0)) (l1 :|: (e' :|: r0))
bonrr :: (BSum b) => b e e' -> b (l1 :|: (l0 :|: e )) (l1 :|: (l0 :|: e'))
bonfff :: (BProd b) => b e e' -> b (((e  :&: s0) :&: s1) :&: s2) (((e' :&: s0) :&: s1) :&: s2)
bonffs :: (BProd b) => b e e' -> b (((f0 :&: e ) :&: s1) :&: s2) (((f0 :&: e') :&: s1) :&: s2)
bonffl :: (BProd b, BSum b) => b e e' -> b (((e  :|: r0) :&: s1) :&: s2) (((e' :|: r0) :&: s1) :&: s2)
bonffr :: (BProd b, BSum b) => b e e' -> b (((l0 :|: e ) :&: s1) :&: s2) (((l0 :|: e') :&: s1) :&: s2)
bonfsf :: (BProd b) => b e e' -> b ((f1 :&: (e  :&: s0)) :&: s2) ((f1 :&: (e' :&: s0)) :&: s2)
bonfss :: (BProd b) => b e e' -> b ((f1 :&: (f0 :&: e )) :&: s2) ((f1 :&: (f0 :&: e')) :&: s2)
bonfsl :: (BProd b, BSum b) => b e e' -> b ((f1 :&: (e  :|: r0)) :&: s2) ((f1 :&: (e' :|: r0)) :&: s2)
bonfsr :: (BProd b, BSum b) => b e e' -> b ((f1 :&: (l0 :|: e )) :&: s2) ((f1 :&: (l0 :|: e')) :&: s2)
bonflf :: (BProd b, BSum b) => b e e' -> b (((e  :&: s0) :|: r1) :&: s2) (((e' :&: s0) :|: r1) :&: s2)
bonfls :: (BProd b, BSum b) => b e e' -> b (((f0 :&: e ) :|: r1) :&: s2) (((f0 :&: e') :|: r1) :&: s2)
bonfll :: (BProd b, BSum b) => b e e' -> b (((e  :|: r0) :|: r1) :&: s2) (((e' :|: r0) :|: r1) :&: s2)
bonflr :: (BProd b, BSum b) => b e e' -> b (((l0 :|: e ) :|: r1) :&: s2) (((l0 :|: e') :|: r1) :&: s2)
bonfrf :: (BProd b, BSum b) => b e e' -> b ((l1 :|: (e  :&: s0)) :&: s2) ((l1 :|: (e' :&: s0)) :&: s2)
bonfrs :: (BProd b, BSum b) => b e e' -> b ((l1 :|: (f0 :&: e )) :&: s2) ((l1 :|: (f0 :&: e')) :&: s2)
bonfrl :: (BProd b, BSum b) => b e e' -> b ((l1 :|: (e  :|: r0)) :&: s2) ((l1 :|: (e' :|: r0)) :&: s2)
bonfrr :: (BProd b, BSum b) => b e e' -> b ((l1 :|: (l0 :|: e )) :&: s2) ((l1 :|: (l0 :|: e')) :&: s2)
bonsff :: (BProd b) => b e e' -> b (f2 :&: ((e  :&: s0) :&: s1)) (f2 :&: ((e' :&: s0) :&: s1))
bonsfs :: (BProd b) => b e e' -> b (f2 :&: ((f0 :&: e ) :&: s1)) (f2 :&: ((f0 :&: e') :&: s1))
bonsfl :: (BProd b, BSum b) => b e e' -> b (f2 :&: ((e  :|: r0) :&: s1)) (f2 :&: ((e' :|: r0) :&: s1))
bonsfr :: (BProd b, BSum b) => b e e' -> b (f2 :&: ((l0 :|: e ) :&: s1)) (f2 :&: ((l0 :|: e') :&: s1))
bonssf :: (BProd b) => b e e' -> b (f2 :&: (f1 :&: (e  :&: s0))) (f2 :&: (f1 :&: (e' :&: s0)))
bonsss :: (BProd b) => b e e' -> b (f2 :&: (f1 :&: (f0 :&: e ))) (f2 :&: (f1 :&: (f0 :&: e')))
bonssl :: (BProd b, BSum b) => b e e' -> b (f2 :&: (f1 :&: (e  :|: r0))) (f2 :&: (f1 :&: (e' :|: r0)))
bonssr :: (BProd b, BSum b) => b e e' -> b (f2 :&: (f1 :&: (l0 :|: e ))) (f2 :&: (f1 :&: (l0 :|: e')))
bonslf :: (BProd b, BSum b) => b e e' -> b (f2 :&: ((e  :&: s0) :|: r1)) (f2 :&: ((e' :&: s0) :|: r1))
bonsls :: (BProd b, BSum b) => b e e' -> b (f2 :&: ((f0 :&: e ) :|: r1)) (f2 :&: ((f0 :&: e') :|: r1))
bonsll :: (BProd b, BSum b) => b e e' -> b (f2 :&: ((e  :|: r0) :|: r1)) (f2 :&: ((e' :|: r0) :|: r1))
bonslr :: (BProd b, BSum b) => b e e' -> b (f2 :&: ((l0 :|: e ) :|: r1)) (f2 :&: ((l0 :|: e') :|: r1))
bonsrf :: (BProd b, BSum b) => b e e' -> b (f2 :&: (l1 :|: (e  :&: s0))) (f2 :&: (l1 :|: (e' :&: s0)))
bonsrs :: (BProd b, BSum b) => b e e' -> b (f2 :&: (l1 :|: (f0 :&: e ))) (f2 :&: (l1 :|: (f0 :&: e')))
bonsrl :: (BProd b, BSum b) => b e e' -> b (f2 :&: (l1 :|: (e  :|: r0))) (f2 :&: (l1 :|: (e' :|: r0)))
bonsrr :: (BProd b, BSum b) => b e e' -> b (f2 :&: (l1 :|: (l0 :|: e ))) (f2 :&: (l1 :|: (l0 :|: e')))
bonlff :: (BProd b, BSum b) => b e e' -> b (((e  :&: s0) :&: s1) :|: r2) (((e' :&: s0) :&: s1) :|: r2)
bonlfs :: (BProd b, BSum b) => b e e' -> b (((f0 :&: e ) :&: s1) :|: r2) (((f0 :&: e') :&: s1) :|: r2)
bonlfl :: (BProd b, BSum b) => b e e' -> b (((e  :|: r0) :&: s1) :|: r2) (((e' :|: r0) :&: s1) :|: r2)
bonlfr :: (BProd b, BSum b) => b e e' -> b (((l0 :|: e ) :&: s1) :|: r2) (((l0 :|: e') :&: s1) :|: r2)
bonlsf :: (BProd b, BSum b) => b e e' -> b ((f1 :&: (e  :&: s0)) :|: r2) ((f1 :&: (e' :&: s0)) :|: r2)
bonlss :: (BProd b, BSum b) => b e e' -> b ((f1 :&: (f0 :&: e )) :|: r2) ((f1 :&: (f0 :&: e')) :|: r2)
bonlsl :: (BProd b, BSum b) => b e e' -> b ((f1 :&: (e  :|: r0)) :|: r2) ((f1 :&: (e' :|: r0)) :|: r2)
bonlsr :: (BProd b, BSum b) => b e e' -> b ((f1 :&: (l0 :|: e )) :|: r2) ((f1 :&: (l0 :|: e')) :|: r2)
bonllf :: (BProd b, BSum b) => b e e' -> b (((e  :&: s0) :|: r1) :|: r2) (((e' :&: s0) :|: r1) :|: r2)
bonlls :: (BProd b, BSum b) => b e e' -> b (((f0 :&: e ) :|: r1) :|: r2) (((f0 :&: e') :|: r1) :|: r2)
bonlll :: (BSum b) => b e e' -> b (((e  :|: r0) :|: r1) :|: r2) (((e' :|: r0) :|: r1) :|: r2)
bonllr :: (BSum b) => b e e' -> b (((l0 :|: e ) :|: r1) :|: r2) (((l0 :|: e') :|: r1) :|: r2)
bonlrf :: (BProd b, BSum b) => b e e' -> b ((l1 :|: (e  :&: s0)) :|: r2) ((l1 :|: (e' :&: s0)) :|: r2)
bonlrs :: (BProd b, BSum b) => b e e' -> b ((l1 :|: (f0 :&: e )) :|: r2) ((l1 :|: (f0 :&: e')) :|: r2)
bonlrl :: (BSum b) => b e e' -> b ((l1 :|: (e  :|: r0)) :|: r2) ((l1 :|: (e' :|: r0)) :|: r2)
bonlrr :: (BSum b) => b e e' -> b ((l1 :|: (l0 :|: e )) :|: r2) ((l1 :|: (l0 :|: e')) :|: r2)
bonrff :: (BProd b, BSum b) => b e e' -> b (l2 :|: ((e  :&: s0) :&: s1)) (l2 :|: ((e' :&: s0) :&: s1))
bonrfs :: (BProd b, BSum b) => b e e' -> b (l2 :|: ((f0 :&: e ) :&: s1)) (l2 :|: ((f0 :&: e') :&: s1))
bonrfl :: (BProd b, BSum b) => b e e' -> b (l2 :|: ((e  :|: r0) :&: s1)) (l2 :|: ((e' :|: r0) :&: s1))
bonrfr :: (BProd b, BSum b) => b e e' -> b (l2 :|: ((l0 :|: e ) :&: s1)) (l2 :|: ((l0 :|: e') :&: s1))
bonrsf :: (BProd b, BSum b) => b e e' -> b (l2 :|: (f1 :&: (e  :&: s0))) (l2 :|: (f1 :&: (e' :&: s0)))
bonrss :: (BProd b, BSum b) => b e e' -> b (l2 :|: (f1 :&: (f0 :&: e ))) (l2 :|: (f1 :&: (f0 :&: e')))
bonrsl :: (BProd b, BSum b) => b e e' -> b (l2 :|: (f1 :&: (e  :|: r0))) (l2 :|: (f1 :&: (e' :|: r0)))
bonrsr :: (BProd b, BSum b) => b e e' -> b (l2 :|: (f1 :&: (l0 :|: e ))) (l2 :|: (f1 :&: (l0 :|: e')))
bonrlf :: (BProd b, BSum b) => b e e' -> b (l2 :|: ((e  :&: s0) :|: r1)) (l2 :|: ((e' :&: s0) :|: r1))
bonrls :: (BProd b, BSum b) => b e e' -> b (l2 :|: ((f0 :&: e ) :|: r1)) (l2 :|: ((f0 :&: e') :|: r1))
bonrll :: (BSum b) => b e e' -> b (l2 :|: ((e  :|: r0) :|: r1)) (l2 :|: ((e' :|: r0) :|: r1))
bonrlr :: (BSum b) => b e e' -> b (l2 :|: ((l0 :|: e ) :|: r1)) (l2 :|: ((l0 :|: e') :|: r1))
bonrrf :: (BProd b, BSum b) => b e e' -> b (l2 :|: (l1 :|: (e  :&: s0))) (l2 :|: (l1 :|: (e' :&: s0)))
bonrrs :: (BProd b, BSum b) => b e e' -> b (l2 :|: (l1 :|: (f0 :&: e ))) (l2 :|: (l1 :|: (f0 :&: e')))
bonrrl :: (BSum b) => b e e' -> b (l2 :|: (l1 :|: (e  :|: r0))) (l2 :|: (l1 :|: (e' :|: r0)))
bonrrr :: (BSum b) => b e e' -> b (l2 :|: (l1 :|: (l0 :|: e ))) (l2 :|: (l1 :|: (l0 :|: e')))
bonffff :: (BProd b) => b e e' -> b ((((e  :&: s0) :&: s1) :&: s2) :&: s3) ((((e' :&: s0) :&: s1) :&: s2) :&: s3)
bonfffs :: (BProd b) => b e e' -> b ((((f0 :&: e ) :&: s1) :&: s2) :&: s3) ((((f0 :&: e') :&: s1) :&: s2) :&: s3)
bonfffl :: (BProd b, BSum b) => b e e' -> b ((((e  :|: r0) :&: s1) :&: s2) :&: s3) ((((e' :|: r0) :&: s1) :&: s2) :&: s3)
bonfffr :: (BProd b, BSum b) => b e e' -> b ((((l0 :|: e ) :&: s1) :&: s2) :&: s3) ((((l0 :|: e') :&: s1) :&: s2) :&: s3)
bonffsf :: (BProd b) => b e e' -> b (((f1 :&: (e  :&: s0)) :&: s2) :&: s3) (((f1 :&: (e' :&: s0)) :&: s2) :&: s3)
bonffss :: (BProd b) => b e e' -> b (((f1 :&: (f0 :&: e )) :&: s2) :&: s3) (((f1 :&: (f0 :&: e')) :&: s2) :&: s3)
bonffsl :: (BProd b, BSum b) => b e e' -> b (((f1 :&: (e  :|: r0)) :&: s2) :&: s3) (((f1 :&: (e' :|: r0)) :&: s2) :&: s3)
bonffsr :: (BProd b, BSum b) => b e e' -> b (((f1 :&: (l0 :|: e )) :&: s2) :&: s3) (((f1 :&: (l0 :|: e')) :&: s2) :&: s3)
bonfflf :: (BProd b, BSum b) => b e e' -> b ((((e  :&: s0) :|: r1) :&: s2) :&: s3) ((((e' :&: s0) :|: r1) :&: s2) :&: s3)
bonffls :: (BProd b, BSum b) => b e e' -> b ((((f0 :&: e ) :|: r1) :&: s2) :&: s3) ((((f0 :&: e') :|: r1) :&: s2) :&: s3)
bonffll :: (BProd b, BSum b) => b e e' -> b ((((e  :|: r0) :|: r1) :&: s2) :&: s3) ((((e' :|: r0) :|: r1) :&: s2) :&: s3)
bonfflr :: (BProd b, BSum b) => b e e' -> b ((((l0 :|: e ) :|: r1) :&: s2) :&: s3) ((((l0 :|: e') :|: r1) :&: s2) :&: s3)
bonffrf :: (BProd b, BSum b) => b e e' -> b (((l1 :|: (e  :&: s0)) :&: s2) :&: s3) (((l1 :|: (e' :&: s0)) :&: s2) :&: s3)
bonffrs :: (BProd b, BSum b) => b e e' -> b (((l1 :|: (f0 :&: e )) :&: s2) :&: s3) (((l1 :|: (f0 :&: e')) :&: s2) :&: s3)
bonffrl :: (BProd b, BSum b) => b e e' -> b (((l1 :|: (e  :|: r0)) :&: s2) :&: s3) (((l1 :|: (e' :|: r0)) :&: s2) :&: s3)
bonffrr :: (BProd b, BSum b) => b e e' -> b (((l1 :|: (l0 :|: e )) :&: s2) :&: s3) (((l1 :|: (l0 :|: e')) :&: s2) :&: s3)
bonfsff :: (BProd b) => b e e' -> b ((f2 :&: ((e  :&: s0) :&: s1)) :&: s3) ((f2 :&: ((e' :&: s0) :&: s1)) :&: s3)
bonfsfs :: (BProd b) => b e e' -> b ((f2 :&: ((f0 :&: e ) :&: s1)) :&: s3) ((f2 :&: ((f0 :&: e') :&: s1)) :&: s3)
bonfsfl :: (BProd b, BSum b) => b e e' -> b ((f2 :&: ((e  :|: r0) :&: s1)) :&: s3) ((f2 :&: ((e' :|: r0) :&: s1)) :&: s3)
bonfsfr :: (BProd b, BSum b) => b e e' -> b ((f2 :&: ((l0 :|: e ) :&: s1)) :&: s3) ((f2 :&: ((l0 :|: e') :&: s1)) :&: s3)
bonfssf :: (BProd b) => b e e' -> b ((f2 :&: (f1 :&: (e  :&: s0))) :&: s3) ((f2 :&: (f1 :&: (e' :&: s0))) :&: s3)
bonfsss :: (BProd b) => b e e' -> b ((f2 :&: (f1 :&: (f0 :&: e ))) :&: s3) ((f2 :&: (f1 :&: (f0 :&: e'))) :&: s3)
bonfssl :: (BProd b, BSum b) => b e e' -> b ((f2 :&: (f1 :&: (e  :|: r0))) :&: s3) ((f2 :&: (f1 :&: (e' :|: r0))) :&: s3)
bonfssr :: (BProd b, BSum b) => b e e' -> b ((f2 :&: (f1 :&: (l0 :|: e ))) :&: s3) ((f2 :&: (f1 :&: (l0 :|: e'))) :&: s3)
bonfslf :: (BProd b, BSum b) => b e e' -> b ((f2 :&: ((e  :&: s0) :|: r1)) :&: s3) ((f2 :&: ((e' :&: s0) :|: r1)) :&: s3)
bonfsls :: (BProd b, BSum b) => b e e' -> b ((f2 :&: ((f0 :&: e ) :|: r1)) :&: s3) ((f2 :&: ((f0 :&: e') :|: r1)) :&: s3)
bonfsll :: (BProd b, BSum b) => b e e' -> b ((f2 :&: ((e  :|: r0) :|: r1)) :&: s3) ((f2 :&: ((e' :|: r0) :|: r1)) :&: s3)
bonfslr :: (BProd b, BSum b) => b e e' -> b ((f2 :&: ((l0 :|: e ) :|: r1)) :&: s3) ((f2 :&: ((l0 :|: e') :|: r1)) :&: s3)
bonfsrf :: (BProd b, BSum b) => b e e' -> b ((f2 :&: (l1 :|: (e  :&: s0))) :&: s3) ((f2 :&: (l1 :|: (e' :&: s0))) :&: s3)
bonfsrs :: (BProd b, BSum b) => b e e' -> b ((f2 :&: (l1 :|: (f0 :&: e ))) :&: s3) ((f2 :&: (l1 :|: (f0 :&: e'))) :&: s3)
bonfsrl :: (BProd b, BSum b) => b e e' -> b ((f2 :&: (l1 :|: (e  :|: r0))) :&: s3) ((f2 :&: (l1 :|: (e' :|: r0))) :&: s3)
bonfsrr :: (BProd b, BSum b) => b e e' -> b ((f2 :&: (l1 :|: (l0 :|: e ))) :&: s3) ((f2 :&: (l1 :|: (l0 :|: e'))) :&: s3)
bonflff :: (BProd b, BSum b) => b e e' -> b ((((e  :&: s0) :&: s1) :|: r2) :&: s3) ((((e' :&: s0) :&: s1) :|: r2) :&: s3)
bonflfs :: (BProd b, BSum b) => b e e' -> b ((((f0 :&: e ) :&: s1) :|: r2) :&: s3) ((((f0 :&: e') :&: s1) :|: r2) :&: s3)
bonflfl :: (BProd b, BSum b) => b e e' -> b ((((e  :|: r0) :&: s1) :|: r2) :&: s3) ((((e' :|: r0) :&: s1) :|: r2) :&: s3)
bonflfr :: (BProd b, BSum b) => b e e' -> b ((((l0 :|: e ) :&: s1) :|: r2) :&: s3) ((((l0 :|: e') :&: s1) :|: r2) :&: s3)
bonflsf :: (BProd b, BSum b) => b e e' -> b (((f1 :&: (e  :&: s0)) :|: r2) :&: s3) (((f1 :&: (e' :&: s0)) :|: r2) :&: s3)
bonflss :: (BProd b, BSum b) => b e e' -> b (((f1 :&: (f0 :&: e )) :|: r2) :&: s3) (((f1 :&: (f0 :&: e')) :|: r2) :&: s3)
bonflsl :: (BProd b, BSum b) => b e e' -> b (((f1 :&: (e  :|: r0)) :|: r2) :&: s3) (((f1 :&: (e' :|: r0)) :|: r2) :&: s3)
bonflsr :: (BProd b, BSum b) => b e e' -> b (((f1 :&: (l0 :|: e )) :|: r2) :&: s3) (((f1 :&: (l0 :|: e')) :|: r2) :&: s3)
bonfllf :: (BProd b, BSum b) => b e e' -> b ((((e  :&: s0) :|: r1) :|: r2) :&: s3) ((((e' :&: s0) :|: r1) :|: r2) :&: s3)
bonflls :: (BProd b, BSum b) => b e e' -> b ((((f0 :&: e ) :|: r1) :|: r2) :&: s3) ((((f0 :&: e') :|: r1) :|: r2) :&: s3)
bonflll :: (BProd b, BSum b) => b e e' -> b ((((e  :|: r0) :|: r1) :|: r2) :&: s3) ((((e' :|: r0) :|: r1) :|: r2) :&: s3)
bonfllr :: (BProd b, BSum b) => b e e' -> b ((((l0 :|: e ) :|: r1) :|: r2) :&: s3) ((((l0 :|: e') :|: r1) :|: r2) :&: s3)
bonflrf :: (BProd b, BSum b) => b e e' -> b (((l1 :|: (e  :&: s0)) :|: r2) :&: s3) (((l1 :|: (e' :&: s0)) :|: r2) :&: s3)
bonflrs :: (BProd b, BSum b) => b e e' -> b (((l1 :|: (f0 :&: e )) :|: r2) :&: s3) (((l1 :|: (f0 :&: e')) :|: r2) :&: s3)
bonflrl :: (BProd b, BSum b) => b e e' -> b (((l1 :|: (e  :|: r0)) :|: r2) :&: s3) (((l1 :|: (e' :|: r0)) :|: r2) :&: s3)
bonflrr :: (BProd b, BSum b) => b e e' -> b (((l1 :|: (l0 :|: e )) :|: r2) :&: s3) (((l1 :|: (l0 :|: e')) :|: r2) :&: s3)
bonfrff :: (BProd b, BSum b) => b e e' -> b ((l2 :|: ((e  :&: s0) :&: s1)) :&: s3) ((l2 :|: ((e' :&: s0) :&: s1)) :&: s3)
bonfrfs :: (BProd b, BSum b) => b e e' -> b ((l2 :|: ((f0 :&: e ) :&: s1)) :&: s3) ((l2 :|: ((f0 :&: e') :&: s1)) :&: s3)
bonfrfl :: (BProd b, BSum b) => b e e' -> b ((l2 :|: ((e  :|: r0) :&: s1)) :&: s3) ((l2 :|: ((e' :|: r0) :&: s1)) :&: s3)
bonfrfr :: (BProd b, BSum b) => b e e' -> b ((l2 :|: ((l0 :|: e ) :&: s1)) :&: s3) ((l2 :|: ((l0 :|: e') :&: s1)) :&: s3)
bonfrsf :: (BProd b, BSum b) => b e e' -> b ((l2 :|: (f1 :&: (e  :&: s0))) :&: s3) ((l2 :|: (f1 :&: (e' :&: s0))) :&: s3)
bonfrss :: (BProd b, BSum b) => b e e' -> b ((l2 :|: (f1 :&: (f0 :&: e ))) :&: s3) ((l2 :|: (f1 :&: (f0 :&: e'))) :&: s3)
bonfrsl :: (BProd b, BSum b) => b e e' -> b ((l2 :|: (f1 :&: (e  :|: r0))) :&: s3) ((l2 :|: (f1 :&: (e' :|: r0))) :&: s3)
bonfrsr :: (BProd b, BSum b) => b e e' -> b ((l2 :|: (f1 :&: (l0 :|: e ))) :&: s3) ((l2 :|: (f1 :&: (l0 :|: e'))) :&: s3)
bonfrlf :: (BProd b, BSum b) => b e e' -> b ((l2 :|: ((e  :&: s0) :|: r1)) :&: s3) ((l2 :|: ((e' :&: s0) :|: r1)) :&: s3)
bonfrls :: (BProd b, BSum b) => b e e' -> b ((l2 :|: ((f0 :&: e ) :|: r1)) :&: s3) ((l2 :|: ((f0 :&: e') :|: r1)) :&: s3)
bonfrll :: (BProd b, BSum b) => b e e' -> b ((l2 :|: ((e  :|: r0) :|: r1)) :&: s3) ((l2 :|: ((e' :|: r0) :|: r1)) :&: s3)
bonfrlr :: (BProd b, BSum b) => b e e' -> b ((l2 :|: ((l0 :|: e ) :|: r1)) :&: s3) ((l2 :|: ((l0 :|: e') :|: r1)) :&: s3)
bonfrrf :: (BProd b, BSum b) => b e e' -> b ((l2 :|: (l1 :|: (e  :&: s0))) :&: s3) ((l2 :|: (l1 :|: (e' :&: s0))) :&: s3)
bonfrrs :: (BProd b, BSum b) => b e e' -> b ((l2 :|: (l1 :|: (f0 :&: e ))) :&: s3) ((l2 :|: (l1 :|: (f0 :&: e'))) :&: s3)
bonfrrl :: (BProd b, BSum b) => b e e' -> b ((l2 :|: (l1 :|: (e  :|: r0))) :&: s3) ((l2 :|: (l1 :|: (e' :|: r0))) :&: s3)
bonfrrr :: (BProd b, BSum b) => b e e' -> b ((l2 :|: (l1 :|: (l0 :|: e ))) :&: s3) ((l2 :|: (l1 :|: (l0 :|: e'))) :&: s3)
bonsfff :: (BProd b) => b e e' -> b (f3 :&: (((e  :&: s0) :&: s1) :&: s2)) (f3 :&: (((e' :&: s0) :&: s1) :&: s2))
bonsffs :: (BProd b) => b e e' -> b (f3 :&: (((f0 :&: e ) :&: s1) :&: s2)) (f3 :&: (((f0 :&: e') :&: s1) :&: s2))
bonsffl :: (BProd b, BSum b) => b e e' -> b (f3 :&: (((e  :|: r0) :&: s1) :&: s2)) (f3 :&: (((e' :|: r0) :&: s1) :&: s2))
bonsffr :: (BProd b, BSum b) => b e e' -> b (f3 :&: (((l0 :|: e ) :&: s1) :&: s2)) (f3 :&: (((l0 :|: e') :&: s1) :&: s2))
bonsfsf :: (BProd b) => b e e' -> b (f3 :&: ((f1 :&: (e  :&: s0)) :&: s2)) (f3 :&: ((f1 :&: (e' :&: s0)) :&: s2))
bonsfss :: (BProd b) => b e e' -> b (f3 :&: ((f1 :&: (f0 :&: e )) :&: s2)) (f3 :&: ((f1 :&: (f0 :&: e')) :&: s2))
bonsfsl :: (BProd b, BSum b) => b e e' -> b (f3 :&: ((f1 :&: (e  :|: r0)) :&: s2)) (f3 :&: ((f1 :&: (e' :|: r0)) :&: s2))
bonsfsr :: (BProd b, BSum b) => b e e' -> b (f3 :&: ((f1 :&: (l0 :|: e )) :&: s2)) (f3 :&: ((f1 :&: (l0 :|: e')) :&: s2))
bonsflf :: (BProd b, BSum b) => b e e' -> b (f3 :&: (((e  :&: s0) :|: r1) :&: s2)) (f3 :&: (((e' :&: s0) :|: r1) :&: s2))
bonsfls :: (BProd b, BSum b) => b e e' -> b (f3 :&: (((f0 :&: e ) :|: r1) :&: s2)) (f3 :&: (((f0 :&: e') :|: r1) :&: s2))
bonsfll :: (BProd b, BSum b) => b e e' -> b (f3 :&: (((e  :|: r0) :|: r1) :&: s2)) (f3 :&: (((e' :|: r0) :|: r1) :&: s2))
bonsflr :: (BProd b, BSum b) => b e e' -> b (f3 :&: (((l0 :|: e ) :|: r1) :&: s2)) (f3 :&: (((l0 :|: e') :|: r1) :&: s2))
bonsfrf :: (BProd b, BSum b) => b e e' -> b (f3 :&: ((l1 :|: (e  :&: s0)) :&: s2)) (f3 :&: ((l1 :|: (e' :&: s0)) :&: s2))
bonsfrs :: (BProd b, BSum b) => b e e' -> b (f3 :&: ((l1 :|: (f0 :&: e )) :&: s2)) (f3 :&: ((l1 :|: (f0 :&: e')) :&: s2))
bonsfrl :: (BProd b, BSum b) => b e e' -> b (f3 :&: ((l1 :|: (e  :|: r0)) :&: s2)) (f3 :&: ((l1 :|: (e' :|: r0)) :&: s2))
bonsfrr :: (BProd b, BSum b) => b e e' -> b (f3 :&: ((l1 :|: (l0 :|: e )) :&: s2)) (f3 :&: ((l1 :|: (l0 :|: e')) :&: s2))
bonssff :: (BProd b) => b e e' -> b (f3 :&: (f2 :&: ((e  :&: s0) :&: s1))) (f3 :&: (f2 :&: ((e' :&: s0) :&: s1)))
bonssfs :: (BProd b) => b e e' -> b (f3 :&: (f2 :&: ((f0 :&: e ) :&: s1))) (f3 :&: (f2 :&: ((f0 :&: e') :&: s1)))
bonssfl :: (BProd b, BSum b) => b e e' -> b (f3 :&: (f2 :&: ((e  :|: r0) :&: s1))) (f3 :&: (f2 :&: ((e' :|: r0) :&: s1)))
bonssfr :: (BProd b, BSum b) => b e e' -> b (f3 :&: (f2 :&: ((l0 :|: e ) :&: s1))) (f3 :&: (f2 :&: ((l0 :|: e') :&: s1)))
bonsssf :: (BProd b) => b e e' -> b (f3 :&: (f2 :&: (f1 :&: (e  :&: s0)))) (f3 :&: (f2 :&: (f1 :&: (e' :&: s0))))
bonssss :: (BProd b) => b e e' -> b (f3 :&: (f2 :&: (f1 :&: (f0 :&: e )))) (f3 :&: (f2 :&: (f1 :&: (f0 :&: e'))))
bonsssl :: (BProd b, BSum b) => b e e' -> b (f3 :&: (f2 :&: (f1 :&: (e  :|: r0)))) (f3 :&: (f2 :&: (f1 :&: (e' :|: r0))))
bonsssr :: (BProd b, BSum b) => b e e' -> b (f3 :&: (f2 :&: (f1 :&: (l0 :|: e )))) (f3 :&: (f2 :&: (f1 :&: (l0 :|: e'))))
bonsslf :: (BProd b, BSum b) => b e e' -> b (f3 :&: (f2 :&: ((e  :&: s0) :|: r1))) (f3 :&: (f2 :&: ((e' :&: s0) :|: r1)))
bonssls :: (BProd b, BSum b) => b e e' -> b (f3 :&: (f2 :&: ((f0 :&: e ) :|: r1))) (f3 :&: (f2 :&: ((f0 :&: e') :|: r1)))
bonssll :: (BProd b, BSum b) => b e e' -> b (f3 :&: (f2 :&: ((e  :|: r0) :|: r1))) (f3 :&: (f2 :&: ((e' :|: r0) :|: r1)))
bonsslr :: (BProd b, BSum b) => b e e' -> b (f3 :&: (f2 :&: ((l0 :|: e ) :|: r1))) (f3 :&: (f2 :&: ((l0 :|: e') :|: r1)))
bonssrf :: (BProd b, BSum b) => b e e' -> b (f3 :&: (f2 :&: (l1 :|: (e  :&: s0)))) (f3 :&: (f2 :&: (l1 :|: (e' :&: s0))))
bonssrs :: (BProd b, BSum b) => b e e' -> b (f3 :&: (f2 :&: (l1 :|: (f0 :&: e )))) (f3 :&: (f2 :&: (l1 :|: (f0 :&: e'))))
bonssrl :: (BProd b, BSum b) => b e e' -> b (f3 :&: (f2 :&: (l1 :|: (e  :|: r0)))) (f3 :&: (f2 :&: (l1 :|: (e' :|: r0))))
bonssrr :: (BProd b, BSum b) => b e e' -> b (f3 :&: (f2 :&: (l1 :|: (l0 :|: e )))) (f3 :&: (f2 :&: (l1 :|: (l0 :|: e'))))
bonslff :: (BProd b, BSum b) => b e e' -> b (f3 :&: (((e  :&: s0) :&: s1) :|: r2)) (f3 :&: (((e' :&: s0) :&: s1) :|: r2))
bonslfs :: (BProd b, BSum b) => b e e' -> b (f3 :&: (((f0 :&: e ) :&: s1) :|: r2)) (f3 :&: (((f0 :&: e') :&: s1) :|: r2))
bonslfl :: (BProd b, BSum b) => b e e' -> b (f3 :&: (((e  :|: r0) :&: s1) :|: r2)) (f3 :&: (((e' :|: r0) :&: s1) :|: r2))
bonslfr :: (BProd b, BSum b) => b e e' -> b (f3 :&: (((l0 :|: e ) :&: s1) :|: r2)) (f3 :&: (((l0 :|: e') :&: s1) :|: r2))
bonslsf :: (BProd b, BSum b) => b e e' -> b (f3 :&: ((f1 :&: (e  :&: s0)) :|: r2)) (f3 :&: ((f1 :&: (e' :&: s0)) :|: r2))
bonslss :: (BProd b, BSum b) => b e e' -> b (f3 :&: ((f1 :&: (f0 :&: e )) :|: r2)) (f3 :&: ((f1 :&: (f0 :&: e')) :|: r2))
bonslsl :: (BProd b, BSum b) => b e e' -> b (f3 :&: ((f1 :&: (e  :|: r0)) :|: r2)) (f3 :&: ((f1 :&: (e' :|: r0)) :|: r2))
bonslsr :: (BProd b, BSum b) => b e e' -> b (f3 :&: ((f1 :&: (l0 :|: e )) :|: r2)) (f3 :&: ((f1 :&: (l0 :|: e')) :|: r2))
bonsllf :: (BProd b, BSum b) => b e e' -> b (f3 :&: (((e  :&: s0) :|: r1) :|: r2)) (f3 :&: (((e' :&: s0) :|: r1) :|: r2))
bonslls :: (BProd b, BSum b) => b e e' -> b (f3 :&: (((f0 :&: e ) :|: r1) :|: r2)) (f3 :&: (((f0 :&: e') :|: r1) :|: r2))
bonslll :: (BProd b, BSum b) => b e e' -> b (f3 :&: (((e  :|: r0) :|: r1) :|: r2)) (f3 :&: (((e' :|: r0) :|: r1) :|: r2))
bonsllr :: (BProd b, BSum b) => b e e' -> b (f3 :&: (((l0 :|: e ) :|: r1) :|: r2)) (f3 :&: (((l0 :|: e') :|: r1) :|: r2))
bonslrf :: (BProd b, BSum b) => b e e' -> b (f3 :&: ((l1 :|: (e  :&: s0)) :|: r2)) (f3 :&: ((l1 :|: (e' :&: s0)) :|: r2))
bonslrs :: (BProd b, BSum b) => b e e' -> b (f3 :&: ((l1 :|: (f0 :&: e )) :|: r2)) (f3 :&: ((l1 :|: (f0 :&: e')) :|: r2))
bonslrl :: (BProd b, BSum b) => b e e' -> b (f3 :&: ((l1 :|: (e  :|: r0)) :|: r2)) (f3 :&: ((l1 :|: (e' :|: r0)) :|: r2))
bonslrr :: (BProd b, BSum b) => b e e' -> b (f3 :&: ((l1 :|: (l0 :|: e )) :|: r2)) (f3 :&: ((l1 :|: (l0 :|: e')) :|: r2))
bonsrff :: (BProd b, BSum b) => b e e' -> b (f3 :&: (l2 :|: ((e  :&: s0) :&: s1))) (f3 :&: (l2 :|: ((e' :&: s0) :&: s1)))
bonsrfs :: (BProd b, BSum b) => b e e' -> b (f3 :&: (l2 :|: ((f0 :&: e ) :&: s1))) (f3 :&: (l2 :|: ((f0 :&: e') :&: s1)))
bonsrfl :: (BProd b, BSum b) => b e e' -> b (f3 :&: (l2 :|: ((e  :|: r0) :&: s1))) (f3 :&: (l2 :|: ((e' :|: r0) :&: s1)))
bonsrfr :: (BProd b, BSum b) => b e e' -> b (f3 :&: (l2 :|: ((l0 :|: e ) :&: s1))) (f3 :&: (l2 :|: ((l0 :|: e') :&: s1)))
bonsrsf :: (BProd b, BSum b) => b e e' -> b (f3 :&: (l2 :|: (f1 :&: (e  :&: s0)))) (f3 :&: (l2 :|: (f1 :&: (e' :&: s0))))
bonsrss :: (BProd b, BSum b) => b e e' -> b (f3 :&: (l2 :|: (f1 :&: (f0 :&: e )))) (f3 :&: (l2 :|: (f1 :&: (f0 :&: e'))))
bonsrsl :: (BProd b, BSum b) => b e e' -> b (f3 :&: (l2 :|: (f1 :&: (e  :|: r0)))) (f3 :&: (l2 :|: (f1 :&: (e' :|: r0))))
bonsrsr :: (BProd b, BSum b) => b e e' -> b (f3 :&: (l2 :|: (f1 :&: (l0 :|: e )))) (f3 :&: (l2 :|: (f1 :&: (l0 :|: e'))))
bonsrlf :: (BProd b, BSum b) => b e e' -> b (f3 :&: (l2 :|: ((e  :&: s0) :|: r1))) (f3 :&: (l2 :|: ((e' :&: s0) :|: r1)))
bonsrls :: (BProd b, BSum b) => b e e' -> b (f3 :&: (l2 :|: ((f0 :&: e ) :|: r1))) (f3 :&: (l2 :|: ((f0 :&: e') :|: r1)))
bonsrll :: (BProd b, BSum b) => b e e' -> b (f3 :&: (l2 :|: ((e  :|: r0) :|: r1))) (f3 :&: (l2 :|: ((e' :|: r0) :|: r1)))
bonsrlr :: (BProd b, BSum b) => b e e' -> b (f3 :&: (l2 :|: ((l0 :|: e ) :|: r1))) (f3 :&: (l2 :|: ((l0 :|: e') :|: r1)))
bonsrrf :: (BProd b, BSum b) => b e e' -> b (f3 :&: (l2 :|: (l1 :|: (e  :&: s0)))) (f3 :&: (l2 :|: (l1 :|: (e' :&: s0))))
bonsrrs :: (BProd b, BSum b) => b e e' -> b (f3 :&: (l2 :|: (l1 :|: (f0 :&: e )))) (f3 :&: (l2 :|: (l1 :|: (f0 :&: e'))))
bonsrrl :: (BProd b, BSum b) => b e e' -> b (f3 :&: (l2 :|: (l1 :|: (e  :|: r0)))) (f3 :&: (l2 :|: (l1 :|: (e' :|: r0))))
bonsrrr :: (BProd b, BSum b) => b e e' -> b (f3 :&: (l2 :|: (l1 :|: (l0 :|: e )))) (f3 :&: (l2 :|: (l1 :|: (l0 :|: e'))))
bonlfff :: (BProd b, BSum b) => b e e' -> b ((((e  :&: s0) :&: s1) :&: s2) :|: r3) ((((e' :&: s0) :&: s1) :&: s2) :|: r3)
bonlffs :: (BProd b, BSum b) => b e e' -> b ((((f0 :&: e ) :&: s1) :&: s2) :|: r3) ((((f0 :&: e') :&: s1) :&: s2) :|: r3)
bonlffl :: (BProd b, BSum b) => b e e' -> b ((((e  :|: r0) :&: s1) :&: s2) :|: r3) ((((e' :|: r0) :&: s1) :&: s2) :|: r3)
bonlffr :: (BProd b, BSum b) => b e e' -> b ((((l0 :|: e ) :&: s1) :&: s2) :|: r3) ((((l0 :|: e') :&: s1) :&: s2) :|: r3)
bonlfsf :: (BProd b, BSum b) => b e e' -> b (((f1 :&: (e  :&: s0)) :&: s2) :|: r3) (((f1 :&: (e' :&: s0)) :&: s2) :|: r3)
bonlfss :: (BProd b, BSum b) => b e e' -> b (((f1 :&: (f0 :&: e )) :&: s2) :|: r3) (((f1 :&: (f0 :&: e')) :&: s2) :|: r3)
bonlfsl :: (BProd b, BSum b) => b e e' -> b (((f1 :&: (e  :|: r0)) :&: s2) :|: r3) (((f1 :&: (e' :|: r0)) :&: s2) :|: r3)
bonlfsr :: (BProd b, BSum b) => b e e' -> b (((f1 :&: (l0 :|: e )) :&: s2) :|: r3) (((f1 :&: (l0 :|: e')) :&: s2) :|: r3)
bonlflf :: (BProd b, BSum b) => b e e' -> b ((((e  :&: s0) :|: r1) :&: s2) :|: r3) ((((e' :&: s0) :|: r1) :&: s2) :|: r3)
bonlfls :: (BProd b, BSum b) => b e e' -> b ((((f0 :&: e ) :|: r1) :&: s2) :|: r3) ((((f0 :&: e') :|: r1) :&: s2) :|: r3)
bonlfll :: (BProd b, BSum b) => b e e' -> b ((((e  :|: r0) :|: r1) :&: s2) :|: r3) ((((e' :|: r0) :|: r1) :&: s2) :|: r3)
bonlflr :: (BProd b, BSum b) => b e e' -> b ((((l0 :|: e ) :|: r1) :&: s2) :|: r3) ((((l0 :|: e') :|: r1) :&: s2) :|: r3)
bonlfrf :: (BProd b, BSum b) => b e e' -> b (((l1 :|: (e  :&: s0)) :&: s2) :|: r3) (((l1 :|: (e' :&: s0)) :&: s2) :|: r3)
bonlfrs :: (BProd b, BSum b) => b e e' -> b (((l1 :|: (f0 :&: e )) :&: s2) :|: r3) (((l1 :|: (f0 :&: e')) :&: s2) :|: r3)
bonlfrl :: (BProd b, BSum b) => b e e' -> b (((l1 :|: (e  :|: r0)) :&: s2) :|: r3) (((l1 :|: (e' :|: r0)) :&: s2) :|: r3)
bonlfrr :: (BProd b, BSum b) => b e e' -> b (((l1 :|: (l0 :|: e )) :&: s2) :|: r3) (((l1 :|: (l0 :|: e')) :&: s2) :|: r3)
bonlsff :: (BProd b, BSum b) => b e e' -> b ((f2 :&: ((e  :&: s0) :&: s1)) :|: r3) ((f2 :&: ((e' :&: s0) :&: s1)) :|: r3)
bonlsfs :: (BProd b, BSum b) => b e e' -> b ((f2 :&: ((f0 :&: e ) :&: s1)) :|: r3) ((f2 :&: ((f0 :&: e') :&: s1)) :|: r3)
bonlsfl :: (BProd b, BSum b) => b e e' -> b ((f2 :&: ((e  :|: r0) :&: s1)) :|: r3) ((f2 :&: ((e' :|: r0) :&: s1)) :|: r3)
bonlsfr :: (BProd b, BSum b) => b e e' -> b ((f2 :&: ((l0 :|: e ) :&: s1)) :|: r3) ((f2 :&: ((l0 :|: e') :&: s1)) :|: r3)
bonlssf :: (BProd b, BSum b) => b e e' -> b ((f2 :&: (f1 :&: (e  :&: s0))) :|: r3) ((f2 :&: (f1 :&: (e' :&: s0))) :|: r3)
bonlsss :: (BProd b, BSum b) => b e e' -> b ((f2 :&: (f1 :&: (f0 :&: e ))) :|: r3) ((f2 :&: (f1 :&: (f0 :&: e'))) :|: r3)
bonlssl :: (BProd b, BSum b) => b e e' -> b ((f2 :&: (f1 :&: (e  :|: r0))) :|: r3) ((f2 :&: (f1 :&: (e' :|: r0))) :|: r3)
bonlssr :: (BProd b, BSum b) => b e e' -> b ((f2 :&: (f1 :&: (l0 :|: e ))) :|: r3) ((f2 :&: (f1 :&: (l0 :|: e'))) :|: r3)
bonlslf :: (BProd b, BSum b) => b e e' -> b ((f2 :&: ((e  :&: s0) :|: r1)) :|: r3) ((f2 :&: ((e' :&: s0) :|: r1)) :|: r3)
bonlsls :: (BProd b, BSum b) => b e e' -> b ((f2 :&: ((f0 :&: e ) :|: r1)) :|: r3) ((f2 :&: ((f0 :&: e') :|: r1)) :|: r3)
bonlsll :: (BProd b, BSum b) => b e e' -> b ((f2 :&: ((e  :|: r0) :|: r1)) :|: r3) ((f2 :&: ((e' :|: r0) :|: r1)) :|: r3)
bonlslr :: (BProd b, BSum b) => b e e' -> b ((f2 :&: ((l0 :|: e ) :|: r1)) :|: r3) ((f2 :&: ((l0 :|: e') :|: r1)) :|: r3)
bonlsrf :: (BProd b, BSum b) => b e e' -> b ((f2 :&: (l1 :|: (e  :&: s0))) :|: r3) ((f2 :&: (l1 :|: (e' :&: s0))) :|: r3)
bonlsrs :: (BProd b, BSum b) => b e e' -> b ((f2 :&: (l1 :|: (f0 :&: e ))) :|: r3) ((f2 :&: (l1 :|: (f0 :&: e'))) :|: r3)
bonlsrl :: (BProd b, BSum b) => b e e' -> b ((f2 :&: (l1 :|: (e  :|: r0))) :|: r3) ((f2 :&: (l1 :|: (e' :|: r0))) :|: r3)
bonlsrr :: (BProd b, BSum b) => b e e' -> b ((f2 :&: (l1 :|: (l0 :|: e ))) :|: r3) ((f2 :&: (l1 :|: (l0 :|: e'))) :|: r3)
bonllff :: (BProd b, BSum b) => b e e' -> b ((((e  :&: s0) :&: s1) :|: r2) :|: r3) ((((e' :&: s0) :&: s1) :|: r2) :|: r3)
bonllfs :: (BProd b, BSum b) => b e e' -> b ((((f0 :&: e ) :&: s1) :|: r2) :|: r3) ((((f0 :&: e') :&: s1) :|: r2) :|: r3)
bonllfl :: (BProd b, BSum b) => b e e' -> b ((((e  :|: r0) :&: s1) :|: r2) :|: r3) ((((e' :|: r0) :&: s1) :|: r2) :|: r3)
bonllfr :: (BProd b, BSum b) => b e e' -> b ((((l0 :|: e ) :&: s1) :|: r2) :|: r3) ((((l0 :|: e') :&: s1) :|: r2) :|: r3)
bonllsf :: (BProd b, BSum b) => b e e' -> b (((f1 :&: (e  :&: s0)) :|: r2) :|: r3) (((f1 :&: (e' :&: s0)) :|: r2) :|: r3)
bonllss :: (BProd b, BSum b) => b e e' -> b (((f1 :&: (f0 :&: e )) :|: r2) :|: r3) (((f1 :&: (f0 :&: e')) :|: r2) :|: r3)
bonllsl :: (BProd b, BSum b) => b e e' -> b (((f1 :&: (e  :|: r0)) :|: r2) :|: r3) (((f1 :&: (e' :|: r0)) :|: r2) :|: r3)
bonllsr :: (BProd b, BSum b) => b e e' -> b (((f1 :&: (l0 :|: e )) :|: r2) :|: r3) (((f1 :&: (l0 :|: e')) :|: r2) :|: r3)
bonlllf :: (BProd b, BSum b) => b e e' -> b ((((e  :&: s0) :|: r1) :|: r2) :|: r3) ((((e' :&: s0) :|: r1) :|: r2) :|: r3)
bonllls :: (BProd b, BSum b) => b e e' -> b ((((f0 :&: e ) :|: r1) :|: r2) :|: r3) ((((f0 :&: e') :|: r1) :|: r2) :|: r3)
bonllll :: (BSum b) => b e e' -> b ((((e  :|: r0) :|: r1) :|: r2) :|: r3) ((((e' :|: r0) :|: r1) :|: r2) :|: r3)
bonlllr :: (BSum b) => b e e' -> b ((((l0 :|: e ) :|: r1) :|: r2) :|: r3) ((((l0 :|: e') :|: r1) :|: r2) :|: r3)
bonllrf :: (BProd b, BSum b) => b e e' -> b (((l1 :|: (e  :&: s0)) :|: r2) :|: r3) (((l1 :|: (e' :&: s0)) :|: r2) :|: r3)
bonllrs :: (BProd b, BSum b) => b e e' -> b (((l1 :|: (f0 :&: e )) :|: r2) :|: r3) (((l1 :|: (f0 :&: e')) :|: r2) :|: r3)
bonllrl :: (BSum b) => b e e' -> b (((l1 :|: (e  :|: r0)) :|: r2) :|: r3) (((l1 :|: (e' :|: r0)) :|: r2) :|: r3)
bonllrr :: (BSum b) => b e e' -> b (((l1 :|: (l0 :|: e )) :|: r2) :|: r3) (((l1 :|: (l0 :|: e')) :|: r2) :|: r3)
bonlrff :: (BProd b, BSum b) => b e e' -> b ((l2 :|: ((e  :&: s0) :&: s1)) :|: r3) ((l2 :|: ((e' :&: s0) :&: s1)) :|: r3)
bonlrfs :: (BProd b, BSum b) => b e e' -> b ((l2 :|: ((f0 :&: e ) :&: s1)) :|: r3) ((l2 :|: ((f0 :&: e') :&: s1)) :|: r3)
bonlrfl :: (BProd b, BSum b) => b e e' -> b ((l2 :|: ((e  :|: r0) :&: s1)) :|: r3) ((l2 :|: ((e' :|: r0) :&: s1)) :|: r3)
bonlrfr :: (BProd b, BSum b) => b e e' -> b ((l2 :|: ((l0 :|: e ) :&: s1)) :|: r3) ((l2 :|: ((l0 :|: e') :&: s1)) :|: r3)
bonlrsf :: (BProd b, BSum b) => b e e' -> b ((l2 :|: (f1 :&: (e  :&: s0))) :|: r3) ((l2 :|: (f1 :&: (e' :&: s0))) :|: r3)
bonlrss :: (BProd b, BSum b) => b e e' -> b ((l2 :|: (f1 :&: (f0 :&: e ))) :|: r3) ((l2 :|: (f1 :&: (f0 :&: e'))) :|: r3)
bonlrsl :: (BProd b, BSum b) => b e e' -> b ((l2 :|: (f1 :&: (e  :|: r0))) :|: r3) ((l2 :|: (f1 :&: (e' :|: r0))) :|: r3)
bonlrsr :: (BProd b, BSum b) => b e e' -> b ((l2 :|: (f1 :&: (l0 :|: e ))) :|: r3) ((l2 :|: (f1 :&: (l0 :|: e'))) :|: r3)
bonlrlf :: (BProd b, BSum b) => b e e' -> b ((l2 :|: ((e  :&: s0) :|: r1)) :|: r3) ((l2 :|: ((e' :&: s0) :|: r1)) :|: r3)
bonlrls :: (BProd b, BSum b) => b e e' -> b ((l2 :|: ((f0 :&: e ) :|: r1)) :|: r3) ((l2 :|: ((f0 :&: e') :|: r1)) :|: r3)
bonlrll :: (BSum b) => b e e' -> b ((l2 :|: ((e  :|: r0) :|: r1)) :|: r3) ((l2 :|: ((e' :|: r0) :|: r1)) :|: r3)
bonlrlr :: (BSum b) => b e e' -> b ((l2 :|: ((l0 :|: e ) :|: r1)) :|: r3) ((l2 :|: ((l0 :|: e') :|: r1)) :|: r3)
bonlrrf :: (BProd b, BSum b) => b e e' -> b ((l2 :|: (l1 :|: (e  :&: s0))) :|: r3) ((l2 :|: (l1 :|: (e' :&: s0))) :|: r3)
bonlrrs :: (BProd b, BSum b) => b e e' -> b ((l2 :|: (l1 :|: (f0 :&: e ))) :|: r3) ((l2 :|: (l1 :|: (f0 :&: e'))) :|: r3)
bonlrrl :: (BSum b) => b e e' -> b ((l2 :|: (l1 :|: (e  :|: r0))) :|: r3) ((l2 :|: (l1 :|: (e' :|: r0))) :|: r3)
bonlrrr :: (BSum b) => b e e' -> b ((l2 :|: (l1 :|: (l0 :|: e ))) :|: r3) ((l2 :|: (l1 :|: (l0 :|: e'))) :|: r3)
bonrfff :: (BProd b, BSum b) => b e e' -> b (l3 :|: (((e  :&: s0) :&: s1) :&: s2)) (l3 :|: (((e' :&: s0) :&: s1) :&: s2))
bonrffs :: (BProd b, BSum b) => b e e' -> b (l3 :|: (((f0 :&: e ) :&: s1) :&: s2)) (l3 :|: (((f0 :&: e') :&: s1) :&: s2))
bonrffl :: (BProd b, BSum b) => b e e' -> b (l3 :|: (((e  :|: r0) :&: s1) :&: s2)) (l3 :|: (((e' :|: r0) :&: s1) :&: s2))
bonrffr :: (BProd b, BSum b) => b e e' -> b (l3 :|: (((l0 :|: e ) :&: s1) :&: s2)) (l3 :|: (((l0 :|: e') :&: s1) :&: s2))
bonrfsf :: (BProd b, BSum b) => b e e' -> b (l3 :|: ((f1 :&: (e  :&: s0)) :&: s2)) (l3 :|: ((f1 :&: (e' :&: s0)) :&: s2))
bonrfss :: (BProd b, BSum b) => b e e' -> b (l3 :|: ((f1 :&: (f0 :&: e )) :&: s2)) (l3 :|: ((f1 :&: (f0 :&: e')) :&: s2))
bonrfsl :: (BProd b, BSum b) => b e e' -> b (l3 :|: ((f1 :&: (e  :|: r0)) :&: s2)) (l3 :|: ((f1 :&: (e' :|: r0)) :&: s2))
bonrfsr :: (BProd b, BSum b) => b e e' -> b (l3 :|: ((f1 :&: (l0 :|: e )) :&: s2)) (l3 :|: ((f1 :&: (l0 :|: e')) :&: s2))
bonrflf :: (BProd b, BSum b) => b e e' -> b (l3 :|: (((e  :&: s0) :|: r1) :&: s2)) (l3 :|: (((e' :&: s0) :|: r1) :&: s2))
bonrfls :: (BProd b, BSum b) => b e e' -> b (l3 :|: (((f0 :&: e ) :|: r1) :&: s2)) (l3 :|: (((f0 :&: e') :|: r1) :&: s2))
bonrfll :: (BProd b, BSum b) => b e e' -> b (l3 :|: (((e  :|: r0) :|: r1) :&: s2)) (l3 :|: (((e' :|: r0) :|: r1) :&: s2))
bonrflr :: (BProd b, BSum b) => b e e' -> b (l3 :|: (((l0 :|: e ) :|: r1) :&: s2)) (l3 :|: (((l0 :|: e') :|: r1) :&: s2))
bonrfrf :: (BProd b, BSum b) => b e e' -> b (l3 :|: ((l1 :|: (e  :&: s0)) :&: s2)) (l3 :|: ((l1 :|: (e' :&: s0)) :&: s2))
bonrfrs :: (BProd b, BSum b) => b e e' -> b (l3 :|: ((l1 :|: (f0 :&: e )) :&: s2)) (l3 :|: ((l1 :|: (f0 :&: e')) :&: s2))
bonrfrl :: (BProd b, BSum b) => b e e' -> b (l3 :|: ((l1 :|: (e  :|: r0)) :&: s2)) (l3 :|: ((l1 :|: (e' :|: r0)) :&: s2))
bonrfrr :: (BProd b, BSum b) => b e e' -> b (l3 :|: ((l1 :|: (l0 :|: e )) :&: s2)) (l3 :|: ((l1 :|: (l0 :|: e')) :&: s2))
bonrsff :: (BProd b, BSum b) => b e e' -> b (l3 :|: (f2 :&: ((e  :&: s0) :&: s1))) (l3 :|: (f2 :&: ((e' :&: s0) :&: s1)))
bonrsfs :: (BProd b, BSum b) => b e e' -> b (l3 :|: (f2 :&: ((f0 :&: e ) :&: s1))) (l3 :|: (f2 :&: ((f0 :&: e') :&: s1)))
bonrsfl :: (BProd b, BSum b) => b e e' -> b (l3 :|: (f2 :&: ((e  :|: r0) :&: s1))) (l3 :|: (f2 :&: ((e' :|: r0) :&: s1)))
bonrsfr :: (BProd b, BSum b) => b e e' -> b (l3 :|: (f2 :&: ((l0 :|: e ) :&: s1))) (l3 :|: (f2 :&: ((l0 :|: e') :&: s1)))
bonrssf :: (BProd b, BSum b) => b e e' -> b (l3 :|: (f2 :&: (f1 :&: (e  :&: s0)))) (l3 :|: (f2 :&: (f1 :&: (e' :&: s0))))
bonrsss :: (BProd b, BSum b) => b e e' -> b (l3 :|: (f2 :&: (f1 :&: (f0 :&: e )))) (l3 :|: (f2 :&: (f1 :&: (f0 :&: e'))))
bonrssl :: (BProd b, BSum b) => b e e' -> b (l3 :|: (f2 :&: (f1 :&: (e  :|: r0)))) (l3 :|: (f2 :&: (f1 :&: (e' :|: r0))))
bonrssr :: (BProd b, BSum b) => b e e' -> b (l3 :|: (f2 :&: (f1 :&: (l0 :|: e )))) (l3 :|: (f2 :&: (f1 :&: (l0 :|: e'))))
bonrslf :: (BProd b, BSum b) => b e e' -> b (l3 :|: (f2 :&: ((e  :&: s0) :|: r1))) (l3 :|: (f2 :&: ((e' :&: s0) :|: r1)))
bonrsls :: (BProd b, BSum b) => b e e' -> b (l3 :|: (f2 :&: ((f0 :&: e ) :|: r1))) (l3 :|: (f2 :&: ((f0 :&: e') :|: r1)))
bonrsll :: (BProd b, BSum b) => b e e' -> b (l3 :|: (f2 :&: ((e  :|: r0) :|: r1))) (l3 :|: (f2 :&: ((e' :|: r0) :|: r1)))
bonrslr :: (BProd b, BSum b) => b e e' -> b (l3 :|: (f2 :&: ((l0 :|: e ) :|: r1))) (l3 :|: (f2 :&: ((l0 :|: e') :|: r1)))
bonrsrf :: (BProd b, BSum b) => b e e' -> b (l3 :|: (f2 :&: (l1 :|: (e  :&: s0)))) (l3 :|: (f2 :&: (l1 :|: (e' :&: s0))))
bonrsrs :: (BProd b, BSum b) => b e e' -> b (l3 :|: (f2 :&: (l1 :|: (f0 :&: e )))) (l3 :|: (f2 :&: (l1 :|: (f0 :&: e'))))
bonrsrl :: (BProd b, BSum b) => b e e' -> b (l3 :|: (f2 :&: (l1 :|: (e  :|: r0)))) (l3 :|: (f2 :&: (l1 :|: (e' :|: r0))))
bonrsrr :: (BProd b, BSum b) => b e e' -> b (l3 :|: (f2 :&: (l1 :|: (l0 :|: e )))) (l3 :|: (f2 :&: (l1 :|: (l0 :|: e'))))
bonrlff :: (BProd b, BSum b) => b e e' -> b (l3 :|: (((e  :&: s0) :&: s1) :|: r2)) (l3 :|: (((e' :&: s0) :&: s1) :|: r2))
bonrlfs :: (BProd b, BSum b) => b e e' -> b (l3 :|: (((f0 :&: e ) :&: s1) :|: r2)) (l3 :|: (((f0 :&: e') :&: s1) :|: r2))
bonrlfl :: (BProd b, BSum b) => b e e' -> b (l3 :|: (((e  :|: r0) :&: s1) :|: r2)) (l3 :|: (((e' :|: r0) :&: s1) :|: r2))
bonrlfr :: (BProd b, BSum b) => b e e' -> b (l3 :|: (((l0 :|: e ) :&: s1) :|: r2)) (l3 :|: (((l0 :|: e') :&: s1) :|: r2))
bonrlsf :: (BProd b, BSum b) => b e e' -> b (l3 :|: ((f1 :&: (e  :&: s0)) :|: r2)) (l3 :|: ((f1 :&: (e' :&: s0)) :|: r2))
bonrlss :: (BProd b, BSum b) => b e e' -> b (l3 :|: ((f1 :&: (f0 :&: e )) :|: r2)) (l3 :|: ((f1 :&: (f0 :&: e')) :|: r2))
bonrlsl :: (BProd b, BSum b) => b e e' -> b (l3 :|: ((f1 :&: (e  :|: r0)) :|: r2)) (l3 :|: ((f1 :&: (e' :|: r0)) :|: r2))
bonrlsr :: (BProd b, BSum b) => b e e' -> b (l3 :|: ((f1 :&: (l0 :|: e )) :|: r2)) (l3 :|: ((f1 :&: (l0 :|: e')) :|: r2))
bonrllf :: (BProd b, BSum b) => b e e' -> b (l3 :|: (((e  :&: s0) :|: r1) :|: r2)) (l3 :|: (((e' :&: s0) :|: r1) :|: r2))
bonrlls :: (BProd b, BSum b) => b e e' -> b (l3 :|: (((f0 :&: e ) :|: r1) :|: r2)) (l3 :|: (((f0 :&: e') :|: r1) :|: r2))
bonrlll :: (BSum b) => b e e' -> b (l3 :|: (((e  :|: r0) :|: r1) :|: r2)) (l3 :|: (((e' :|: r0) :|: r1) :|: r2))
bonrllr :: (BSum b) => b e e' -> b (l3 :|: (((l0 :|: e ) :|: r1) :|: r2)) (l3 :|: (((l0 :|: e') :|: r1) :|: r2))
bonrlrf :: (BProd b, BSum b) => b e e' -> b (l3 :|: ((l1 :|: (e  :&: s0)) :|: r2)) (l3 :|: ((l1 :|: (e' :&: s0)) :|: r2))
bonrlrs :: (BProd b, BSum b) => b e e' -> b (l3 :|: ((l1 :|: (f0 :&: e )) :|: r2)) (l3 :|: ((l1 :|: (f0 :&: e')) :|: r2))
bonrlrl :: (BSum b) => b e e' -> b (l3 :|: ((l1 :|: (e  :|: r0)) :|: r2)) (l3 :|: ((l1 :|: (e' :|: r0)) :|: r2))
bonrlrr :: (BSum b) => b e e' -> b (l3 :|: ((l1 :|: (l0 :|: e )) :|: r2)) (l3 :|: ((l1 :|: (l0 :|: e')) :|: r2))
bonrrff :: (BProd b, BSum b) => b e e' -> b (l3 :|: (l2 :|: ((e  :&: s0) :&: s1))) (l3 :|: (l2 :|: ((e' :&: s0) :&: s1)))
bonrrfs :: (BProd b, BSum b) => b e e' -> b (l3 :|: (l2 :|: ((f0 :&: e ) :&: s1))) (l3 :|: (l2 :|: ((f0 :&: e') :&: s1)))
bonrrfl :: (BProd b, BSum b) => b e e' -> b (l3 :|: (l2 :|: ((e  :|: r0) :&: s1))) (l3 :|: (l2 :|: ((e' :|: r0) :&: s1)))
bonrrfr :: (BProd b, BSum b) => b e e' -> b (l3 :|: (l2 :|: ((l0 :|: e ) :&: s1))) (l3 :|: (l2 :|: ((l0 :|: e') :&: s1)))
bonrrsf :: (BProd b, BSum b) => b e e' -> b (l3 :|: (l2 :|: (f1 :&: (e  :&: s0)))) (l3 :|: (l2 :|: (f1 :&: (e' :&: s0))))
bonrrss :: (BProd b, BSum b) => b e e' -> b (l3 :|: (l2 :|: (f1 :&: (f0 :&: e )))) (l3 :|: (l2 :|: (f1 :&: (f0 :&: e'))))
bonrrsl :: (BProd b, BSum b) => b e e' -> b (l3 :|: (l2 :|: (f1 :&: (e  :|: r0)))) (l3 :|: (l2 :|: (f1 :&: (e' :|: r0))))
bonrrsr :: (BProd b, BSum b) => b e e' -> b (l3 :|: (l2 :|: (f1 :&: (l0 :|: e )))) (l3 :|: (l2 :|: (f1 :&: (l0 :|: e'))))
bonrrlf :: (BProd b, BSum b) => b e e' -> b (l3 :|: (l2 :|: ((e  :&: s0) :|: r1))) (l3 :|: (l2 :|: ((e' :&: s0) :|: r1)))
bonrrls :: (BProd b, BSum b) => b e e' -> b (l3 :|: (l2 :|: ((f0 :&: e ) :|: r1))) (l3 :|: (l2 :|: ((f0 :&: e') :|: r1)))
bonrrll :: (BSum b) => b e e' -> b (l3 :|: (l2 :|: ((e  :|: r0) :|: r1))) (l3 :|: (l2 :|: ((e' :|: r0) :|: r1)))
bonrrlr :: (BSum b) => b e e' -> b (l3 :|: (l2 :|: ((l0 :|: e ) :|: r1))) (l3 :|: (l2 :|: ((l0 :|: e') :|: r1)))
bonrrrf :: (BProd b, BSum b) => b e e' -> b (l3 :|: (l2 :|: (l1 :|: (e  :&: s0)))) (l3 :|: (l2 :|: (l1 :|: (e' :&: s0))))
bonrrrs :: (BProd b, BSum b) => b e e' -> b (l3 :|: (l2 :|: (l1 :|: (f0 :&: e )))) (l3 :|: (l2 :|: (l1 :|: (f0 :&: e'))))
bonrrrl :: (BSum b) => b e e' -> b (l3 :|: (l2 :|: (l1 :|: (e  :|: r0)))) (l3 :|: (l2 :|: (l1 :|: (e' :|: r0))))
bonrrrr :: (BSum b) => b e e' -> b (l3 :|: (l2 :|: (l1 :|: (l0 :|: e )))) (l3 :|: (l2 :|: (l1 :|: (l0 :|: e'))))
bonfffff :: (BProd b) => b e e' -> b (((((e  :&: s0) :&: s1) :&: s2) :&: s3) :&: s4) (((((e' :&: s0) :&: s1) :&: s2) :&: s3) :&: s4)
bonffffs :: (BProd b) => b e e' -> b (((((f0 :&: e ) :&: s1) :&: s2) :&: s3) :&: s4) (((((f0 :&: e') :&: s1) :&: s2) :&: s3) :&: s4)
bonffffl :: (BProd b, BSum b) => b e e' -> b (((((e  :|: r0) :&: s1) :&: s2) :&: s3) :&: s4) (((((e' :|: r0) :&: s1) :&: s2) :&: s3) :&: s4)
bonffffr :: (BProd b, BSum b) => b e e' -> b (((((l0 :|: e ) :&: s1) :&: s2) :&: s3) :&: s4) (((((l0 :|: e') :&: s1) :&: s2) :&: s3) :&: s4)
bonfffsf :: (BProd b) => b e e' -> b ((((f1 :&: (e  :&: s0)) :&: s2) :&: s3) :&: s4) ((((f1 :&: (e' :&: s0)) :&: s2) :&: s3) :&: s4)
bonfffss :: (BProd b) => b e e' -> b ((((f1 :&: (f0 :&: e )) :&: s2) :&: s3) :&: s4) ((((f1 :&: (f0 :&: e')) :&: s2) :&: s3) :&: s4)
bonfffsl :: (BProd b, BSum b) => b e e' -> b ((((f1 :&: (e  :|: r0)) :&: s2) :&: s3) :&: s4) ((((f1 :&: (e' :|: r0)) :&: s2) :&: s3) :&: s4)
bonfffsr :: (BProd b, BSum b) => b e e' -> b ((((f1 :&: (l0 :|: e )) :&: s2) :&: s3) :&: s4) ((((f1 :&: (l0 :|: e')) :&: s2) :&: s3) :&: s4)
bonffflf :: (BProd b, BSum b) => b e e' -> b (((((e  :&: s0) :|: r1) :&: s2) :&: s3) :&: s4) (((((e' :&: s0) :|: r1) :&: s2) :&: s3) :&: s4)
bonfffls :: (BProd b, BSum b) => b e e' -> b (((((f0 :&: e ) :|: r1) :&: s2) :&: s3) :&: s4) (((((f0 :&: e') :|: r1) :&: s2) :&: s3) :&: s4)
bonfffll :: (BProd b, BSum b) => b e e' -> b (((((e  :|: r0) :|: r1) :&: s2) :&: s3) :&: s4) (((((e' :|: r0) :|: r1) :&: s2) :&: s3) :&: s4)
bonffflr :: (BProd b, BSum b) => b e e' -> b (((((l0 :|: e ) :|: r1) :&: s2) :&: s3) :&: s4) (((((l0 :|: e') :|: r1) :&: s2) :&: s3) :&: s4)
bonfffrf :: (BProd b, BSum b) => b e e' -> b ((((l1 :|: (e  :&: s0)) :&: s2) :&: s3) :&: s4) ((((l1 :|: (e' :&: s0)) :&: s2) :&: s3) :&: s4)
bonfffrs :: (BProd b, BSum b) => b e e' -> b ((((l1 :|: (f0 :&: e )) :&: s2) :&: s3) :&: s4) ((((l1 :|: (f0 :&: e')) :&: s2) :&: s3) :&: s4)
bonfffrl :: (BProd b, BSum b) => b e e' -> b ((((l1 :|: (e  :|: r0)) :&: s2) :&: s3) :&: s4) ((((l1 :|: (e' :|: r0)) :&: s2) :&: s3) :&: s4)
bonfffrr :: (BProd b, BSum b) => b e e' -> b ((((l1 :|: (l0 :|: e )) :&: s2) :&: s3) :&: s4) ((((l1 :|: (l0 :|: e')) :&: s2) :&: s3) :&: s4)
bonffsff :: (BProd b) => b e e' -> b (((f2 :&: ((e  :&: s0) :&: s1)) :&: s3) :&: s4) (((f2 :&: ((e' :&: s0) :&: s1)) :&: s3) :&: s4)
bonffsfs :: (BProd b) => b e e' -> b (((f2 :&: ((f0 :&: e ) :&: s1)) :&: s3) :&: s4) (((f2 :&: ((f0 :&: e') :&: s1)) :&: s3) :&: s4)
bonffsfl :: (BProd b, BSum b) => b e e' -> b (((f2 :&: ((e  :|: r0) :&: s1)) :&: s3) :&: s4) (((f2 :&: ((e' :|: r0) :&: s1)) :&: s3) :&: s4)
bonffsfr :: (BProd b, BSum b) => b e e' -> b (((f2 :&: ((l0 :|: e ) :&: s1)) :&: s3) :&: s4) (((f2 :&: ((l0 :|: e') :&: s1)) :&: s3) :&: s4)
bonffssf :: (BProd b) => b e e' -> b (((f2 :&: (f1 :&: (e  :&: s0))) :&: s3) :&: s4) (((f2 :&: (f1 :&: (e' :&: s0))) :&: s3) :&: s4)
bonffsss :: (BProd b) => b e e' -> b (((f2 :&: (f1 :&: (f0 :&: e ))) :&: s3) :&: s4) (((f2 :&: (f1 :&: (f0 :&: e'))) :&: s3) :&: s4)
bonffssl :: (BProd b, BSum b) => b e e' -> b (((f2 :&: (f1 :&: (e  :|: r0))) :&: s3) :&: s4) (((f2 :&: (f1 :&: (e' :|: r0))) :&: s3) :&: s4)
bonffssr :: (BProd b, BSum b) => b e e' -> b (((f2 :&: (f1 :&: (l0 :|: e ))) :&: s3) :&: s4) (((f2 :&: (f1 :&: (l0 :|: e'))) :&: s3) :&: s4)
bonffslf :: (BProd b, BSum b) => b e e' -> b (((f2 :&: ((e  :&: s0) :|: r1)) :&: s3) :&: s4) (((f2 :&: ((e' :&: s0) :|: r1)) :&: s3) :&: s4)
bonffsls :: (BProd b, BSum b) => b e e' -> b (((f2 :&: ((f0 :&: e ) :|: r1)) :&: s3) :&: s4) (((f2 :&: ((f0 :&: e') :|: r1)) :&: s3) :&: s4)
bonffsll :: (BProd b, BSum b) => b e e' -> b (((f2 :&: ((e  :|: r0) :|: r1)) :&: s3) :&: s4) (((f2 :&: ((e' :|: r0) :|: r1)) :&: s3) :&: s4)
bonffslr :: (BProd b, BSum b) => b e e' -> b (((f2 :&: ((l0 :|: e ) :|: r1)) :&: s3) :&: s4) (((f2 :&: ((l0 :|: e') :|: r1)) :&: s3) :&: s4)
bonffsrf :: (BProd b, BSum b) => b e e' -> b (((f2 :&: (l1 :|: (e  :&: s0))) :&: s3) :&: s4) (((f2 :&: (l1 :|: (e' :&: s0))) :&: s3) :&: s4)
bonffsrs :: (BProd b, BSum b) => b e e' -> b (((f2 :&: (l1 :|: (f0 :&: e ))) :&: s3) :&: s4) (((f2 :&: (l1 :|: (f0 :&: e'))) :&: s3) :&: s4)
bonffsrl :: (BProd b, BSum b) => b e e' -> b (((f2 :&: (l1 :|: (e  :|: r0))) :&: s3) :&: s4) (((f2 :&: (l1 :|: (e' :|: r0))) :&: s3) :&: s4)
bonffsrr :: (BProd b, BSum b) => b e e' -> b (((f2 :&: (l1 :|: (l0 :|: e ))) :&: s3) :&: s4) (((f2 :&: (l1 :|: (l0 :|: e'))) :&: s3) :&: s4)
bonfflff :: (BProd b, BSum b) => b e e' -> b (((((e  :&: s0) :&: s1) :|: r2) :&: s3) :&: s4) (((((e' :&: s0) :&: s1) :|: r2) :&: s3) :&: s4)
bonfflfs :: (BProd b, BSum b) => b e e' -> b (((((f0 :&: e ) :&: s1) :|: r2) :&: s3) :&: s4) (((((f0 :&: e') :&: s1) :|: r2) :&: s3) :&: s4)
bonfflfl :: (BProd b, BSum b) => b e e' -> b (((((e  :|: r0) :&: s1) :|: r2) :&: s3) :&: s4) (((((e' :|: r0) :&: s1) :|: r2) :&: s3) :&: s4)
bonfflfr :: (BProd b, BSum b) => b e e' -> b (((((l0 :|: e ) :&: s1) :|: r2) :&: s3) :&: s4) (((((l0 :|: e') :&: s1) :|: r2) :&: s3) :&: s4)
bonfflsf :: (BProd b, BSum b) => b e e' -> b ((((f1 :&: (e  :&: s0)) :|: r2) :&: s3) :&: s4) ((((f1 :&: (e' :&: s0)) :|: r2) :&: s3) :&: s4)
bonfflss :: (BProd b, BSum b) => b e e' -> b ((((f1 :&: (f0 :&: e )) :|: r2) :&: s3) :&: s4) ((((f1 :&: (f0 :&: e')) :|: r2) :&: s3) :&: s4)
bonfflsl :: (BProd b, BSum b) => b e e' -> b ((((f1 :&: (e  :|: r0)) :|: r2) :&: s3) :&: s4) ((((f1 :&: (e' :|: r0)) :|: r2) :&: s3) :&: s4)
bonfflsr :: (BProd b, BSum b) => b e e' -> b ((((f1 :&: (l0 :|: e )) :|: r2) :&: s3) :&: s4) ((((f1 :&: (l0 :|: e')) :|: r2) :&: s3) :&: s4)
bonffllf :: (BProd b, BSum b) => b e e' -> b (((((e  :&: s0) :|: r1) :|: r2) :&: s3) :&: s4) (((((e' :&: s0) :|: r1) :|: r2) :&: s3) :&: s4)
bonfflls :: (BProd b, BSum b) => b e e' -> b (((((f0 :&: e ) :|: r1) :|: r2) :&: s3) :&: s4) (((((f0 :&: e') :|: r1) :|: r2) :&: s3) :&: s4)
bonfflll :: (BProd b, BSum b) => b e e' -> b (((((e  :|: r0) :|: r1) :|: r2) :&: s3) :&: s4) (((((e' :|: r0) :|: r1) :|: r2) :&: s3) :&: s4)
bonffllr :: (BProd b, BSum b) => b e e' -> b (((((l0 :|: e ) :|: r1) :|: r2) :&: s3) :&: s4) (((((l0 :|: e') :|: r1) :|: r2) :&: s3) :&: s4)
bonfflrf :: (BProd b, BSum b) => b e e' -> b ((((l1 :|: (e  :&: s0)) :|: r2) :&: s3) :&: s4) ((((l1 :|: (e' :&: s0)) :|: r2) :&: s3) :&: s4)
bonfflrs :: (BProd b, BSum b) => b e e' -> b ((((l1 :|: (f0 :&: e )) :|: r2) :&: s3) :&: s4) ((((l1 :|: (f0 :&: e')) :|: r2) :&: s3) :&: s4)
bonfflrl :: (BProd b, BSum b) => b e e' -> b ((((l1 :|: (e  :|: r0)) :|: r2) :&: s3) :&: s4) ((((l1 :|: (e' :|: r0)) :|: r2) :&: s3) :&: s4)
bonfflrr :: (BProd b, BSum b) => b e e' -> b ((((l1 :|: (l0 :|: e )) :|: r2) :&: s3) :&: s4) ((((l1 :|: (l0 :|: e')) :|: r2) :&: s3) :&: s4)
bonffrff :: (BProd b, BSum b) => b e e' -> b (((l2 :|: ((e  :&: s0) :&: s1)) :&: s3) :&: s4) (((l2 :|: ((e' :&: s0) :&: s1)) :&: s3) :&: s4)
bonffrfs :: (BProd b, BSum b) => b e e' -> b (((l2 :|: ((f0 :&: e ) :&: s1)) :&: s3) :&: s4) (((l2 :|: ((f0 :&: e') :&: s1)) :&: s3) :&: s4)
bonffrfl :: (BProd b, BSum b) => b e e' -> b (((l2 :|: ((e  :|: r0) :&: s1)) :&: s3) :&: s4) (((l2 :|: ((e' :|: r0) :&: s1)) :&: s3) :&: s4)
bonffrfr :: (BProd b, BSum b) => b e e' -> b (((l2 :|: ((l0 :|: e ) :&: s1)) :&: s3) :&: s4) (((l2 :|: ((l0 :|: e') :&: s1)) :&: s3) :&: s4)
bonffrsf :: (BProd b, BSum b) => b e e' -> b (((l2 :|: (f1 :&: (e  :&: s0))) :&: s3) :&: s4) (((l2 :|: (f1 :&: (e' :&: s0))) :&: s3) :&: s4)
bonffrss :: (BProd b, BSum b) => b e e' -> b (((l2 :|: (f1 :&: (f0 :&: e ))) :&: s3) :&: s4) (((l2 :|: (f1 :&: (f0 :&: e'))) :&: s3) :&: s4)
bonffrsl :: (BProd b, BSum b) => b e e' -> b (((l2 :|: (f1 :&: (e  :|: r0))) :&: s3) :&: s4) (((l2 :|: (f1 :&: (e' :|: r0))) :&: s3) :&: s4)
bonffrsr :: (BProd b, BSum b) => b e e' -> b (((l2 :|: (f1 :&: (l0 :|: e ))) :&: s3) :&: s4) (((l2 :|: (f1 :&: (l0 :|: e'))) :&: s3) :&: s4)
bonffrlf :: (BProd b, BSum b) => b e e' -> b (((l2 :|: ((e  :&: s0) :|: r1)) :&: s3) :&: s4) (((l2 :|: ((e' :&: s0) :|: r1)) :&: s3) :&: s4)
bonffrls :: (BProd b, BSum b) => b e e' -> b (((l2 :|: ((f0 :&: e ) :|: r1)) :&: s3) :&: s4) (((l2 :|: ((f0 :&: e') :|: r1)) :&: s3) :&: s4)
bonffrll :: (BProd b, BSum b) => b e e' -> b (((l2 :|: ((e  :|: r0) :|: r1)) :&: s3) :&: s4) (((l2 :|: ((e' :|: r0) :|: r1)) :&: s3) :&: s4)
bonffrlr :: (BProd b, BSum b) => b e e' -> b (((l2 :|: ((l0 :|: e ) :|: r1)) :&: s3) :&: s4) (((l2 :|: ((l0 :|: e') :|: r1)) :&: s3) :&: s4)
bonffrrf :: (BProd b, BSum b) => b e e' -> b (((l2 :|: (l1 :|: (e  :&: s0))) :&: s3) :&: s4) (((l2 :|: (l1 :|: (e' :&: s0))) :&: s3) :&: s4)
bonffrrs :: (BProd b, BSum b) => b e e' -> b (((l2 :|: (l1 :|: (f0 :&: e ))) :&: s3) :&: s4) (((l2 :|: (l1 :|: (f0 :&: e'))) :&: s3) :&: s4)
bonffrrl :: (BProd b, BSum b) => b e e' -> b (((l2 :|: (l1 :|: (e  :|: r0))) :&: s3) :&: s4) (((l2 :|: (l1 :|: (e' :|: r0))) :&: s3) :&: s4)
bonffrrr :: (BProd b, BSum b) => b e e' -> b (((l2 :|: (l1 :|: (l0 :|: e ))) :&: s3) :&: s4) (((l2 :|: (l1 :|: (l0 :|: e'))) :&: s3) :&: s4)
bonfsfff :: (BProd b) => b e e' -> b ((f3 :&: (((e  :&: s0) :&: s1) :&: s2)) :&: s4) ((f3 :&: (((e' :&: s0) :&: s1) :&: s2)) :&: s4)
bonfsffs :: (BProd b) => b e e' -> b ((f3 :&: (((f0 :&: e ) :&: s1) :&: s2)) :&: s4) ((f3 :&: (((f0 :&: e') :&: s1) :&: s2)) :&: s4)
bonfsffl :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (((e  :|: r0) :&: s1) :&: s2)) :&: s4) ((f3 :&: (((e' :|: r0) :&: s1) :&: s2)) :&: s4)
bonfsffr :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (((l0 :|: e ) :&: s1) :&: s2)) :&: s4) ((f3 :&: (((l0 :|: e') :&: s1) :&: s2)) :&: s4)
bonfsfsf :: (BProd b) => b e e' -> b ((f3 :&: ((f1 :&: (e  :&: s0)) :&: s2)) :&: s4) ((f3 :&: ((f1 :&: (e' :&: s0)) :&: s2)) :&: s4)
bonfsfss :: (BProd b) => b e e' -> b ((f3 :&: ((f1 :&: (f0 :&: e )) :&: s2)) :&: s4) ((f3 :&: ((f1 :&: (f0 :&: e')) :&: s2)) :&: s4)
bonfsfsl :: (BProd b, BSum b) => b e e' -> b ((f3 :&: ((f1 :&: (e  :|: r0)) :&: s2)) :&: s4) ((f3 :&: ((f1 :&: (e' :|: r0)) :&: s2)) :&: s4)
bonfsfsr :: (BProd b, BSum b) => b e e' -> b ((f3 :&: ((f1 :&: (l0 :|: e )) :&: s2)) :&: s4) ((f3 :&: ((f1 :&: (l0 :|: e')) :&: s2)) :&: s4)
bonfsflf :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (((e  :&: s0) :|: r1) :&: s2)) :&: s4) ((f3 :&: (((e' :&: s0) :|: r1) :&: s2)) :&: s4)
bonfsfls :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (((f0 :&: e ) :|: r1) :&: s2)) :&: s4) ((f3 :&: (((f0 :&: e') :|: r1) :&: s2)) :&: s4)
bonfsfll :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (((e  :|: r0) :|: r1) :&: s2)) :&: s4) ((f3 :&: (((e' :|: r0) :|: r1) :&: s2)) :&: s4)
bonfsflr :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (((l0 :|: e ) :|: r1) :&: s2)) :&: s4) ((f3 :&: (((l0 :|: e') :|: r1) :&: s2)) :&: s4)
bonfsfrf :: (BProd b, BSum b) => b e e' -> b ((f3 :&: ((l1 :|: (e  :&: s0)) :&: s2)) :&: s4) ((f3 :&: ((l1 :|: (e' :&: s0)) :&: s2)) :&: s4)
bonfsfrs :: (BProd b, BSum b) => b e e' -> b ((f3 :&: ((l1 :|: (f0 :&: e )) :&: s2)) :&: s4) ((f3 :&: ((l1 :|: (f0 :&: e')) :&: s2)) :&: s4)
bonfsfrl :: (BProd b, BSum b) => b e e' -> b ((f3 :&: ((l1 :|: (e  :|: r0)) :&: s2)) :&: s4) ((f3 :&: ((l1 :|: (e' :|: r0)) :&: s2)) :&: s4)
bonfsfrr :: (BProd b, BSum b) => b e e' -> b ((f3 :&: ((l1 :|: (l0 :|: e )) :&: s2)) :&: s4) ((f3 :&: ((l1 :|: (l0 :|: e')) :&: s2)) :&: s4)
bonfssff :: (BProd b) => b e e' -> b ((f3 :&: (f2 :&: ((e  :&: s0) :&: s1))) :&: s4) ((f3 :&: (f2 :&: ((e' :&: s0) :&: s1))) :&: s4)
bonfssfs :: (BProd b) => b e e' -> b ((f3 :&: (f2 :&: ((f0 :&: e ) :&: s1))) :&: s4) ((f3 :&: (f2 :&: ((f0 :&: e') :&: s1))) :&: s4)
bonfssfl :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (f2 :&: ((e  :|: r0) :&: s1))) :&: s4) ((f3 :&: (f2 :&: ((e' :|: r0) :&: s1))) :&: s4)
bonfssfr :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (f2 :&: ((l0 :|: e ) :&: s1))) :&: s4) ((f3 :&: (f2 :&: ((l0 :|: e') :&: s1))) :&: s4)
bonfsssf :: (BProd b) => b e e' -> b ((f3 :&: (f2 :&: (f1 :&: (e  :&: s0)))) :&: s4) ((f3 :&: (f2 :&: (f1 :&: (e' :&: s0)))) :&: s4)
bonfssss :: (BProd b) => b e e' -> b ((f3 :&: (f2 :&: (f1 :&: (f0 :&: e )))) :&: s4) ((f3 :&: (f2 :&: (f1 :&: (f0 :&: e')))) :&: s4)
bonfsssl :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (f2 :&: (f1 :&: (e  :|: r0)))) :&: s4) ((f3 :&: (f2 :&: (f1 :&: (e' :|: r0)))) :&: s4)
bonfsssr :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (f2 :&: (f1 :&: (l0 :|: e )))) :&: s4) ((f3 :&: (f2 :&: (f1 :&: (l0 :|: e')))) :&: s4)
bonfsslf :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (f2 :&: ((e  :&: s0) :|: r1))) :&: s4) ((f3 :&: (f2 :&: ((e' :&: s0) :|: r1))) :&: s4)
bonfssls :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (f2 :&: ((f0 :&: e ) :|: r1))) :&: s4) ((f3 :&: (f2 :&: ((f0 :&: e') :|: r1))) :&: s4)
bonfssll :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (f2 :&: ((e  :|: r0) :|: r1))) :&: s4) ((f3 :&: (f2 :&: ((e' :|: r0) :|: r1))) :&: s4)
bonfsslr :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (f2 :&: ((l0 :|: e ) :|: r1))) :&: s4) ((f3 :&: (f2 :&: ((l0 :|: e') :|: r1))) :&: s4)
bonfssrf :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (f2 :&: (l1 :|: (e  :&: s0)))) :&: s4) ((f3 :&: (f2 :&: (l1 :|: (e' :&: s0)))) :&: s4)
bonfssrs :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (f2 :&: (l1 :|: (f0 :&: e )))) :&: s4) ((f3 :&: (f2 :&: (l1 :|: (f0 :&: e')))) :&: s4)
bonfssrl :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (f2 :&: (l1 :|: (e  :|: r0)))) :&: s4) ((f3 :&: (f2 :&: (l1 :|: (e' :|: r0)))) :&: s4)
bonfssrr :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (f2 :&: (l1 :|: (l0 :|: e )))) :&: s4) ((f3 :&: (f2 :&: (l1 :|: (l0 :|: e')))) :&: s4)
bonfslff :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (((e  :&: s0) :&: s1) :|: r2)) :&: s4) ((f3 :&: (((e' :&: s0) :&: s1) :|: r2)) :&: s4)
bonfslfs :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (((f0 :&: e ) :&: s1) :|: r2)) :&: s4) ((f3 :&: (((f0 :&: e') :&: s1) :|: r2)) :&: s4)
bonfslfl :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (((e  :|: r0) :&: s1) :|: r2)) :&: s4) ((f3 :&: (((e' :|: r0) :&: s1) :|: r2)) :&: s4)
bonfslfr :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (((l0 :|: e ) :&: s1) :|: r2)) :&: s4) ((f3 :&: (((l0 :|: e') :&: s1) :|: r2)) :&: s4)
bonfslsf :: (BProd b, BSum b) => b e e' -> b ((f3 :&: ((f1 :&: (e  :&: s0)) :|: r2)) :&: s4) ((f3 :&: ((f1 :&: (e' :&: s0)) :|: r2)) :&: s4)
bonfslss :: (BProd b, BSum b) => b e e' -> b ((f3 :&: ((f1 :&: (f0 :&: e )) :|: r2)) :&: s4) ((f3 :&: ((f1 :&: (f0 :&: e')) :|: r2)) :&: s4)
bonfslsl :: (BProd b, BSum b) => b e e' -> b ((f3 :&: ((f1 :&: (e  :|: r0)) :|: r2)) :&: s4) ((f3 :&: ((f1 :&: (e' :|: r0)) :|: r2)) :&: s4)
bonfslsr :: (BProd b, BSum b) => b e e' -> b ((f3 :&: ((f1 :&: (l0 :|: e )) :|: r2)) :&: s4) ((f3 :&: ((f1 :&: (l0 :|: e')) :|: r2)) :&: s4)
bonfsllf :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (((e  :&: s0) :|: r1) :|: r2)) :&: s4) ((f3 :&: (((e' :&: s0) :|: r1) :|: r2)) :&: s4)
bonfslls :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (((f0 :&: e ) :|: r1) :|: r2)) :&: s4) ((f3 :&: (((f0 :&: e') :|: r1) :|: r2)) :&: s4)
bonfslll :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (((e  :|: r0) :|: r1) :|: r2)) :&: s4) ((f3 :&: (((e' :|: r0) :|: r1) :|: r2)) :&: s4)
bonfsllr :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (((l0 :|: e ) :|: r1) :|: r2)) :&: s4) ((f3 :&: (((l0 :|: e') :|: r1) :|: r2)) :&: s4)
bonfslrf :: (BProd b, BSum b) => b e e' -> b ((f3 :&: ((l1 :|: (e  :&: s0)) :|: r2)) :&: s4) ((f3 :&: ((l1 :|: (e' :&: s0)) :|: r2)) :&: s4)
bonfslrs :: (BProd b, BSum b) => b e e' -> b ((f3 :&: ((l1 :|: (f0 :&: e )) :|: r2)) :&: s4) ((f3 :&: ((l1 :|: (f0 :&: e')) :|: r2)) :&: s4)
bonfslrl :: (BProd b, BSum b) => b e e' -> b ((f3 :&: ((l1 :|: (e  :|: r0)) :|: r2)) :&: s4) ((f3 :&: ((l1 :|: (e' :|: r0)) :|: r2)) :&: s4)
bonfslrr :: (BProd b, BSum b) => b e e' -> b ((f3 :&: ((l1 :|: (l0 :|: e )) :|: r2)) :&: s4) ((f3 :&: ((l1 :|: (l0 :|: e')) :|: r2)) :&: s4)
bonfsrff :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (l2 :|: ((e  :&: s0) :&: s1))) :&: s4) ((f3 :&: (l2 :|: ((e' :&: s0) :&: s1))) :&: s4)
bonfsrfs :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (l2 :|: ((f0 :&: e ) :&: s1))) :&: s4) ((f3 :&: (l2 :|: ((f0 :&: e') :&: s1))) :&: s4)
bonfsrfl :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (l2 :|: ((e  :|: r0) :&: s1))) :&: s4) ((f3 :&: (l2 :|: ((e' :|: r0) :&: s1))) :&: s4)
bonfsrfr :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (l2 :|: ((l0 :|: e ) :&: s1))) :&: s4) ((f3 :&: (l2 :|: ((l0 :|: e') :&: s1))) :&: s4)
bonfsrsf :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (l2 :|: (f1 :&: (e  :&: s0)))) :&: s4) ((f3 :&: (l2 :|: (f1 :&: (e' :&: s0)))) :&: s4)
bonfsrss :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (l2 :|: (f1 :&: (f0 :&: e )))) :&: s4) ((f3 :&: (l2 :|: (f1 :&: (f0 :&: e')))) :&: s4)
bonfsrsl :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (l2 :|: (f1 :&: (e  :|: r0)))) :&: s4) ((f3 :&: (l2 :|: (f1 :&: (e' :|: r0)))) :&: s4)
bonfsrsr :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (l2 :|: (f1 :&: (l0 :|: e )))) :&: s4) ((f3 :&: (l2 :|: (f1 :&: (l0 :|: e')))) :&: s4)
bonfsrlf :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (l2 :|: ((e  :&: s0) :|: r1))) :&: s4) ((f3 :&: (l2 :|: ((e' :&: s0) :|: r1))) :&: s4)
bonfsrls :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (l2 :|: ((f0 :&: e ) :|: r1))) :&: s4) ((f3 :&: (l2 :|: ((f0 :&: e') :|: r1))) :&: s4)
bonfsrll :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (l2 :|: ((e  :|: r0) :|: r1))) :&: s4) ((f3 :&: (l2 :|: ((e' :|: r0) :|: r1))) :&: s4)
bonfsrlr :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (l2 :|: ((l0 :|: e ) :|: r1))) :&: s4) ((f3 :&: (l2 :|: ((l0 :|: e') :|: r1))) :&: s4)
bonfsrrf :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (l2 :|: (l1 :|: (e  :&: s0)))) :&: s4) ((f3 :&: (l2 :|: (l1 :|: (e' :&: s0)))) :&: s4)
bonfsrrs :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (l2 :|: (l1 :|: (f0 :&: e )))) :&: s4) ((f3 :&: (l2 :|: (l1 :|: (f0 :&: e')))) :&: s4)
bonfsrrl :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (l2 :|: (l1 :|: (e  :|: r0)))) :&: s4) ((f3 :&: (l2 :|: (l1 :|: (e' :|: r0)))) :&: s4)
bonfsrrr :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (l2 :|: (l1 :|: (l0 :|: e )))) :&: s4) ((f3 :&: (l2 :|: (l1 :|: (l0 :|: e')))) :&: s4)
bonflfff :: (BProd b, BSum b) => b e e' -> b (((((e  :&: s0) :&: s1) :&: s2) :|: r3) :&: s4) (((((e' :&: s0) :&: s1) :&: s2) :|: r3) :&: s4)
bonflffs :: (BProd b, BSum b) => b e e' -> b (((((f0 :&: e ) :&: s1) :&: s2) :|: r3) :&: s4) (((((f0 :&: e') :&: s1) :&: s2) :|: r3) :&: s4)
bonflffl :: (BProd b, BSum b) => b e e' -> b (((((e  :|: r0) :&: s1) :&: s2) :|: r3) :&: s4) (((((e' :|: r0) :&: s1) :&: s2) :|: r3) :&: s4)
bonflffr :: (BProd b, BSum b) => b e e' -> b (((((l0 :|: e ) :&: s1) :&: s2) :|: r3) :&: s4) (((((l0 :|: e') :&: s1) :&: s2) :|: r3) :&: s4)
bonflfsf :: (BProd b, BSum b) => b e e' -> b ((((f1 :&: (e  :&: s0)) :&: s2) :|: r3) :&: s4) ((((f1 :&: (e' :&: s0)) :&: s2) :|: r3) :&: s4)
bonflfss :: (BProd b, BSum b) => b e e' -> b ((((f1 :&: (f0 :&: e )) :&: s2) :|: r3) :&: s4) ((((f1 :&: (f0 :&: e')) :&: s2) :|: r3) :&: s4)
bonflfsl :: (BProd b, BSum b) => b e e' -> b ((((f1 :&: (e  :|: r0)) :&: s2) :|: r3) :&: s4) ((((f1 :&: (e' :|: r0)) :&: s2) :|: r3) :&: s4)
bonflfsr :: (BProd b, BSum b) => b e e' -> b ((((f1 :&: (l0 :|: e )) :&: s2) :|: r3) :&: s4) ((((f1 :&: (l0 :|: e')) :&: s2) :|: r3) :&: s4)
bonflflf :: (BProd b, BSum b) => b e e' -> b (((((e  :&: s0) :|: r1) :&: s2) :|: r3) :&: s4) (((((e' :&: s0) :|: r1) :&: s2) :|: r3) :&: s4)
bonflfls :: (BProd b, BSum b) => b e e' -> b (((((f0 :&: e ) :|: r1) :&: s2) :|: r3) :&: s4) (((((f0 :&: e') :|: r1) :&: s2) :|: r3) :&: s4)
bonflfll :: (BProd b, BSum b) => b e e' -> b (((((e  :|: r0) :|: r1) :&: s2) :|: r3) :&: s4) (((((e' :|: r0) :|: r1) :&: s2) :|: r3) :&: s4)
bonflflr :: (BProd b, BSum b) => b e e' -> b (((((l0 :|: e ) :|: r1) :&: s2) :|: r3) :&: s4) (((((l0 :|: e') :|: r1) :&: s2) :|: r3) :&: s4)
bonflfrf :: (BProd b, BSum b) => b e e' -> b ((((l1 :|: (e  :&: s0)) :&: s2) :|: r3) :&: s4) ((((l1 :|: (e' :&: s0)) :&: s2) :|: r3) :&: s4)
bonflfrs :: (BProd b, BSum b) => b e e' -> b ((((l1 :|: (f0 :&: e )) :&: s2) :|: r3) :&: s4) ((((l1 :|: (f0 :&: e')) :&: s2) :|: r3) :&: s4)
bonflfrl :: (BProd b, BSum b) => b e e' -> b ((((l1 :|: (e  :|: r0)) :&: s2) :|: r3) :&: s4) ((((l1 :|: (e' :|: r0)) :&: s2) :|: r3) :&: s4)
bonflfrr :: (BProd b, BSum b) => b e e' -> b ((((l1 :|: (l0 :|: e )) :&: s2) :|: r3) :&: s4) ((((l1 :|: (l0 :|: e')) :&: s2) :|: r3) :&: s4)
bonflsff :: (BProd b, BSum b) => b e e' -> b (((f2 :&: ((e  :&: s0) :&: s1)) :|: r3) :&: s4) (((f2 :&: ((e' :&: s0) :&: s1)) :|: r3) :&: s4)
bonflsfs :: (BProd b, BSum b) => b e e' -> b (((f2 :&: ((f0 :&: e ) :&: s1)) :|: r3) :&: s4) (((f2 :&: ((f0 :&: e') :&: s1)) :|: r3) :&: s4)
bonflsfl :: (BProd b, BSum b) => b e e' -> b (((f2 :&: ((e  :|: r0) :&: s1)) :|: r3) :&: s4) (((f2 :&: ((e' :|: r0) :&: s1)) :|: r3) :&: s4)
bonflsfr :: (BProd b, BSum b) => b e e' -> b (((f2 :&: ((l0 :|: e ) :&: s1)) :|: r3) :&: s4) (((f2 :&: ((l0 :|: e') :&: s1)) :|: r3) :&: s4)
bonflssf :: (BProd b, BSum b) => b e e' -> b (((f2 :&: (f1 :&: (e  :&: s0))) :|: r3) :&: s4) (((f2 :&: (f1 :&: (e' :&: s0))) :|: r3) :&: s4)
bonflsss :: (BProd b, BSum b) => b e e' -> b (((f2 :&: (f1 :&: (f0 :&: e ))) :|: r3) :&: s4) (((f2 :&: (f1 :&: (f0 :&: e'))) :|: r3) :&: s4)
bonflssl :: (BProd b, BSum b) => b e e' -> b (((f2 :&: (f1 :&: (e  :|: r0))) :|: r3) :&: s4) (((f2 :&: (f1 :&: (e' :|: r0))) :|: r3) :&: s4)
bonflssr :: (BProd b, BSum b) => b e e' -> b (((f2 :&: (f1 :&: (l0 :|: e ))) :|: r3) :&: s4) (((f2 :&: (f1 :&: (l0 :|: e'))) :|: r3) :&: s4)
bonflslf :: (BProd b, BSum b) => b e e' -> b (((f2 :&: ((e  :&: s0) :|: r1)) :|: r3) :&: s4) (((f2 :&: ((e' :&: s0) :|: r1)) :|: r3) :&: s4)
bonflsls :: (BProd b, BSum b) => b e e' -> b (((f2 :&: ((f0 :&: e ) :|: r1)) :|: r3) :&: s4) (((f2 :&: ((f0 :&: e') :|: r1)) :|: r3) :&: s4)
bonflsll :: (BProd b, BSum b) => b e e' -> b (((f2 :&: ((e  :|: r0) :|: r1)) :|: r3) :&: s4) (((f2 :&: ((e' :|: r0) :|: r1)) :|: r3) :&: s4)
bonflslr :: (BProd b, BSum b) => b e e' -> b (((f2 :&: ((l0 :|: e ) :|: r1)) :|: r3) :&: s4) (((f2 :&: ((l0 :|: e') :|: r1)) :|: r3) :&: s4)
bonflsrf :: (BProd b, BSum b) => b e e' -> b (((f2 :&: (l1 :|: (e  :&: s0))) :|: r3) :&: s4) (((f2 :&: (l1 :|: (e' :&: s0))) :|: r3) :&: s4)
bonflsrs :: (BProd b, BSum b) => b e e' -> b (((f2 :&: (l1 :|: (f0 :&: e ))) :|: r3) :&: s4) (((f2 :&: (l1 :|: (f0 :&: e'))) :|: r3) :&: s4)
bonflsrl :: (BProd b, BSum b) => b e e' -> b (((f2 :&: (l1 :|: (e  :|: r0))) :|: r3) :&: s4) (((f2 :&: (l1 :|: (e' :|: r0))) :|: r3) :&: s4)
bonflsrr :: (BProd b, BSum b) => b e e' -> b (((f2 :&: (l1 :|: (l0 :|: e ))) :|: r3) :&: s4) (((f2 :&: (l1 :|: (l0 :|: e'))) :|: r3) :&: s4)
bonfllff :: (BProd b, BSum b) => b e e' -> b (((((e  :&: s0) :&: s1) :|: r2) :|: r3) :&: s4) (((((e' :&: s0) :&: s1) :|: r2) :|: r3) :&: s4)
bonfllfs :: (BProd b, BSum b) => b e e' -> b (((((f0 :&: e ) :&: s1) :|: r2) :|: r3) :&: s4) (((((f0 :&: e') :&: s1) :|: r2) :|: r3) :&: s4)
bonfllfl :: (BProd b, BSum b) => b e e' -> b (((((e  :|: r0) :&: s1) :|: r2) :|: r3) :&: s4) (((((e' :|: r0) :&: s1) :|: r2) :|: r3) :&: s4)
bonfllfr :: (BProd b, BSum b) => b e e' -> b (((((l0 :|: e ) :&: s1) :|: r2) :|: r3) :&: s4) (((((l0 :|: e') :&: s1) :|: r2) :|: r3) :&: s4)
bonfllsf :: (BProd b, BSum b) => b e e' -> b ((((f1 :&: (e  :&: s0)) :|: r2) :|: r3) :&: s4) ((((f1 :&: (e' :&: s0)) :|: r2) :|: r3) :&: s4)
bonfllss :: (BProd b, BSum b) => b e e' -> b ((((f1 :&: (f0 :&: e )) :|: r2) :|: r3) :&: s4) ((((f1 :&: (f0 :&: e')) :|: r2) :|: r3) :&: s4)
bonfllsl :: (BProd b, BSum b) => b e e' -> b ((((f1 :&: (e  :|: r0)) :|: r2) :|: r3) :&: s4) ((((f1 :&: (e' :|: r0)) :|: r2) :|: r3) :&: s4)
bonfllsr :: (BProd b, BSum b) => b e e' -> b ((((f1 :&: (l0 :|: e )) :|: r2) :|: r3) :&: s4) ((((f1 :&: (l0 :|: e')) :|: r2) :|: r3) :&: s4)
bonflllf :: (BProd b, BSum b) => b e e' -> b (((((e  :&: s0) :|: r1) :|: r2) :|: r3) :&: s4) (((((e' :&: s0) :|: r1) :|: r2) :|: r3) :&: s4)
bonfllls :: (BProd b, BSum b) => b e e' -> b (((((f0 :&: e ) :|: r1) :|: r2) :|: r3) :&: s4) (((((f0 :&: e') :|: r1) :|: r2) :|: r3) :&: s4)
bonfllll :: (BProd b, BSum b) => b e e' -> b (((((e  :|: r0) :|: r1) :|: r2) :|: r3) :&: s4) (((((e' :|: r0) :|: r1) :|: r2) :|: r3) :&: s4)
bonflllr :: (BProd b, BSum b) => b e e' -> b (((((l0 :|: e ) :|: r1) :|: r2) :|: r3) :&: s4) (((((l0 :|: e') :|: r1) :|: r2) :|: r3) :&: s4)
bonfllrf :: (BProd b, BSum b) => b e e' -> b ((((l1 :|: (e  :&: s0)) :|: r2) :|: r3) :&: s4) ((((l1 :|: (e' :&: s0)) :|: r2) :|: r3) :&: s4)
bonfllrs :: (BProd b, BSum b) => b e e' -> b ((((l1 :|: (f0 :&: e )) :|: r2) :|: r3) :&: s4) ((((l1 :|: (f0 :&: e')) :|: r2) :|: r3) :&: s4)
bonfllrl :: (BProd b, BSum b) => b e e' -> b ((((l1 :|: (e  :|: r0)) :|: r2) :|: r3) :&: s4) ((((l1 :|: (e' :|: r0)) :|: r2) :|: r3) :&: s4)
bonfllrr :: (BProd b, BSum b) => b e e' -> b ((((l1 :|: (l0 :|: e )) :|: r2) :|: r3) :&: s4) ((((l1 :|: (l0 :|: e')) :|: r2) :|: r3) :&: s4)
bonflrff :: (BProd b, BSum b) => b e e' -> b (((l2 :|: ((e  :&: s0) :&: s1)) :|: r3) :&: s4) (((l2 :|: ((e' :&: s0) :&: s1)) :|: r3) :&: s4)
bonflrfs :: (BProd b, BSum b) => b e e' -> b (((l2 :|: ((f0 :&: e ) :&: s1)) :|: r3) :&: s4) (((l2 :|: ((f0 :&: e') :&: s1)) :|: r3) :&: s4)
bonflrfl :: (BProd b, BSum b) => b e e' -> b (((l2 :|: ((e  :|: r0) :&: s1)) :|: r3) :&: s4) (((l2 :|: ((e' :|: r0) :&: s1)) :|: r3) :&: s4)
bonflrfr :: (BProd b, BSum b) => b e e' -> b (((l2 :|: ((l0 :|: e ) :&: s1)) :|: r3) :&: s4) (((l2 :|: ((l0 :|: e') :&: s1)) :|: r3) :&: s4)
bonflrsf :: (BProd b, BSum b) => b e e' -> b (((l2 :|: (f1 :&: (e  :&: s0))) :|: r3) :&: s4) (((l2 :|: (f1 :&: (e' :&: s0))) :|: r3) :&: s4)
bonflrss :: (BProd b, BSum b) => b e e' -> b (((l2 :|: (f1 :&: (f0 :&: e ))) :|: r3) :&: s4) (((l2 :|: (f1 :&: (f0 :&: e'))) :|: r3) :&: s4)
bonflrsl :: (BProd b, BSum b) => b e e' -> b (((l2 :|: (f1 :&: (e  :|: r0))) :|: r3) :&: s4) (((l2 :|: (f1 :&: (e' :|: r0))) :|: r3) :&: s4)
bonflrsr :: (BProd b, BSum b) => b e e' -> b (((l2 :|: (f1 :&: (l0 :|: e ))) :|: r3) :&: s4) (((l2 :|: (f1 :&: (l0 :|: e'))) :|: r3) :&: s4)
bonflrlf :: (BProd b, BSum b) => b e e' -> b (((l2 :|: ((e  :&: s0) :|: r1)) :|: r3) :&: s4) (((l2 :|: ((e' :&: s0) :|: r1)) :|: r3) :&: s4)
bonflrls :: (BProd b, BSum b) => b e e' -> b (((l2 :|: ((f0 :&: e ) :|: r1)) :|: r3) :&: s4) (((l2 :|: ((f0 :&: e') :|: r1)) :|: r3) :&: s4)
bonflrll :: (BProd b, BSum b) => b e e' -> b (((l2 :|: ((e  :|: r0) :|: r1)) :|: r3) :&: s4) (((l2 :|: ((e' :|: r0) :|: r1)) :|: r3) :&: s4)
bonflrlr :: (BProd b, BSum b) => b e e' -> b (((l2 :|: ((l0 :|: e ) :|: r1)) :|: r3) :&: s4) (((l2 :|: ((l0 :|: e') :|: r1)) :|: r3) :&: s4)
bonflrrf :: (BProd b, BSum b) => b e e' -> b (((l2 :|: (l1 :|: (e  :&: s0))) :|: r3) :&: s4) (((l2 :|: (l1 :|: (e' :&: s0))) :|: r3) :&: s4)
bonflrrs :: (BProd b, BSum b) => b e e' -> b (((l2 :|: (l1 :|: (f0 :&: e ))) :|: r3) :&: s4) (((l2 :|: (l1 :|: (f0 :&: e'))) :|: r3) :&: s4)
bonflrrl :: (BProd b, BSum b) => b e e' -> b (((l2 :|: (l1 :|: (e  :|: r0))) :|: r3) :&: s4) (((l2 :|: (l1 :|: (e' :|: r0))) :|: r3) :&: s4)
bonflrrr :: (BProd b, BSum b) => b e e' -> b (((l2 :|: (l1 :|: (l0 :|: e ))) :|: r3) :&: s4) (((l2 :|: (l1 :|: (l0 :|: e'))) :|: r3) :&: s4)
bonfrfff :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (((e  :&: s0) :&: s1) :&: s2)) :&: s4) ((l3 :|: (((e' :&: s0) :&: s1) :&: s2)) :&: s4)
bonfrffs :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (((f0 :&: e ) :&: s1) :&: s2)) :&: s4) ((l3 :|: (((f0 :&: e') :&: s1) :&: s2)) :&: s4)
bonfrffl :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (((e  :|: r0) :&: s1) :&: s2)) :&: s4) ((l3 :|: (((e' :|: r0) :&: s1) :&: s2)) :&: s4)
bonfrffr :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (((l0 :|: e ) :&: s1) :&: s2)) :&: s4) ((l3 :|: (((l0 :|: e') :&: s1) :&: s2)) :&: s4)
bonfrfsf :: (BProd b, BSum b) => b e e' -> b ((l3 :|: ((f1 :&: (e  :&: s0)) :&: s2)) :&: s4) ((l3 :|: ((f1 :&: (e' :&: s0)) :&: s2)) :&: s4)
bonfrfss :: (BProd b, BSum b) => b e e' -> b ((l3 :|: ((f1 :&: (f0 :&: e )) :&: s2)) :&: s4) ((l3 :|: ((f1 :&: (f0 :&: e')) :&: s2)) :&: s4)
bonfrfsl :: (BProd b, BSum b) => b e e' -> b ((l3 :|: ((f1 :&: (e  :|: r0)) :&: s2)) :&: s4) ((l3 :|: ((f1 :&: (e' :|: r0)) :&: s2)) :&: s4)
bonfrfsr :: (BProd b, BSum b) => b e e' -> b ((l3 :|: ((f1 :&: (l0 :|: e )) :&: s2)) :&: s4) ((l3 :|: ((f1 :&: (l0 :|: e')) :&: s2)) :&: s4)
bonfrflf :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (((e  :&: s0) :|: r1) :&: s2)) :&: s4) ((l3 :|: (((e' :&: s0) :|: r1) :&: s2)) :&: s4)
bonfrfls :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (((f0 :&: e ) :|: r1) :&: s2)) :&: s4) ((l3 :|: (((f0 :&: e') :|: r1) :&: s2)) :&: s4)
bonfrfll :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (((e  :|: r0) :|: r1) :&: s2)) :&: s4) ((l3 :|: (((e' :|: r0) :|: r1) :&: s2)) :&: s4)
bonfrflr :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (((l0 :|: e ) :|: r1) :&: s2)) :&: s4) ((l3 :|: (((l0 :|: e') :|: r1) :&: s2)) :&: s4)
bonfrfrf :: (BProd b, BSum b) => b e e' -> b ((l3 :|: ((l1 :|: (e  :&: s0)) :&: s2)) :&: s4) ((l3 :|: ((l1 :|: (e' :&: s0)) :&: s2)) :&: s4)
bonfrfrs :: (BProd b, BSum b) => b e e' -> b ((l3 :|: ((l1 :|: (f0 :&: e )) :&: s2)) :&: s4) ((l3 :|: ((l1 :|: (f0 :&: e')) :&: s2)) :&: s4)
bonfrfrl :: (BProd b, BSum b) => b e e' -> b ((l3 :|: ((l1 :|: (e  :|: r0)) :&: s2)) :&: s4) ((l3 :|: ((l1 :|: (e' :|: r0)) :&: s2)) :&: s4)
bonfrfrr :: (BProd b, BSum b) => b e e' -> b ((l3 :|: ((l1 :|: (l0 :|: e )) :&: s2)) :&: s4) ((l3 :|: ((l1 :|: (l0 :|: e')) :&: s2)) :&: s4)
bonfrsff :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (f2 :&: ((e  :&: s0) :&: s1))) :&: s4) ((l3 :|: (f2 :&: ((e' :&: s0) :&: s1))) :&: s4)
bonfrsfs :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (f2 :&: ((f0 :&: e ) :&: s1))) :&: s4) ((l3 :|: (f2 :&: ((f0 :&: e') :&: s1))) :&: s4)
bonfrsfl :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (f2 :&: ((e  :|: r0) :&: s1))) :&: s4) ((l3 :|: (f2 :&: ((e' :|: r0) :&: s1))) :&: s4)
bonfrsfr :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (f2 :&: ((l0 :|: e ) :&: s1))) :&: s4) ((l3 :|: (f2 :&: ((l0 :|: e') :&: s1))) :&: s4)
bonfrssf :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (f2 :&: (f1 :&: (e  :&: s0)))) :&: s4) ((l3 :|: (f2 :&: (f1 :&: (e' :&: s0)))) :&: s4)
bonfrsss :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (f2 :&: (f1 :&: (f0 :&: e )))) :&: s4) ((l3 :|: (f2 :&: (f1 :&: (f0 :&: e')))) :&: s4)
bonfrssl :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (f2 :&: (f1 :&: (e  :|: r0)))) :&: s4) ((l3 :|: (f2 :&: (f1 :&: (e' :|: r0)))) :&: s4)
bonfrssr :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (f2 :&: (f1 :&: (l0 :|: e )))) :&: s4) ((l3 :|: (f2 :&: (f1 :&: (l0 :|: e')))) :&: s4)
bonfrslf :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (f2 :&: ((e  :&: s0) :|: r1))) :&: s4) ((l3 :|: (f2 :&: ((e' :&: s0) :|: r1))) :&: s4)
bonfrsls :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (f2 :&: ((f0 :&: e ) :|: r1))) :&: s4) ((l3 :|: (f2 :&: ((f0 :&: e') :|: r1))) :&: s4)
bonfrsll :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (f2 :&: ((e  :|: r0) :|: r1))) :&: s4) ((l3 :|: (f2 :&: ((e' :|: r0) :|: r1))) :&: s4)
bonfrslr :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (f2 :&: ((l0 :|: e ) :|: r1))) :&: s4) ((l3 :|: (f2 :&: ((l0 :|: e') :|: r1))) :&: s4)
bonfrsrf :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (f2 :&: (l1 :|: (e  :&: s0)))) :&: s4) ((l3 :|: (f2 :&: (l1 :|: (e' :&: s0)))) :&: s4)
bonfrsrs :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (f2 :&: (l1 :|: (f0 :&: e )))) :&: s4) ((l3 :|: (f2 :&: (l1 :|: (f0 :&: e')))) :&: s4)
bonfrsrl :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (f2 :&: (l1 :|: (e  :|: r0)))) :&: s4) ((l3 :|: (f2 :&: (l1 :|: (e' :|: r0)))) :&: s4)
bonfrsrr :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (f2 :&: (l1 :|: (l0 :|: e )))) :&: s4) ((l3 :|: (f2 :&: (l1 :|: (l0 :|: e')))) :&: s4)
bonfrlff :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (((e  :&: s0) :&: s1) :|: r2)) :&: s4) ((l3 :|: (((e' :&: s0) :&: s1) :|: r2)) :&: s4)
bonfrlfs :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (((f0 :&: e ) :&: s1) :|: r2)) :&: s4) ((l3 :|: (((f0 :&: e') :&: s1) :|: r2)) :&: s4)
bonfrlfl :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (((e  :|: r0) :&: s1) :|: r2)) :&: s4) ((l3 :|: (((e' :|: r0) :&: s1) :|: r2)) :&: s4)
bonfrlfr :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (((l0 :|: e ) :&: s1) :|: r2)) :&: s4) ((l3 :|: (((l0 :|: e') :&: s1) :|: r2)) :&: s4)
bonfrlsf :: (BProd b, BSum b) => b e e' -> b ((l3 :|: ((f1 :&: (e  :&: s0)) :|: r2)) :&: s4) ((l3 :|: ((f1 :&: (e' :&: s0)) :|: r2)) :&: s4)
bonfrlss :: (BProd b, BSum b) => b e e' -> b ((l3 :|: ((f1 :&: (f0 :&: e )) :|: r2)) :&: s4) ((l3 :|: ((f1 :&: (f0 :&: e')) :|: r2)) :&: s4)
bonfrlsl :: (BProd b, BSum b) => b e e' -> b ((l3 :|: ((f1 :&: (e  :|: r0)) :|: r2)) :&: s4) ((l3 :|: ((f1 :&: (e' :|: r0)) :|: r2)) :&: s4)
bonfrlsr :: (BProd b, BSum b) => b e e' -> b ((l3 :|: ((f1 :&: (l0 :|: e )) :|: r2)) :&: s4) ((l3 :|: ((f1 :&: (l0 :|: e')) :|: r2)) :&: s4)
bonfrllf :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (((e  :&: s0) :|: r1) :|: r2)) :&: s4) ((l3 :|: (((e' :&: s0) :|: r1) :|: r2)) :&: s4)
bonfrlls :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (((f0 :&: e ) :|: r1) :|: r2)) :&: s4) ((l3 :|: (((f0 :&: e') :|: r1) :|: r2)) :&: s4)
bonfrlll :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (((e  :|: r0) :|: r1) :|: r2)) :&: s4) ((l3 :|: (((e' :|: r0) :|: r1) :|: r2)) :&: s4)
bonfrllr :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (((l0 :|: e ) :|: r1) :|: r2)) :&: s4) ((l3 :|: (((l0 :|: e') :|: r1) :|: r2)) :&: s4)
bonfrlrf :: (BProd b, BSum b) => b e e' -> b ((l3 :|: ((l1 :|: (e  :&: s0)) :|: r2)) :&: s4) ((l3 :|: ((l1 :|: (e' :&: s0)) :|: r2)) :&: s4)
bonfrlrs :: (BProd b, BSum b) => b e e' -> b ((l3 :|: ((l1 :|: (f0 :&: e )) :|: r2)) :&: s4) ((l3 :|: ((l1 :|: (f0 :&: e')) :|: r2)) :&: s4)
bonfrlrl :: (BProd b, BSum b) => b e e' -> b ((l3 :|: ((l1 :|: (e  :|: r0)) :|: r2)) :&: s4) ((l3 :|: ((l1 :|: (e' :|: r0)) :|: r2)) :&: s4)
bonfrlrr :: (BProd b, BSum b) => b e e' -> b ((l3 :|: ((l1 :|: (l0 :|: e )) :|: r2)) :&: s4) ((l3 :|: ((l1 :|: (l0 :|: e')) :|: r2)) :&: s4)
bonfrrff :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (l2 :|: ((e  :&: s0) :&: s1))) :&: s4) ((l3 :|: (l2 :|: ((e' :&: s0) :&: s1))) :&: s4)
bonfrrfs :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (l2 :|: ((f0 :&: e ) :&: s1))) :&: s4) ((l3 :|: (l2 :|: ((f0 :&: e') :&: s1))) :&: s4)
bonfrrfl :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (l2 :|: ((e  :|: r0) :&: s1))) :&: s4) ((l3 :|: (l2 :|: ((e' :|: r0) :&: s1))) :&: s4)
bonfrrfr :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (l2 :|: ((l0 :|: e ) :&: s1))) :&: s4) ((l3 :|: (l2 :|: ((l0 :|: e') :&: s1))) :&: s4)
bonfrrsf :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (l2 :|: (f1 :&: (e  :&: s0)))) :&: s4) ((l3 :|: (l2 :|: (f1 :&: (e' :&: s0)))) :&: s4)
bonfrrss :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (l2 :|: (f1 :&: (f0 :&: e )))) :&: s4) ((l3 :|: (l2 :|: (f1 :&: (f0 :&: e')))) :&: s4)
bonfrrsl :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (l2 :|: (f1 :&: (e  :|: r0)))) :&: s4) ((l3 :|: (l2 :|: (f1 :&: (e' :|: r0)))) :&: s4)
bonfrrsr :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (l2 :|: (f1 :&: (l0 :|: e )))) :&: s4) ((l3 :|: (l2 :|: (f1 :&: (l0 :|: e')))) :&: s4)
bonfrrlf :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (l2 :|: ((e  :&: s0) :|: r1))) :&: s4) ((l3 :|: (l2 :|: ((e' :&: s0) :|: r1))) :&: s4)
bonfrrls :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (l2 :|: ((f0 :&: e ) :|: r1))) :&: s4) ((l3 :|: (l2 :|: ((f0 :&: e') :|: r1))) :&: s4)
bonfrrll :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (l2 :|: ((e  :|: r0) :|: r1))) :&: s4) ((l3 :|: (l2 :|: ((e' :|: r0) :|: r1))) :&: s4)
bonfrrlr :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (l2 :|: ((l0 :|: e ) :|: r1))) :&: s4) ((l3 :|: (l2 :|: ((l0 :|: e') :|: r1))) :&: s4)
bonfrrrf :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (l2 :|: (l1 :|: (e  :&: s0)))) :&: s4) ((l3 :|: (l2 :|: (l1 :|: (e' :&: s0)))) :&: s4)
bonfrrrs :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (l2 :|: (l1 :|: (f0 :&: e )))) :&: s4) ((l3 :|: (l2 :|: (l1 :|: (f0 :&: e')))) :&: s4)
bonfrrrl :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (l2 :|: (l1 :|: (e  :|: r0)))) :&: s4) ((l3 :|: (l2 :|: (l1 :|: (e' :|: r0)))) :&: s4)
bonfrrrr :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (l2 :|: (l1 :|: (l0 :|: e )))) :&: s4) ((l3 :|: (l2 :|: (l1 :|: (l0 :|: e')))) :&: s4)
bonsffff :: (BProd b) => b e e' -> b (f4 :&: ((((e  :&: s0) :&: s1) :&: s2) :&: s3)) (f4 :&: ((((e' :&: s0) :&: s1) :&: s2) :&: s3))
bonsfffs :: (BProd b) => b e e' -> b (f4 :&: ((((f0 :&: e ) :&: s1) :&: s2) :&: s3)) (f4 :&: ((((f0 :&: e') :&: s1) :&: s2) :&: s3))
bonsfffl :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((((e  :|: r0) :&: s1) :&: s2) :&: s3)) (f4 :&: ((((e' :|: r0) :&: s1) :&: s2) :&: s3))
bonsfffr :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((((l0 :|: e ) :&: s1) :&: s2) :&: s3)) (f4 :&: ((((l0 :|: e') :&: s1) :&: s2) :&: s3))
bonsffsf :: (BProd b) => b e e' -> b (f4 :&: (((f1 :&: (e  :&: s0)) :&: s2) :&: s3)) (f4 :&: (((f1 :&: (e' :&: s0)) :&: s2) :&: s3))
bonsffss :: (BProd b) => b e e' -> b (f4 :&: (((f1 :&: (f0 :&: e )) :&: s2) :&: s3)) (f4 :&: (((f1 :&: (f0 :&: e')) :&: s2) :&: s3))
bonsffsl :: (BProd b, BSum b) => b e e' -> b (f4 :&: (((f1 :&: (e  :|: r0)) :&: s2) :&: s3)) (f4 :&: (((f1 :&: (e' :|: r0)) :&: s2) :&: s3))
bonsffsr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (((f1 :&: (l0 :|: e )) :&: s2) :&: s3)) (f4 :&: (((f1 :&: (l0 :|: e')) :&: s2) :&: s3))
bonsfflf :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((((e  :&: s0) :|: r1) :&: s2) :&: s3)) (f4 :&: ((((e' :&: s0) :|: r1) :&: s2) :&: s3))
bonsffls :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((((f0 :&: e ) :|: r1) :&: s2) :&: s3)) (f4 :&: ((((f0 :&: e') :|: r1) :&: s2) :&: s3))
bonsffll :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((((e  :|: r0) :|: r1) :&: s2) :&: s3)) (f4 :&: ((((e' :|: r0) :|: r1) :&: s2) :&: s3))
bonsfflr :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((((l0 :|: e ) :|: r1) :&: s2) :&: s3)) (f4 :&: ((((l0 :|: e') :|: r1) :&: s2) :&: s3))
bonsffrf :: (BProd b, BSum b) => b e e' -> b (f4 :&: (((l1 :|: (e  :&: s0)) :&: s2) :&: s3)) (f4 :&: (((l1 :|: (e' :&: s0)) :&: s2) :&: s3))
bonsffrs :: (BProd b, BSum b) => b e e' -> b (f4 :&: (((l1 :|: (f0 :&: e )) :&: s2) :&: s3)) (f4 :&: (((l1 :|: (f0 :&: e')) :&: s2) :&: s3))
bonsffrl :: (BProd b, BSum b) => b e e' -> b (f4 :&: (((l1 :|: (e  :|: r0)) :&: s2) :&: s3)) (f4 :&: (((l1 :|: (e' :|: r0)) :&: s2) :&: s3))
bonsffrr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (((l1 :|: (l0 :|: e )) :&: s2) :&: s3)) (f4 :&: (((l1 :|: (l0 :|: e')) :&: s2) :&: s3))
bonsfsff :: (BProd b) => b e e' -> b (f4 :&: ((f2 :&: ((e  :&: s0) :&: s1)) :&: s3)) (f4 :&: ((f2 :&: ((e' :&: s0) :&: s1)) :&: s3))
bonsfsfs :: (BProd b) => b e e' -> b (f4 :&: ((f2 :&: ((f0 :&: e ) :&: s1)) :&: s3)) (f4 :&: ((f2 :&: ((f0 :&: e') :&: s1)) :&: s3))
bonsfsfl :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((f2 :&: ((e  :|: r0) :&: s1)) :&: s3)) (f4 :&: ((f2 :&: ((e' :|: r0) :&: s1)) :&: s3))
bonsfsfr :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((f2 :&: ((l0 :|: e ) :&: s1)) :&: s3)) (f4 :&: ((f2 :&: ((l0 :|: e') :&: s1)) :&: s3))
bonsfssf :: (BProd b) => b e e' -> b (f4 :&: ((f2 :&: (f1 :&: (e  :&: s0))) :&: s3)) (f4 :&: ((f2 :&: (f1 :&: (e' :&: s0))) :&: s3))
bonsfsss :: (BProd b) => b e e' -> b (f4 :&: ((f2 :&: (f1 :&: (f0 :&: e ))) :&: s3)) (f4 :&: ((f2 :&: (f1 :&: (f0 :&: e'))) :&: s3))
bonsfssl :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((f2 :&: (f1 :&: (e  :|: r0))) :&: s3)) (f4 :&: ((f2 :&: (f1 :&: (e' :|: r0))) :&: s3))
bonsfssr :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((f2 :&: (f1 :&: (l0 :|: e ))) :&: s3)) (f4 :&: ((f2 :&: (f1 :&: (l0 :|: e'))) :&: s3))
bonsfslf :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((f2 :&: ((e  :&: s0) :|: r1)) :&: s3)) (f4 :&: ((f2 :&: ((e' :&: s0) :|: r1)) :&: s3))
bonsfsls :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((f2 :&: ((f0 :&: e ) :|: r1)) :&: s3)) (f4 :&: ((f2 :&: ((f0 :&: e') :|: r1)) :&: s3))
bonsfsll :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((f2 :&: ((e  :|: r0) :|: r1)) :&: s3)) (f4 :&: ((f2 :&: ((e' :|: r0) :|: r1)) :&: s3))
bonsfslr :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((f2 :&: ((l0 :|: e ) :|: r1)) :&: s3)) (f4 :&: ((f2 :&: ((l0 :|: e') :|: r1)) :&: s3))
bonsfsrf :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((f2 :&: (l1 :|: (e  :&: s0))) :&: s3)) (f4 :&: ((f2 :&: (l1 :|: (e' :&: s0))) :&: s3))
bonsfsrs :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((f2 :&: (l1 :|: (f0 :&: e ))) :&: s3)) (f4 :&: ((f2 :&: (l1 :|: (f0 :&: e'))) :&: s3))
bonsfsrl :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((f2 :&: (l1 :|: (e  :|: r0))) :&: s3)) (f4 :&: ((f2 :&: (l1 :|: (e' :|: r0))) :&: s3))
bonsfsrr :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((f2 :&: (l1 :|: (l0 :|: e ))) :&: s3)) (f4 :&: ((f2 :&: (l1 :|: (l0 :|: e'))) :&: s3))
bonsflff :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((((e  :&: s0) :&: s1) :|: r2) :&: s3)) (f4 :&: ((((e' :&: s0) :&: s1) :|: r2) :&: s3))
bonsflfs :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((((f0 :&: e ) :&: s1) :|: r2) :&: s3)) (f4 :&: ((((f0 :&: e') :&: s1) :|: r2) :&: s3))
bonsflfl :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((((e  :|: r0) :&: s1) :|: r2) :&: s3)) (f4 :&: ((((e' :|: r0) :&: s1) :|: r2) :&: s3))
bonsflfr :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((((l0 :|: e ) :&: s1) :|: r2) :&: s3)) (f4 :&: ((((l0 :|: e') :&: s1) :|: r2) :&: s3))
bonsflsf :: (BProd b, BSum b) => b e e' -> b (f4 :&: (((f1 :&: (e  :&: s0)) :|: r2) :&: s3)) (f4 :&: (((f1 :&: (e' :&: s0)) :|: r2) :&: s3))
bonsflss :: (BProd b, BSum b) => b e e' -> b (f4 :&: (((f1 :&: (f0 :&: e )) :|: r2) :&: s3)) (f4 :&: (((f1 :&: (f0 :&: e')) :|: r2) :&: s3))
bonsflsl :: (BProd b, BSum b) => b e e' -> b (f4 :&: (((f1 :&: (e  :|: r0)) :|: r2) :&: s3)) (f4 :&: (((f1 :&: (e' :|: r0)) :|: r2) :&: s3))
bonsflsr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (((f1 :&: (l0 :|: e )) :|: r2) :&: s3)) (f4 :&: (((f1 :&: (l0 :|: e')) :|: r2) :&: s3))
bonsfllf :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((((e  :&: s0) :|: r1) :|: r2) :&: s3)) (f4 :&: ((((e' :&: s0) :|: r1) :|: r2) :&: s3))
bonsflls :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((((f0 :&: e ) :|: r1) :|: r2) :&: s3)) (f4 :&: ((((f0 :&: e') :|: r1) :|: r2) :&: s3))
bonsflll :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((((e  :|: r0) :|: r1) :|: r2) :&: s3)) (f4 :&: ((((e' :|: r0) :|: r1) :|: r2) :&: s3))
bonsfllr :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((((l0 :|: e ) :|: r1) :|: r2) :&: s3)) (f4 :&: ((((l0 :|: e') :|: r1) :|: r2) :&: s3))
bonsflrf :: (BProd b, BSum b) => b e e' -> b (f4 :&: (((l1 :|: (e  :&: s0)) :|: r2) :&: s3)) (f4 :&: (((l1 :|: (e' :&: s0)) :|: r2) :&: s3))
bonsflrs :: (BProd b, BSum b) => b e e' -> b (f4 :&: (((l1 :|: (f0 :&: e )) :|: r2) :&: s3)) (f4 :&: (((l1 :|: (f0 :&: e')) :|: r2) :&: s3))
bonsflrl :: (BProd b, BSum b) => b e e' -> b (f4 :&: (((l1 :|: (e  :|: r0)) :|: r2) :&: s3)) (f4 :&: (((l1 :|: (e' :|: r0)) :|: r2) :&: s3))
bonsflrr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (((l1 :|: (l0 :|: e )) :|: r2) :&: s3)) (f4 :&: (((l1 :|: (l0 :|: e')) :|: r2) :&: s3))
bonsfrff :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((l2 :|: ((e  :&: s0) :&: s1)) :&: s3)) (f4 :&: ((l2 :|: ((e' :&: s0) :&: s1)) :&: s3))
bonsfrfs :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((l2 :|: ((f0 :&: e ) :&: s1)) :&: s3)) (f4 :&: ((l2 :|: ((f0 :&: e') :&: s1)) :&: s3))
bonsfrfl :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((l2 :|: ((e  :|: r0) :&: s1)) :&: s3)) (f4 :&: ((l2 :|: ((e' :|: r0) :&: s1)) :&: s3))
bonsfrfr :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((l2 :|: ((l0 :|: e ) :&: s1)) :&: s3)) (f4 :&: ((l2 :|: ((l0 :|: e') :&: s1)) :&: s3))
bonsfrsf :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((l2 :|: (f1 :&: (e  :&: s0))) :&: s3)) (f4 :&: ((l2 :|: (f1 :&: (e' :&: s0))) :&: s3))
bonsfrss :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((l2 :|: (f1 :&: (f0 :&: e ))) :&: s3)) (f4 :&: ((l2 :|: (f1 :&: (f0 :&: e'))) :&: s3))
bonsfrsl :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((l2 :|: (f1 :&: (e  :|: r0))) :&: s3)) (f4 :&: ((l2 :|: (f1 :&: (e' :|: r0))) :&: s3))
bonsfrsr :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((l2 :|: (f1 :&: (l0 :|: e ))) :&: s3)) (f4 :&: ((l2 :|: (f1 :&: (l0 :|: e'))) :&: s3))
bonsfrlf :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((l2 :|: ((e  :&: s0) :|: r1)) :&: s3)) (f4 :&: ((l2 :|: ((e' :&: s0) :|: r1)) :&: s3))
bonsfrls :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((l2 :|: ((f0 :&: e ) :|: r1)) :&: s3)) (f4 :&: ((l2 :|: ((f0 :&: e') :|: r1)) :&: s3))
bonsfrll :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((l2 :|: ((e  :|: r0) :|: r1)) :&: s3)) (f4 :&: ((l2 :|: ((e' :|: r0) :|: r1)) :&: s3))
bonsfrlr :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((l2 :|: ((l0 :|: e ) :|: r1)) :&: s3)) (f4 :&: ((l2 :|: ((l0 :|: e') :|: r1)) :&: s3))
bonsfrrf :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((l2 :|: (l1 :|: (e  :&: s0))) :&: s3)) (f4 :&: ((l2 :|: (l1 :|: (e' :&: s0))) :&: s3))
bonsfrrs :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((l2 :|: (l1 :|: (f0 :&: e ))) :&: s3)) (f4 :&: ((l2 :|: (l1 :|: (f0 :&: e'))) :&: s3))
bonsfrrl :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((l2 :|: (l1 :|: (e  :|: r0))) :&: s3)) (f4 :&: ((l2 :|: (l1 :|: (e' :|: r0))) :&: s3))
bonsfrrr :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((l2 :|: (l1 :|: (l0 :|: e ))) :&: s3)) (f4 :&: ((l2 :|: (l1 :|: (l0 :|: e'))) :&: s3))
bonssfff :: (BProd b) => b e e' -> b (f4 :&: (f3 :&: (((e  :&: s0) :&: s1) :&: s2))) (f4 :&: (f3 :&: (((e' :&: s0) :&: s1) :&: s2)))
bonssffs :: (BProd b) => b e e' -> b (f4 :&: (f3 :&: (((f0 :&: e ) :&: s1) :&: s2))) (f4 :&: (f3 :&: (((f0 :&: e') :&: s1) :&: s2)))
bonssffl :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (((e  :|: r0) :&: s1) :&: s2))) (f4 :&: (f3 :&: (((e' :|: r0) :&: s1) :&: s2)))
bonssffr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (((l0 :|: e ) :&: s1) :&: s2))) (f4 :&: (f3 :&: (((l0 :|: e') :&: s1) :&: s2)))
bonssfsf :: (BProd b) => b e e' -> b (f4 :&: (f3 :&: ((f1 :&: (e  :&: s0)) :&: s2))) (f4 :&: (f3 :&: ((f1 :&: (e' :&: s0)) :&: s2)))
bonssfss :: (BProd b) => b e e' -> b (f4 :&: (f3 :&: ((f1 :&: (f0 :&: e )) :&: s2))) (f4 :&: (f3 :&: ((f1 :&: (f0 :&: e')) :&: s2)))
bonssfsl :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: ((f1 :&: (e  :|: r0)) :&: s2))) (f4 :&: (f3 :&: ((f1 :&: (e' :|: r0)) :&: s2)))
bonssfsr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: ((f1 :&: (l0 :|: e )) :&: s2))) (f4 :&: (f3 :&: ((f1 :&: (l0 :|: e')) :&: s2)))
bonssflf :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (((e  :&: s0) :|: r1) :&: s2))) (f4 :&: (f3 :&: (((e' :&: s0) :|: r1) :&: s2)))
bonssfls :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (((f0 :&: e ) :|: r1) :&: s2))) (f4 :&: (f3 :&: (((f0 :&: e') :|: r1) :&: s2)))
bonssfll :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (((e  :|: r0) :|: r1) :&: s2))) (f4 :&: (f3 :&: (((e' :|: r0) :|: r1) :&: s2)))
bonssflr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (((l0 :|: e ) :|: r1) :&: s2))) (f4 :&: (f3 :&: (((l0 :|: e') :|: r1) :&: s2)))
bonssfrf :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: ((l1 :|: (e  :&: s0)) :&: s2))) (f4 :&: (f3 :&: ((l1 :|: (e' :&: s0)) :&: s2)))
bonssfrs :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: ((l1 :|: (f0 :&: e )) :&: s2))) (f4 :&: (f3 :&: ((l1 :|: (f0 :&: e')) :&: s2)))
bonssfrl :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: ((l1 :|: (e  :|: r0)) :&: s2))) (f4 :&: (f3 :&: ((l1 :|: (e' :|: r0)) :&: s2)))
bonssfrr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: ((l1 :|: (l0 :|: e )) :&: s2))) (f4 :&: (f3 :&: ((l1 :|: (l0 :|: e')) :&: s2)))
bonsssff :: (BProd b) => b e e' -> b (f4 :&: (f3 :&: (f2 :&: ((e  :&: s0) :&: s1)))) (f4 :&: (f3 :&: (f2 :&: ((e' :&: s0) :&: s1))))
bonsssfs :: (BProd b) => b e e' -> b (f4 :&: (f3 :&: (f2 :&: ((f0 :&: e ) :&: s1)))) (f4 :&: (f3 :&: (f2 :&: ((f0 :&: e') :&: s1))))
bonsssfl :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (f2 :&: ((e  :|: r0) :&: s1)))) (f4 :&: (f3 :&: (f2 :&: ((e' :|: r0) :&: s1))))
bonsssfr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (f2 :&: ((l0 :|: e ) :&: s1)))) (f4 :&: (f3 :&: (f2 :&: ((l0 :|: e') :&: s1))))
bonssssf :: (BProd b) => b e e' -> b (f4 :&: (f3 :&: (f2 :&: (f1 :&: (e  :&: s0))))) (f4 :&: (f3 :&: (f2 :&: (f1 :&: (e' :&: s0)))))
bonsssss :: (BProd b) => b e e' -> b (f4 :&: (f3 :&: (f2 :&: (f1 :&: (f0 :&: e ))))) (f4 :&: (f3 :&: (f2 :&: (f1 :&: (f0 :&: e')))))
bonssssl :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (f2 :&: (f1 :&: (e  :|: r0))))) (f4 :&: (f3 :&: (f2 :&: (f1 :&: (e' :|: r0)))))
bonssssr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (f2 :&: (f1 :&: (l0 :|: e ))))) (f4 :&: (f3 :&: (f2 :&: (f1 :&: (l0 :|: e')))))
bonssslf :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (f2 :&: ((e  :&: s0) :|: r1)))) (f4 :&: (f3 :&: (f2 :&: ((e' :&: s0) :|: r1))))
bonsssls :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (f2 :&: ((f0 :&: e ) :|: r1)))) (f4 :&: (f3 :&: (f2 :&: ((f0 :&: e') :|: r1))))
bonsssll :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (f2 :&: ((e  :|: r0) :|: r1)))) (f4 :&: (f3 :&: (f2 :&: ((e' :|: r0) :|: r1))))
bonssslr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (f2 :&: ((l0 :|: e ) :|: r1)))) (f4 :&: (f3 :&: (f2 :&: ((l0 :|: e') :|: r1))))
bonsssrf :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (f2 :&: (l1 :|: (e  :&: s0))))) (f4 :&: (f3 :&: (f2 :&: (l1 :|: (e' :&: s0)))))
bonsssrs :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (f2 :&: (l1 :|: (f0 :&: e ))))) (f4 :&: (f3 :&: (f2 :&: (l1 :|: (f0 :&: e')))))
bonsssrl :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (f2 :&: (l1 :|: (e  :|: r0))))) (f4 :&: (f3 :&: (f2 :&: (l1 :|: (e' :|: r0)))))
bonsssrr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (f2 :&: (l1 :|: (l0 :|: e ))))) (f4 :&: (f3 :&: (f2 :&: (l1 :|: (l0 :|: e')))))
bonsslff :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (((e  :&: s0) :&: s1) :|: r2))) (f4 :&: (f3 :&: (((e' :&: s0) :&: s1) :|: r2)))
bonsslfs :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (((f0 :&: e ) :&: s1) :|: r2))) (f4 :&: (f3 :&: (((f0 :&: e') :&: s1) :|: r2)))
bonsslfl :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (((e  :|: r0) :&: s1) :|: r2))) (f4 :&: (f3 :&: (((e' :|: r0) :&: s1) :|: r2)))
bonsslfr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (((l0 :|: e ) :&: s1) :|: r2))) (f4 :&: (f3 :&: (((l0 :|: e') :&: s1) :|: r2)))
bonsslsf :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: ((f1 :&: (e  :&: s0)) :|: r2))) (f4 :&: (f3 :&: ((f1 :&: (e' :&: s0)) :|: r2)))
bonsslss :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: ((f1 :&: (f0 :&: e )) :|: r2))) (f4 :&: (f3 :&: ((f1 :&: (f0 :&: e')) :|: r2)))
bonsslsl :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: ((f1 :&: (e  :|: r0)) :|: r2))) (f4 :&: (f3 :&: ((f1 :&: (e' :|: r0)) :|: r2)))
bonsslsr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: ((f1 :&: (l0 :|: e )) :|: r2))) (f4 :&: (f3 :&: ((f1 :&: (l0 :|: e')) :|: r2)))
bonssllf :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (((e  :&: s0) :|: r1) :|: r2))) (f4 :&: (f3 :&: (((e' :&: s0) :|: r1) :|: r2)))
bonsslls :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (((f0 :&: e ) :|: r1) :|: r2))) (f4 :&: (f3 :&: (((f0 :&: e') :|: r1) :|: r2)))
bonsslll :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (((e  :|: r0) :|: r1) :|: r2))) (f4 :&: (f3 :&: (((e' :|: r0) :|: r1) :|: r2)))
bonssllr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (((l0 :|: e ) :|: r1) :|: r2))) (f4 :&: (f3 :&: (((l0 :|: e') :|: r1) :|: r2)))
bonsslrf :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: ((l1 :|: (e  :&: s0)) :|: r2))) (f4 :&: (f3 :&: ((l1 :|: (e' :&: s0)) :|: r2)))
bonsslrs :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: ((l1 :|: (f0 :&: e )) :|: r2))) (f4 :&: (f3 :&: ((l1 :|: (f0 :&: e')) :|: r2)))
bonsslrl :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: ((l1 :|: (e  :|: r0)) :|: r2))) (f4 :&: (f3 :&: ((l1 :|: (e' :|: r0)) :|: r2)))
bonsslrr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: ((l1 :|: (l0 :|: e )) :|: r2))) (f4 :&: (f3 :&: ((l1 :|: (l0 :|: e')) :|: r2)))
bonssrff :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (l2 :|: ((e  :&: s0) :&: s1)))) (f4 :&: (f3 :&: (l2 :|: ((e' :&: s0) :&: s1))))
bonssrfs :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (l2 :|: ((f0 :&: e ) :&: s1)))) (f4 :&: (f3 :&: (l2 :|: ((f0 :&: e') :&: s1))))
bonssrfl :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (l2 :|: ((e  :|: r0) :&: s1)))) (f4 :&: (f3 :&: (l2 :|: ((e' :|: r0) :&: s1))))
bonssrfr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (l2 :|: ((l0 :|: e ) :&: s1)))) (f4 :&: (f3 :&: (l2 :|: ((l0 :|: e') :&: s1))))
bonssrsf :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (l2 :|: (f1 :&: (e  :&: s0))))) (f4 :&: (f3 :&: (l2 :|: (f1 :&: (e' :&: s0)))))
bonssrss :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (l2 :|: (f1 :&: (f0 :&: e ))))) (f4 :&: (f3 :&: (l2 :|: (f1 :&: (f0 :&: e')))))
bonssrsl :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (l2 :|: (f1 :&: (e  :|: r0))))) (f4 :&: (f3 :&: (l2 :|: (f1 :&: (e' :|: r0)))))
bonssrsr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (l2 :|: (f1 :&: (l0 :|: e ))))) (f4 :&: (f3 :&: (l2 :|: (f1 :&: (l0 :|: e')))))
bonssrlf :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (l2 :|: ((e  :&: s0) :|: r1)))) (f4 :&: (f3 :&: (l2 :|: ((e' :&: s0) :|: r1))))
bonssrls :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (l2 :|: ((f0 :&: e ) :|: r1)))) (f4 :&: (f3 :&: (l2 :|: ((f0 :&: e') :|: r1))))
bonssrll :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (l2 :|: ((e  :|: r0) :|: r1)))) (f4 :&: (f3 :&: (l2 :|: ((e' :|: r0) :|: r1))))
bonssrlr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (l2 :|: ((l0 :|: e ) :|: r1)))) (f4 :&: (f3 :&: (l2 :|: ((l0 :|: e') :|: r1))))
bonssrrf :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (l2 :|: (l1 :|: (e  :&: s0))))) (f4 :&: (f3 :&: (l2 :|: (l1 :|: (e' :&: s0)))))
bonssrrs :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (l2 :|: (l1 :|: (f0 :&: e ))))) (f4 :&: (f3 :&: (l2 :|: (l1 :|: (f0 :&: e')))))
bonssrrl :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (l2 :|: (l1 :|: (e  :|: r0))))) (f4 :&: (f3 :&: (l2 :|: (l1 :|: (e' :|: r0)))))
bonssrrr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (f3 :&: (l2 :|: (l1 :|: (l0 :|: e ))))) (f4 :&: (f3 :&: (l2 :|: (l1 :|: (l0 :|: e')))))
bonslfff :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((((e  :&: s0) :&: s1) :&: s2) :|: r3)) (f4 :&: ((((e' :&: s0) :&: s1) :&: s2) :|: r3))
bonslffs :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((((f0 :&: e ) :&: s1) :&: s2) :|: r3)) (f4 :&: ((((f0 :&: e') :&: s1) :&: s2) :|: r3))
bonslffl :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((((e  :|: r0) :&: s1) :&: s2) :|: r3)) (f4 :&: ((((e' :|: r0) :&: s1) :&: s2) :|: r3))
bonslffr :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((((l0 :|: e ) :&: s1) :&: s2) :|: r3)) (f4 :&: ((((l0 :|: e') :&: s1) :&: s2) :|: r3))
bonslfsf :: (BProd b, BSum b) => b e e' -> b (f4 :&: (((f1 :&: (e  :&: s0)) :&: s2) :|: r3)) (f4 :&: (((f1 :&: (e' :&: s0)) :&: s2) :|: r3))
bonslfss :: (BProd b, BSum b) => b e e' -> b (f4 :&: (((f1 :&: (f0 :&: e )) :&: s2) :|: r3)) (f4 :&: (((f1 :&: (f0 :&: e')) :&: s2) :|: r3))
bonslfsl :: (BProd b, BSum b) => b e e' -> b (f4 :&: (((f1 :&: (e  :|: r0)) :&: s2) :|: r3)) (f4 :&: (((f1 :&: (e' :|: r0)) :&: s2) :|: r3))
bonslfsr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (((f1 :&: (l0 :|: e )) :&: s2) :|: r3)) (f4 :&: (((f1 :&: (l0 :|: e')) :&: s2) :|: r3))
bonslflf :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((((e  :&: s0) :|: r1) :&: s2) :|: r3)) (f4 :&: ((((e' :&: s0) :|: r1) :&: s2) :|: r3))
bonslfls :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((((f0 :&: e ) :|: r1) :&: s2) :|: r3)) (f4 :&: ((((f0 :&: e') :|: r1) :&: s2) :|: r3))
bonslfll :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((((e  :|: r0) :|: r1) :&: s2) :|: r3)) (f4 :&: ((((e' :|: r0) :|: r1) :&: s2) :|: r3))
bonslflr :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((((l0 :|: e ) :|: r1) :&: s2) :|: r3)) (f4 :&: ((((l0 :|: e') :|: r1) :&: s2) :|: r3))
bonslfrf :: (BProd b, BSum b) => b e e' -> b (f4 :&: (((l1 :|: (e  :&: s0)) :&: s2) :|: r3)) (f4 :&: (((l1 :|: (e' :&: s0)) :&: s2) :|: r3))
bonslfrs :: (BProd b, BSum b) => b e e' -> b (f4 :&: (((l1 :|: (f0 :&: e )) :&: s2) :|: r3)) (f4 :&: (((l1 :|: (f0 :&: e')) :&: s2) :|: r3))
bonslfrl :: (BProd b, BSum b) => b e e' -> b (f4 :&: (((l1 :|: (e  :|: r0)) :&: s2) :|: r3)) (f4 :&: (((l1 :|: (e' :|: r0)) :&: s2) :|: r3))
bonslfrr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (((l1 :|: (l0 :|: e )) :&: s2) :|: r3)) (f4 :&: (((l1 :|: (l0 :|: e')) :&: s2) :|: r3))
bonslsff :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((f2 :&: ((e  :&: s0) :&: s1)) :|: r3)) (f4 :&: ((f2 :&: ((e' :&: s0) :&: s1)) :|: r3))
bonslsfs :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((f2 :&: ((f0 :&: e ) :&: s1)) :|: r3)) (f4 :&: ((f2 :&: ((f0 :&: e') :&: s1)) :|: r3))
bonslsfl :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((f2 :&: ((e  :|: r0) :&: s1)) :|: r3)) (f4 :&: ((f2 :&: ((e' :|: r0) :&: s1)) :|: r3))
bonslsfr :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((f2 :&: ((l0 :|: e ) :&: s1)) :|: r3)) (f4 :&: ((f2 :&: ((l0 :|: e') :&: s1)) :|: r3))
bonslssf :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((f2 :&: (f1 :&: (e  :&: s0))) :|: r3)) (f4 :&: ((f2 :&: (f1 :&: (e' :&: s0))) :|: r3))
bonslsss :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((f2 :&: (f1 :&: (f0 :&: e ))) :|: r3)) (f4 :&: ((f2 :&: (f1 :&: (f0 :&: e'))) :|: r3))
bonslssl :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((f2 :&: (f1 :&: (e  :|: r0))) :|: r3)) (f4 :&: ((f2 :&: (f1 :&: (e' :|: r0))) :|: r3))
bonslssr :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((f2 :&: (f1 :&: (l0 :|: e ))) :|: r3)) (f4 :&: ((f2 :&: (f1 :&: (l0 :|: e'))) :|: r3))
bonslslf :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((f2 :&: ((e  :&: s0) :|: r1)) :|: r3)) (f4 :&: ((f2 :&: ((e' :&: s0) :|: r1)) :|: r3))
bonslsls :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((f2 :&: ((f0 :&: e ) :|: r1)) :|: r3)) (f4 :&: ((f2 :&: ((f0 :&: e') :|: r1)) :|: r3))
bonslsll :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((f2 :&: ((e  :|: r0) :|: r1)) :|: r3)) (f4 :&: ((f2 :&: ((e' :|: r0) :|: r1)) :|: r3))
bonslslr :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((f2 :&: ((l0 :|: e ) :|: r1)) :|: r3)) (f4 :&: ((f2 :&: ((l0 :|: e') :|: r1)) :|: r3))
bonslsrf :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((f2 :&: (l1 :|: (e  :&: s0))) :|: r3)) (f4 :&: ((f2 :&: (l1 :|: (e' :&: s0))) :|: r3))
bonslsrs :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((f2 :&: (l1 :|: (f0 :&: e ))) :|: r3)) (f4 :&: ((f2 :&: (l1 :|: (f0 :&: e'))) :|: r3))
bonslsrl :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((f2 :&: (l1 :|: (e  :|: r0))) :|: r3)) (f4 :&: ((f2 :&: (l1 :|: (e' :|: r0))) :|: r3))
bonslsrr :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((f2 :&: (l1 :|: (l0 :|: e ))) :|: r3)) (f4 :&: ((f2 :&: (l1 :|: (l0 :|: e'))) :|: r3))
bonsllff :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((((e  :&: s0) :&: s1) :|: r2) :|: r3)) (f4 :&: ((((e' :&: s0) :&: s1) :|: r2) :|: r3))
bonsllfs :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((((f0 :&: e ) :&: s1) :|: r2) :|: r3)) (f4 :&: ((((f0 :&: e') :&: s1) :|: r2) :|: r3))
bonsllfl :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((((e  :|: r0) :&: s1) :|: r2) :|: r3)) (f4 :&: ((((e' :|: r0) :&: s1) :|: r2) :|: r3))
bonsllfr :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((((l0 :|: e ) :&: s1) :|: r2) :|: r3)) (f4 :&: ((((l0 :|: e') :&: s1) :|: r2) :|: r3))
bonsllsf :: (BProd b, BSum b) => b e e' -> b (f4 :&: (((f1 :&: (e  :&: s0)) :|: r2) :|: r3)) (f4 :&: (((f1 :&: (e' :&: s0)) :|: r2) :|: r3))
bonsllss :: (BProd b, BSum b) => b e e' -> b (f4 :&: (((f1 :&: (f0 :&: e )) :|: r2) :|: r3)) (f4 :&: (((f1 :&: (f0 :&: e')) :|: r2) :|: r3))
bonsllsl :: (BProd b, BSum b) => b e e' -> b (f4 :&: (((f1 :&: (e  :|: r0)) :|: r2) :|: r3)) (f4 :&: (((f1 :&: (e' :|: r0)) :|: r2) :|: r3))
bonsllsr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (((f1 :&: (l0 :|: e )) :|: r2) :|: r3)) (f4 :&: (((f1 :&: (l0 :|: e')) :|: r2) :|: r3))
bonslllf :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((((e  :&: s0) :|: r1) :|: r2) :|: r3)) (f4 :&: ((((e' :&: s0) :|: r1) :|: r2) :|: r3))
bonsllls :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((((f0 :&: e ) :|: r1) :|: r2) :|: r3)) (f4 :&: ((((f0 :&: e') :|: r1) :|: r2) :|: r3))
bonsllll :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((((e  :|: r0) :|: r1) :|: r2) :|: r3)) (f4 :&: ((((e' :|: r0) :|: r1) :|: r2) :|: r3))
bonslllr :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((((l0 :|: e ) :|: r1) :|: r2) :|: r3)) (f4 :&: ((((l0 :|: e') :|: r1) :|: r2) :|: r3))
bonsllrf :: (BProd b, BSum b) => b e e' -> b (f4 :&: (((l1 :|: (e  :&: s0)) :|: r2) :|: r3)) (f4 :&: (((l1 :|: (e' :&: s0)) :|: r2) :|: r3))
bonsllrs :: (BProd b, BSum b) => b e e' -> b (f4 :&: (((l1 :|: (f0 :&: e )) :|: r2) :|: r3)) (f4 :&: (((l1 :|: (f0 :&: e')) :|: r2) :|: r3))
bonsllrl :: (BProd b, BSum b) => b e e' -> b (f4 :&: (((l1 :|: (e  :|: r0)) :|: r2) :|: r3)) (f4 :&: (((l1 :|: (e' :|: r0)) :|: r2) :|: r3))
bonsllrr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (((l1 :|: (l0 :|: e )) :|: r2) :|: r3)) (f4 :&: (((l1 :|: (l0 :|: e')) :|: r2) :|: r3))
bonslrff :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((l2 :|: ((e  :&: s0) :&: s1)) :|: r3)) (f4 :&: ((l2 :|: ((e' :&: s0) :&: s1)) :|: r3))
bonslrfs :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((l2 :|: ((f0 :&: e ) :&: s1)) :|: r3)) (f4 :&: ((l2 :|: ((f0 :&: e') :&: s1)) :|: r3))
bonslrfl :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((l2 :|: ((e  :|: r0) :&: s1)) :|: r3)) (f4 :&: ((l2 :|: ((e' :|: r0) :&: s1)) :|: r3))
bonslrfr :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((l2 :|: ((l0 :|: e ) :&: s1)) :|: r3)) (f4 :&: ((l2 :|: ((l0 :|: e') :&: s1)) :|: r3))
bonslrsf :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((l2 :|: (f1 :&: (e  :&: s0))) :|: r3)) (f4 :&: ((l2 :|: (f1 :&: (e' :&: s0))) :|: r3))
bonslrss :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((l2 :|: (f1 :&: (f0 :&: e ))) :|: r3)) (f4 :&: ((l2 :|: (f1 :&: (f0 :&: e'))) :|: r3))
bonslrsl :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((l2 :|: (f1 :&: (e  :|: r0))) :|: r3)) (f4 :&: ((l2 :|: (f1 :&: (e' :|: r0))) :|: r3))
bonslrsr :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((l2 :|: (f1 :&: (l0 :|: e ))) :|: r3)) (f4 :&: ((l2 :|: (f1 :&: (l0 :|: e'))) :|: r3))
bonslrlf :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((l2 :|: ((e  :&: s0) :|: r1)) :|: r3)) (f4 :&: ((l2 :|: ((e' :&: s0) :|: r1)) :|: r3))
bonslrls :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((l2 :|: ((f0 :&: e ) :|: r1)) :|: r3)) (f4 :&: ((l2 :|: ((f0 :&: e') :|: r1)) :|: r3))
bonslrll :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((l2 :|: ((e  :|: r0) :|: r1)) :|: r3)) (f4 :&: ((l2 :|: ((e' :|: r0) :|: r1)) :|: r3))
bonslrlr :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((l2 :|: ((l0 :|: e ) :|: r1)) :|: r3)) (f4 :&: ((l2 :|: ((l0 :|: e') :|: r1)) :|: r3))
bonslrrf :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((l2 :|: (l1 :|: (e  :&: s0))) :|: r3)) (f4 :&: ((l2 :|: (l1 :|: (e' :&: s0))) :|: r3))
bonslrrs :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((l2 :|: (l1 :|: (f0 :&: e ))) :|: r3)) (f4 :&: ((l2 :|: (l1 :|: (f0 :&: e'))) :|: r3))
bonslrrl :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((l2 :|: (l1 :|: (e  :|: r0))) :|: r3)) (f4 :&: ((l2 :|: (l1 :|: (e' :|: r0))) :|: r3))
bonslrrr :: (BProd b, BSum b) => b e e' -> b (f4 :&: ((l2 :|: (l1 :|: (l0 :|: e ))) :|: r3)) (f4 :&: ((l2 :|: (l1 :|: (l0 :|: e'))) :|: r3))
bonsrfff :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (((e  :&: s0) :&: s1) :&: s2))) (f4 :&: (l3 :|: (((e' :&: s0) :&: s1) :&: s2)))
bonsrffs :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (((f0 :&: e ) :&: s1) :&: s2))) (f4 :&: (l3 :|: (((f0 :&: e') :&: s1) :&: s2)))
bonsrffl :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (((e  :|: r0) :&: s1) :&: s2))) (f4 :&: (l3 :|: (((e' :|: r0) :&: s1) :&: s2)))
bonsrffr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (((l0 :|: e ) :&: s1) :&: s2))) (f4 :&: (l3 :|: (((l0 :|: e') :&: s1) :&: s2)))
bonsrfsf :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: ((f1 :&: (e  :&: s0)) :&: s2))) (f4 :&: (l3 :|: ((f1 :&: (e' :&: s0)) :&: s2)))
bonsrfss :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: ((f1 :&: (f0 :&: e )) :&: s2))) (f4 :&: (l3 :|: ((f1 :&: (f0 :&: e')) :&: s2)))
bonsrfsl :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: ((f1 :&: (e  :|: r0)) :&: s2))) (f4 :&: (l3 :|: ((f1 :&: (e' :|: r0)) :&: s2)))
bonsrfsr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: ((f1 :&: (l0 :|: e )) :&: s2))) (f4 :&: (l3 :|: ((f1 :&: (l0 :|: e')) :&: s2)))
bonsrflf :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (((e  :&: s0) :|: r1) :&: s2))) (f4 :&: (l3 :|: (((e' :&: s0) :|: r1) :&: s2)))
bonsrfls :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (((f0 :&: e ) :|: r1) :&: s2))) (f4 :&: (l3 :|: (((f0 :&: e') :|: r1) :&: s2)))
bonsrfll :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (((e  :|: r0) :|: r1) :&: s2))) (f4 :&: (l3 :|: (((e' :|: r0) :|: r1) :&: s2)))
bonsrflr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (((l0 :|: e ) :|: r1) :&: s2))) (f4 :&: (l3 :|: (((l0 :|: e') :|: r1) :&: s2)))
bonsrfrf :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: ((l1 :|: (e  :&: s0)) :&: s2))) (f4 :&: (l3 :|: ((l1 :|: (e' :&: s0)) :&: s2)))
bonsrfrs :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: ((l1 :|: (f0 :&: e )) :&: s2))) (f4 :&: (l3 :|: ((l1 :|: (f0 :&: e')) :&: s2)))
bonsrfrl :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: ((l1 :|: (e  :|: r0)) :&: s2))) (f4 :&: (l3 :|: ((l1 :|: (e' :|: r0)) :&: s2)))
bonsrfrr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: ((l1 :|: (l0 :|: e )) :&: s2))) (f4 :&: (l3 :|: ((l1 :|: (l0 :|: e')) :&: s2)))
bonsrsff :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (f2 :&: ((e  :&: s0) :&: s1)))) (f4 :&: (l3 :|: (f2 :&: ((e' :&: s0) :&: s1))))
bonsrsfs :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (f2 :&: ((f0 :&: e ) :&: s1)))) (f4 :&: (l3 :|: (f2 :&: ((f0 :&: e') :&: s1))))
bonsrsfl :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (f2 :&: ((e  :|: r0) :&: s1)))) (f4 :&: (l3 :|: (f2 :&: ((e' :|: r0) :&: s1))))
bonsrsfr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (f2 :&: ((l0 :|: e ) :&: s1)))) (f4 :&: (l3 :|: (f2 :&: ((l0 :|: e') :&: s1))))
bonsrssf :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (f2 :&: (f1 :&: (e  :&: s0))))) (f4 :&: (l3 :|: (f2 :&: (f1 :&: (e' :&: s0)))))
bonsrsss :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (f2 :&: (f1 :&: (f0 :&: e ))))) (f4 :&: (l3 :|: (f2 :&: (f1 :&: (f0 :&: e')))))
bonsrssl :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (f2 :&: (f1 :&: (e  :|: r0))))) (f4 :&: (l3 :|: (f2 :&: (f1 :&: (e' :|: r0)))))
bonsrssr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (f2 :&: (f1 :&: (l0 :|: e ))))) (f4 :&: (l3 :|: (f2 :&: (f1 :&: (l0 :|: e')))))
bonsrslf :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (f2 :&: ((e  :&: s0) :|: r1)))) (f4 :&: (l3 :|: (f2 :&: ((e' :&: s0) :|: r1))))
bonsrsls :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (f2 :&: ((f0 :&: e ) :|: r1)))) (f4 :&: (l3 :|: (f2 :&: ((f0 :&: e') :|: r1))))
bonsrsll :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (f2 :&: ((e  :|: r0) :|: r1)))) (f4 :&: (l3 :|: (f2 :&: ((e' :|: r0) :|: r1))))
bonsrslr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (f2 :&: ((l0 :|: e ) :|: r1)))) (f4 :&: (l3 :|: (f2 :&: ((l0 :|: e') :|: r1))))
bonsrsrf :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (f2 :&: (l1 :|: (e  :&: s0))))) (f4 :&: (l3 :|: (f2 :&: (l1 :|: (e' :&: s0)))))
bonsrsrs :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (f2 :&: (l1 :|: (f0 :&: e ))))) (f4 :&: (l3 :|: (f2 :&: (l1 :|: (f0 :&: e')))))
bonsrsrl :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (f2 :&: (l1 :|: (e  :|: r0))))) (f4 :&: (l3 :|: (f2 :&: (l1 :|: (e' :|: r0)))))
bonsrsrr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (f2 :&: (l1 :|: (l0 :|: e ))))) (f4 :&: (l3 :|: (f2 :&: (l1 :|: (l0 :|: e')))))
bonsrlff :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (((e  :&: s0) :&: s1) :|: r2))) (f4 :&: (l3 :|: (((e' :&: s0) :&: s1) :|: r2)))
bonsrlfs :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (((f0 :&: e ) :&: s1) :|: r2))) (f4 :&: (l3 :|: (((f0 :&: e') :&: s1) :|: r2)))
bonsrlfl :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (((e  :|: r0) :&: s1) :|: r2))) (f4 :&: (l3 :|: (((e' :|: r0) :&: s1) :|: r2)))
bonsrlfr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (((l0 :|: e ) :&: s1) :|: r2))) (f4 :&: (l3 :|: (((l0 :|: e') :&: s1) :|: r2)))
bonsrlsf :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: ((f1 :&: (e  :&: s0)) :|: r2))) (f4 :&: (l3 :|: ((f1 :&: (e' :&: s0)) :|: r2)))
bonsrlss :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: ((f1 :&: (f0 :&: e )) :|: r2))) (f4 :&: (l3 :|: ((f1 :&: (f0 :&: e')) :|: r2)))
bonsrlsl :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: ((f1 :&: (e  :|: r0)) :|: r2))) (f4 :&: (l3 :|: ((f1 :&: (e' :|: r0)) :|: r2)))
bonsrlsr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: ((f1 :&: (l0 :|: e )) :|: r2))) (f4 :&: (l3 :|: ((f1 :&: (l0 :|: e')) :|: r2)))
bonsrllf :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (((e  :&: s0) :|: r1) :|: r2))) (f4 :&: (l3 :|: (((e' :&: s0) :|: r1) :|: r2)))
bonsrlls :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (((f0 :&: e ) :|: r1) :|: r2))) (f4 :&: (l3 :|: (((f0 :&: e') :|: r1) :|: r2)))
bonsrlll :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (((e  :|: r0) :|: r1) :|: r2))) (f4 :&: (l3 :|: (((e' :|: r0) :|: r1) :|: r2)))
bonsrllr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (((l0 :|: e ) :|: r1) :|: r2))) (f4 :&: (l3 :|: (((l0 :|: e') :|: r1) :|: r2)))
bonsrlrf :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: ((l1 :|: (e  :&: s0)) :|: r2))) (f4 :&: (l3 :|: ((l1 :|: (e' :&: s0)) :|: r2)))
bonsrlrs :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: ((l1 :|: (f0 :&: e )) :|: r2))) (f4 :&: (l3 :|: ((l1 :|: (f0 :&: e')) :|: r2)))
bonsrlrl :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: ((l1 :|: (e  :|: r0)) :|: r2))) (f4 :&: (l3 :|: ((l1 :|: (e' :|: r0)) :|: r2)))
bonsrlrr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: ((l1 :|: (l0 :|: e )) :|: r2))) (f4 :&: (l3 :|: ((l1 :|: (l0 :|: e')) :|: r2)))
bonsrrff :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (l2 :|: ((e  :&: s0) :&: s1)))) (f4 :&: (l3 :|: (l2 :|: ((e' :&: s0) :&: s1))))
bonsrrfs :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (l2 :|: ((f0 :&: e ) :&: s1)))) (f4 :&: (l3 :|: (l2 :|: ((f0 :&: e') :&: s1))))
bonsrrfl :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (l2 :|: ((e  :|: r0) :&: s1)))) (f4 :&: (l3 :|: (l2 :|: ((e' :|: r0) :&: s1))))
bonsrrfr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (l2 :|: ((l0 :|: e ) :&: s1)))) (f4 :&: (l3 :|: (l2 :|: ((l0 :|: e') :&: s1))))
bonsrrsf :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (l2 :|: (f1 :&: (e  :&: s0))))) (f4 :&: (l3 :|: (l2 :|: (f1 :&: (e' :&: s0)))))
bonsrrss :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (l2 :|: (f1 :&: (f0 :&: e ))))) (f4 :&: (l3 :|: (l2 :|: (f1 :&: (f0 :&: e')))))
bonsrrsl :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (l2 :|: (f1 :&: (e  :|: r0))))) (f4 :&: (l3 :|: (l2 :|: (f1 :&: (e' :|: r0)))))
bonsrrsr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (l2 :|: (f1 :&: (l0 :|: e ))))) (f4 :&: (l3 :|: (l2 :|: (f1 :&: (l0 :|: e')))))
bonsrrlf :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (l2 :|: ((e  :&: s0) :|: r1)))) (f4 :&: (l3 :|: (l2 :|: ((e' :&: s0) :|: r1))))
bonsrrls :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (l2 :|: ((f0 :&: e ) :|: r1)))) (f4 :&: (l3 :|: (l2 :|: ((f0 :&: e') :|: r1))))
bonsrrll :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (l2 :|: ((e  :|: r0) :|: r1)))) (f4 :&: (l3 :|: (l2 :|: ((e' :|: r0) :|: r1))))
bonsrrlr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (l2 :|: ((l0 :|: e ) :|: r1)))) (f4 :&: (l3 :|: (l2 :|: ((l0 :|: e') :|: r1))))
bonsrrrf :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (l2 :|: (l1 :|: (e  :&: s0))))) (f4 :&: (l3 :|: (l2 :|: (l1 :|: (e' :&: s0)))))
bonsrrrs :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (l2 :|: (l1 :|: (f0 :&: e ))))) (f4 :&: (l3 :|: (l2 :|: (l1 :|: (f0 :&: e')))))
bonsrrrl :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (l2 :|: (l1 :|: (e  :|: r0))))) (f4 :&: (l3 :|: (l2 :|: (l1 :|: (e' :|: r0)))))
bonsrrrr :: (BProd b, BSum b) => b e e' -> b (f4 :&: (l3 :|: (l2 :|: (l1 :|: (l0 :|: e ))))) (f4 :&: (l3 :|: (l2 :|: (l1 :|: (l0 :|: e')))))
bonlffff :: (BProd b, BSum b) => b e e' -> b (((((e  :&: s0) :&: s1) :&: s2) :&: s3) :|: r4) (((((e' :&: s0) :&: s1) :&: s2) :&: s3) :|: r4)
bonlfffs :: (BProd b, BSum b) => b e e' -> b (((((f0 :&: e ) :&: s1) :&: s2) :&: s3) :|: r4) (((((f0 :&: e') :&: s1) :&: s2) :&: s3) :|: r4)
bonlfffl :: (BProd b, BSum b) => b e e' -> b (((((e  :|: r0) :&: s1) :&: s2) :&: s3) :|: r4) (((((e' :|: r0) :&: s1) :&: s2) :&: s3) :|: r4)
bonlfffr :: (BProd b, BSum b) => b e e' -> b (((((l0 :|: e ) :&: s1) :&: s2) :&: s3) :|: r4) (((((l0 :|: e') :&: s1) :&: s2) :&: s3) :|: r4)
bonlffsf :: (BProd b, BSum b) => b e e' -> b ((((f1 :&: (e  :&: s0)) :&: s2) :&: s3) :|: r4) ((((f1 :&: (e' :&: s0)) :&: s2) :&: s3) :|: r4)
bonlffss :: (BProd b, BSum b) => b e e' -> b ((((f1 :&: (f0 :&: e )) :&: s2) :&: s3) :|: r4) ((((f1 :&: (f0 :&: e')) :&: s2) :&: s3) :|: r4)
bonlffsl :: (BProd b, BSum b) => b e e' -> b ((((f1 :&: (e  :|: r0)) :&: s2) :&: s3) :|: r4) ((((f1 :&: (e' :|: r0)) :&: s2) :&: s3) :|: r4)
bonlffsr :: (BProd b, BSum b) => b e e' -> b ((((f1 :&: (l0 :|: e )) :&: s2) :&: s3) :|: r4) ((((f1 :&: (l0 :|: e')) :&: s2) :&: s3) :|: r4)
bonlfflf :: (BProd b, BSum b) => b e e' -> b (((((e  :&: s0) :|: r1) :&: s2) :&: s3) :|: r4) (((((e' :&: s0) :|: r1) :&: s2) :&: s3) :|: r4)
bonlffls :: (BProd b, BSum b) => b e e' -> b (((((f0 :&: e ) :|: r1) :&: s2) :&: s3) :|: r4) (((((f0 :&: e') :|: r1) :&: s2) :&: s3) :|: r4)
bonlffll :: (BProd b, BSum b) => b e e' -> b (((((e  :|: r0) :|: r1) :&: s2) :&: s3) :|: r4) (((((e' :|: r0) :|: r1) :&: s2) :&: s3) :|: r4)
bonlfflr :: (BProd b, BSum b) => b e e' -> b (((((l0 :|: e ) :|: r1) :&: s2) :&: s3) :|: r4) (((((l0 :|: e') :|: r1) :&: s2) :&: s3) :|: r4)
bonlffrf :: (BProd b, BSum b) => b e e' -> b ((((l1 :|: (e  :&: s0)) :&: s2) :&: s3) :|: r4) ((((l1 :|: (e' :&: s0)) :&: s2) :&: s3) :|: r4)
bonlffrs :: (BProd b, BSum b) => b e e' -> b ((((l1 :|: (f0 :&: e )) :&: s2) :&: s3) :|: r4) ((((l1 :|: (f0 :&: e')) :&: s2) :&: s3) :|: r4)
bonlffrl :: (BProd b, BSum b) => b e e' -> b ((((l1 :|: (e  :|: r0)) :&: s2) :&: s3) :|: r4) ((((l1 :|: (e' :|: r0)) :&: s2) :&: s3) :|: r4)
bonlffrr :: (BProd b, BSum b) => b e e' -> b ((((l1 :|: (l0 :|: e )) :&: s2) :&: s3) :|: r4) ((((l1 :|: (l0 :|: e')) :&: s2) :&: s3) :|: r4)
bonlfsff :: (BProd b, BSum b) => b e e' -> b (((f2 :&: ((e  :&: s0) :&: s1)) :&: s3) :|: r4) (((f2 :&: ((e' :&: s0) :&: s1)) :&: s3) :|: r4)
bonlfsfs :: (BProd b, BSum b) => b e e' -> b (((f2 :&: ((f0 :&: e ) :&: s1)) :&: s3) :|: r4) (((f2 :&: ((f0 :&: e') :&: s1)) :&: s3) :|: r4)
bonlfsfl :: (BProd b, BSum b) => b e e' -> b (((f2 :&: ((e  :|: r0) :&: s1)) :&: s3) :|: r4) (((f2 :&: ((e' :|: r0) :&: s1)) :&: s3) :|: r4)
bonlfsfr :: (BProd b, BSum b) => b e e' -> b (((f2 :&: ((l0 :|: e ) :&: s1)) :&: s3) :|: r4) (((f2 :&: ((l0 :|: e') :&: s1)) :&: s3) :|: r4)
bonlfssf :: (BProd b, BSum b) => b e e' -> b (((f2 :&: (f1 :&: (e  :&: s0))) :&: s3) :|: r4) (((f2 :&: (f1 :&: (e' :&: s0))) :&: s3) :|: r4)
bonlfsss :: (BProd b, BSum b) => b e e' -> b (((f2 :&: (f1 :&: (f0 :&: e ))) :&: s3) :|: r4) (((f2 :&: (f1 :&: (f0 :&: e'))) :&: s3) :|: r4)
bonlfssl :: (BProd b, BSum b) => b e e' -> b (((f2 :&: (f1 :&: (e  :|: r0))) :&: s3) :|: r4) (((f2 :&: (f1 :&: (e' :|: r0))) :&: s3) :|: r4)
bonlfssr :: (BProd b, BSum b) => b e e' -> b (((f2 :&: (f1 :&: (l0 :|: e ))) :&: s3) :|: r4) (((f2 :&: (f1 :&: (l0 :|: e'))) :&: s3) :|: r4)
bonlfslf :: (BProd b, BSum b) => b e e' -> b (((f2 :&: ((e  :&: s0) :|: r1)) :&: s3) :|: r4) (((f2 :&: ((e' :&: s0) :|: r1)) :&: s3) :|: r4)
bonlfsls :: (BProd b, BSum b) => b e e' -> b (((f2 :&: ((f0 :&: e ) :|: r1)) :&: s3) :|: r4) (((f2 :&: ((f0 :&: e') :|: r1)) :&: s3) :|: r4)
bonlfsll :: (BProd b, BSum b) => b e e' -> b (((f2 :&: ((e  :|: r0) :|: r1)) :&: s3) :|: r4) (((f2 :&: ((e' :|: r0) :|: r1)) :&: s3) :|: r4)
bonlfslr :: (BProd b, BSum b) => b e e' -> b (((f2 :&: ((l0 :|: e ) :|: r1)) :&: s3) :|: r4) (((f2 :&: ((l0 :|: e') :|: r1)) :&: s3) :|: r4)
bonlfsrf :: (BProd b, BSum b) => b e e' -> b (((f2 :&: (l1 :|: (e  :&: s0))) :&: s3) :|: r4) (((f2 :&: (l1 :|: (e' :&: s0))) :&: s3) :|: r4)
bonlfsrs :: (BProd b, BSum b) => b e e' -> b (((f2 :&: (l1 :|: (f0 :&: e ))) :&: s3) :|: r4) (((f2 :&: (l1 :|: (f0 :&: e'))) :&: s3) :|: r4)
bonlfsrl :: (BProd b, BSum b) => b e e' -> b (((f2 :&: (l1 :|: (e  :|: r0))) :&: s3) :|: r4) (((f2 :&: (l1 :|: (e' :|: r0))) :&: s3) :|: r4)
bonlfsrr :: (BProd b, BSum b) => b e e' -> b (((f2 :&: (l1 :|: (l0 :|: e ))) :&: s3) :|: r4) (((f2 :&: (l1 :|: (l0 :|: e'))) :&: s3) :|: r4)
bonlflff :: (BProd b, BSum b) => b e e' -> b (((((e  :&: s0) :&: s1) :|: r2) :&: s3) :|: r4) (((((e' :&: s0) :&: s1) :|: r2) :&: s3) :|: r4)
bonlflfs :: (BProd b, BSum b) => b e e' -> b (((((f0 :&: e ) :&: s1) :|: r2) :&: s3) :|: r4) (((((f0 :&: e') :&: s1) :|: r2) :&: s3) :|: r4)
bonlflfl :: (BProd b, BSum b) => b e e' -> b (((((e  :|: r0) :&: s1) :|: r2) :&: s3) :|: r4) (((((e' :|: r0) :&: s1) :|: r2) :&: s3) :|: r4)
bonlflfr :: (BProd b, BSum b) => b e e' -> b (((((l0 :|: e ) :&: s1) :|: r2) :&: s3) :|: r4) (((((l0 :|: e') :&: s1) :|: r2) :&: s3) :|: r4)
bonlflsf :: (BProd b, BSum b) => b e e' -> b ((((f1 :&: (e  :&: s0)) :|: r2) :&: s3) :|: r4) ((((f1 :&: (e' :&: s0)) :|: r2) :&: s3) :|: r4)
bonlflss :: (BProd b, BSum b) => b e e' -> b ((((f1 :&: (f0 :&: e )) :|: r2) :&: s3) :|: r4) ((((f1 :&: (f0 :&: e')) :|: r2) :&: s3) :|: r4)
bonlflsl :: (BProd b, BSum b) => b e e' -> b ((((f1 :&: (e  :|: r0)) :|: r2) :&: s3) :|: r4) ((((f1 :&: (e' :|: r0)) :|: r2) :&: s3) :|: r4)
bonlflsr :: (BProd b, BSum b) => b e e' -> b ((((f1 :&: (l0 :|: e )) :|: r2) :&: s3) :|: r4) ((((f1 :&: (l0 :|: e')) :|: r2) :&: s3) :|: r4)
bonlfllf :: (BProd b, BSum b) => b e e' -> b (((((e  :&: s0) :|: r1) :|: r2) :&: s3) :|: r4) (((((e' :&: s0) :|: r1) :|: r2) :&: s3) :|: r4)
bonlflls :: (BProd b, BSum b) => b e e' -> b (((((f0 :&: e ) :|: r1) :|: r2) :&: s3) :|: r4) (((((f0 :&: e') :|: r1) :|: r2) :&: s3) :|: r4)
bonlflll :: (BProd b, BSum b) => b e e' -> b (((((e  :|: r0) :|: r1) :|: r2) :&: s3) :|: r4) (((((e' :|: r0) :|: r1) :|: r2) :&: s3) :|: r4)
bonlfllr :: (BProd b, BSum b) => b e e' -> b (((((l0 :|: e ) :|: r1) :|: r2) :&: s3) :|: r4) (((((l0 :|: e') :|: r1) :|: r2) :&: s3) :|: r4)
bonlflrf :: (BProd b, BSum b) => b e e' -> b ((((l1 :|: (e  :&: s0)) :|: r2) :&: s3) :|: r4) ((((l1 :|: (e' :&: s0)) :|: r2) :&: s3) :|: r4)
bonlflrs :: (BProd b, BSum b) => b e e' -> b ((((l1 :|: (f0 :&: e )) :|: r2) :&: s3) :|: r4) ((((l1 :|: (f0 :&: e')) :|: r2) :&: s3) :|: r4)
bonlflrl :: (BProd b, BSum b) => b e e' -> b ((((l1 :|: (e  :|: r0)) :|: r2) :&: s3) :|: r4) ((((l1 :|: (e' :|: r0)) :|: r2) :&: s3) :|: r4)
bonlflrr :: (BProd b, BSum b) => b e e' -> b ((((l1 :|: (l0 :|: e )) :|: r2) :&: s3) :|: r4) ((((l1 :|: (l0 :|: e')) :|: r2) :&: s3) :|: r4)
bonlfrff :: (BProd b, BSum b) => b e e' -> b (((l2 :|: ((e  :&: s0) :&: s1)) :&: s3) :|: r4) (((l2 :|: ((e' :&: s0) :&: s1)) :&: s3) :|: r4)
bonlfrfs :: (BProd b, BSum b) => b e e' -> b (((l2 :|: ((f0 :&: e ) :&: s1)) :&: s3) :|: r4) (((l2 :|: ((f0 :&: e') :&: s1)) :&: s3) :|: r4)
bonlfrfl :: (BProd b, BSum b) => b e e' -> b (((l2 :|: ((e  :|: r0) :&: s1)) :&: s3) :|: r4) (((l2 :|: ((e' :|: r0) :&: s1)) :&: s3) :|: r4)
bonlfrfr :: (BProd b, BSum b) => b e e' -> b (((l2 :|: ((l0 :|: e ) :&: s1)) :&: s3) :|: r4) (((l2 :|: ((l0 :|: e') :&: s1)) :&: s3) :|: r4)
bonlfrsf :: (BProd b, BSum b) => b e e' -> b (((l2 :|: (f1 :&: (e  :&: s0))) :&: s3) :|: r4) (((l2 :|: (f1 :&: (e' :&: s0))) :&: s3) :|: r4)
bonlfrss :: (BProd b, BSum b) => b e e' -> b (((l2 :|: (f1 :&: (f0 :&: e ))) :&: s3) :|: r4) (((l2 :|: (f1 :&: (f0 :&: e'))) :&: s3) :|: r4)
bonlfrsl :: (BProd b, BSum b) => b e e' -> b (((l2 :|: (f1 :&: (e  :|: r0))) :&: s3) :|: r4) (((l2 :|: (f1 :&: (e' :|: r0))) :&: s3) :|: r4)
bonlfrsr :: (BProd b, BSum b) => b e e' -> b (((l2 :|: (f1 :&: (l0 :|: e ))) :&: s3) :|: r4) (((l2 :|: (f1 :&: (l0 :|: e'))) :&: s3) :|: r4)
bonlfrlf :: (BProd b, BSum b) => b e e' -> b (((l2 :|: ((e  :&: s0) :|: r1)) :&: s3) :|: r4) (((l2 :|: ((e' :&: s0) :|: r1)) :&: s3) :|: r4)
bonlfrls :: (BProd b, BSum b) => b e e' -> b (((l2 :|: ((f0 :&: e ) :|: r1)) :&: s3) :|: r4) (((l2 :|: ((f0 :&: e') :|: r1)) :&: s3) :|: r4)
bonlfrll :: (BProd b, BSum b) => b e e' -> b (((l2 :|: ((e  :|: r0) :|: r1)) :&: s3) :|: r4) (((l2 :|: ((e' :|: r0) :|: r1)) :&: s3) :|: r4)
bonlfrlr :: (BProd b, BSum b) => b e e' -> b (((l2 :|: ((l0 :|: e ) :|: r1)) :&: s3) :|: r4) (((l2 :|: ((l0 :|: e') :|: r1)) :&: s3) :|: r4)
bonlfrrf :: (BProd b, BSum b) => b e e' -> b (((l2 :|: (l1 :|: (e  :&: s0))) :&: s3) :|: r4) (((l2 :|: (l1 :|: (e' :&: s0))) :&: s3) :|: r4)
bonlfrrs :: (BProd b, BSum b) => b e e' -> b (((l2 :|: (l1 :|: (f0 :&: e ))) :&: s3) :|: r4) (((l2 :|: (l1 :|: (f0 :&: e'))) :&: s3) :|: r4)
bonlfrrl :: (BProd b, BSum b) => b e e' -> b (((l2 :|: (l1 :|: (e  :|: r0))) :&: s3) :|: r4) (((l2 :|: (l1 :|: (e' :|: r0))) :&: s3) :|: r4)
bonlfrrr :: (BProd b, BSum b) => b e e' -> b (((l2 :|: (l1 :|: (l0 :|: e ))) :&: s3) :|: r4) (((l2 :|: (l1 :|: (l0 :|: e'))) :&: s3) :|: r4)
bonlsfff :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (((e  :&: s0) :&: s1) :&: s2)) :|: r4) ((f3 :&: (((e' :&: s0) :&: s1) :&: s2)) :|: r4)
bonlsffs :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (((f0 :&: e ) :&: s1) :&: s2)) :|: r4) ((f3 :&: (((f0 :&: e') :&: s1) :&: s2)) :|: r4)
bonlsffl :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (((e  :|: r0) :&: s1) :&: s2)) :|: r4) ((f3 :&: (((e' :|: r0) :&: s1) :&: s2)) :|: r4)
bonlsffr :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (((l0 :|: e ) :&: s1) :&: s2)) :|: r4) ((f3 :&: (((l0 :|: e') :&: s1) :&: s2)) :|: r4)
bonlsfsf :: (BProd b, BSum b) => b e e' -> b ((f3 :&: ((f1 :&: (e  :&: s0)) :&: s2)) :|: r4) ((f3 :&: ((f1 :&: (e' :&: s0)) :&: s2)) :|: r4)
bonlsfss :: (BProd b, BSum b) => b e e' -> b ((f3 :&: ((f1 :&: (f0 :&: e )) :&: s2)) :|: r4) ((f3 :&: ((f1 :&: (f0 :&: e')) :&: s2)) :|: r4)
bonlsfsl :: (BProd b, BSum b) => b e e' -> b ((f3 :&: ((f1 :&: (e  :|: r0)) :&: s2)) :|: r4) ((f3 :&: ((f1 :&: (e' :|: r0)) :&: s2)) :|: r4)
bonlsfsr :: (BProd b, BSum b) => b e e' -> b ((f3 :&: ((f1 :&: (l0 :|: e )) :&: s2)) :|: r4) ((f3 :&: ((f1 :&: (l0 :|: e')) :&: s2)) :|: r4)
bonlsflf :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (((e  :&: s0) :|: r1) :&: s2)) :|: r4) ((f3 :&: (((e' :&: s0) :|: r1) :&: s2)) :|: r4)
bonlsfls :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (((f0 :&: e ) :|: r1) :&: s2)) :|: r4) ((f3 :&: (((f0 :&: e') :|: r1) :&: s2)) :|: r4)
bonlsfll :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (((e  :|: r0) :|: r1) :&: s2)) :|: r4) ((f3 :&: (((e' :|: r0) :|: r1) :&: s2)) :|: r4)
bonlsflr :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (((l0 :|: e ) :|: r1) :&: s2)) :|: r4) ((f3 :&: (((l0 :|: e') :|: r1) :&: s2)) :|: r4)
bonlsfrf :: (BProd b, BSum b) => b e e' -> b ((f3 :&: ((l1 :|: (e  :&: s0)) :&: s2)) :|: r4) ((f3 :&: ((l1 :|: (e' :&: s0)) :&: s2)) :|: r4)
bonlsfrs :: (BProd b, BSum b) => b e e' -> b ((f3 :&: ((l1 :|: (f0 :&: e )) :&: s2)) :|: r4) ((f3 :&: ((l1 :|: (f0 :&: e')) :&: s2)) :|: r4)
bonlsfrl :: (BProd b, BSum b) => b e e' -> b ((f3 :&: ((l1 :|: (e  :|: r0)) :&: s2)) :|: r4) ((f3 :&: ((l1 :|: (e' :|: r0)) :&: s2)) :|: r4)
bonlsfrr :: (BProd b, BSum b) => b e e' -> b ((f3 :&: ((l1 :|: (l0 :|: e )) :&: s2)) :|: r4) ((f3 :&: ((l1 :|: (l0 :|: e')) :&: s2)) :|: r4)
bonlssff :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (f2 :&: ((e  :&: s0) :&: s1))) :|: r4) ((f3 :&: (f2 :&: ((e' :&: s0) :&: s1))) :|: r4)
bonlssfs :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (f2 :&: ((f0 :&: e ) :&: s1))) :|: r4) ((f3 :&: (f2 :&: ((f0 :&: e') :&: s1))) :|: r4)
bonlssfl :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (f2 :&: ((e  :|: r0) :&: s1))) :|: r4) ((f3 :&: (f2 :&: ((e' :|: r0) :&: s1))) :|: r4)
bonlssfr :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (f2 :&: ((l0 :|: e ) :&: s1))) :|: r4) ((f3 :&: (f2 :&: ((l0 :|: e') :&: s1))) :|: r4)
bonlsssf :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (f2 :&: (f1 :&: (e  :&: s0)))) :|: r4) ((f3 :&: (f2 :&: (f1 :&: (e' :&: s0)))) :|: r4)
bonlssss :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (f2 :&: (f1 :&: (f0 :&: e )))) :|: r4) ((f3 :&: (f2 :&: (f1 :&: (f0 :&: e')))) :|: r4)
bonlsssl :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (f2 :&: (f1 :&: (e  :|: r0)))) :|: r4) ((f3 :&: (f2 :&: (f1 :&: (e' :|: r0)))) :|: r4)
bonlsssr :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (f2 :&: (f1 :&: (l0 :|: e )))) :|: r4) ((f3 :&: (f2 :&: (f1 :&: (l0 :|: e')))) :|: r4)
bonlsslf :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (f2 :&: ((e  :&: s0) :|: r1))) :|: r4) ((f3 :&: (f2 :&: ((e' :&: s0) :|: r1))) :|: r4)
bonlssls :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (f2 :&: ((f0 :&: e ) :|: r1))) :|: r4) ((f3 :&: (f2 :&: ((f0 :&: e') :|: r1))) :|: r4)
bonlssll :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (f2 :&: ((e  :|: r0) :|: r1))) :|: r4) ((f3 :&: (f2 :&: ((e' :|: r0) :|: r1))) :|: r4)
bonlsslr :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (f2 :&: ((l0 :|: e ) :|: r1))) :|: r4) ((f3 :&: (f2 :&: ((l0 :|: e') :|: r1))) :|: r4)
bonlssrf :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (f2 :&: (l1 :|: (e  :&: s0)))) :|: r4) ((f3 :&: (f2 :&: (l1 :|: (e' :&: s0)))) :|: r4)
bonlssrs :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (f2 :&: (l1 :|: (f0 :&: e )))) :|: r4) ((f3 :&: (f2 :&: (l1 :|: (f0 :&: e')))) :|: r4)
bonlssrl :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (f2 :&: (l1 :|: (e  :|: r0)))) :|: r4) ((f3 :&: (f2 :&: (l1 :|: (e' :|: r0)))) :|: r4)
bonlssrr :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (f2 :&: (l1 :|: (l0 :|: e )))) :|: r4) ((f3 :&: (f2 :&: (l1 :|: (l0 :|: e')))) :|: r4)
bonlslff :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (((e  :&: s0) :&: s1) :|: r2)) :|: r4) ((f3 :&: (((e' :&: s0) :&: s1) :|: r2)) :|: r4)
bonlslfs :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (((f0 :&: e ) :&: s1) :|: r2)) :|: r4) ((f3 :&: (((f0 :&: e') :&: s1) :|: r2)) :|: r4)
bonlslfl :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (((e  :|: r0) :&: s1) :|: r2)) :|: r4) ((f3 :&: (((e' :|: r0) :&: s1) :|: r2)) :|: r4)
bonlslfr :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (((l0 :|: e ) :&: s1) :|: r2)) :|: r4) ((f3 :&: (((l0 :|: e') :&: s1) :|: r2)) :|: r4)
bonlslsf :: (BProd b, BSum b) => b e e' -> b ((f3 :&: ((f1 :&: (e  :&: s0)) :|: r2)) :|: r4) ((f3 :&: ((f1 :&: (e' :&: s0)) :|: r2)) :|: r4)
bonlslss :: (BProd b, BSum b) => b e e' -> b ((f3 :&: ((f1 :&: (f0 :&: e )) :|: r2)) :|: r4) ((f3 :&: ((f1 :&: (f0 :&: e')) :|: r2)) :|: r4)
bonlslsl :: (BProd b, BSum b) => b e e' -> b ((f3 :&: ((f1 :&: (e  :|: r0)) :|: r2)) :|: r4) ((f3 :&: ((f1 :&: (e' :|: r0)) :|: r2)) :|: r4)
bonlslsr :: (BProd b, BSum b) => b e e' -> b ((f3 :&: ((f1 :&: (l0 :|: e )) :|: r2)) :|: r4) ((f3 :&: ((f1 :&: (l0 :|: e')) :|: r2)) :|: r4)
bonlsllf :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (((e  :&: s0) :|: r1) :|: r2)) :|: r4) ((f3 :&: (((e' :&: s0) :|: r1) :|: r2)) :|: r4)
bonlslls :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (((f0 :&: e ) :|: r1) :|: r2)) :|: r4) ((f3 :&: (((f0 :&: e') :|: r1) :|: r2)) :|: r4)
bonlslll :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (((e  :|: r0) :|: r1) :|: r2)) :|: r4) ((f3 :&: (((e' :|: r0) :|: r1) :|: r2)) :|: r4)
bonlsllr :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (((l0 :|: e ) :|: r1) :|: r2)) :|: r4) ((f3 :&: (((l0 :|: e') :|: r1) :|: r2)) :|: r4)
bonlslrf :: (BProd b, BSum b) => b e e' -> b ((f3 :&: ((l1 :|: (e  :&: s0)) :|: r2)) :|: r4) ((f3 :&: ((l1 :|: (e' :&: s0)) :|: r2)) :|: r4)
bonlslrs :: (BProd b, BSum b) => b e e' -> b ((f3 :&: ((l1 :|: (f0 :&: e )) :|: r2)) :|: r4) ((f3 :&: ((l1 :|: (f0 :&: e')) :|: r2)) :|: r4)
bonlslrl :: (BProd b, BSum b) => b e e' -> b ((f3 :&: ((l1 :|: (e  :|: r0)) :|: r2)) :|: r4) ((f3 :&: ((l1 :|: (e' :|: r0)) :|: r2)) :|: r4)
bonlslrr :: (BProd b, BSum b) => b e e' -> b ((f3 :&: ((l1 :|: (l0 :|: e )) :|: r2)) :|: r4) ((f3 :&: ((l1 :|: (l0 :|: e')) :|: r2)) :|: r4)
bonlsrff :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (l2 :|: ((e  :&: s0) :&: s1))) :|: r4) ((f3 :&: (l2 :|: ((e' :&: s0) :&: s1))) :|: r4)
bonlsrfs :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (l2 :|: ((f0 :&: e ) :&: s1))) :|: r4) ((f3 :&: (l2 :|: ((f0 :&: e') :&: s1))) :|: r4)
bonlsrfl :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (l2 :|: ((e  :|: r0) :&: s1))) :|: r4) ((f3 :&: (l2 :|: ((e' :|: r0) :&: s1))) :|: r4)
bonlsrfr :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (l2 :|: ((l0 :|: e ) :&: s1))) :|: r4) ((f3 :&: (l2 :|: ((l0 :|: e') :&: s1))) :|: r4)
bonlsrsf :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (l2 :|: (f1 :&: (e  :&: s0)))) :|: r4) ((f3 :&: (l2 :|: (f1 :&: (e' :&: s0)))) :|: r4)
bonlsrss :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (l2 :|: (f1 :&: (f0 :&: e )))) :|: r4) ((f3 :&: (l2 :|: (f1 :&: (f0 :&: e')))) :|: r4)
bonlsrsl :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (l2 :|: (f1 :&: (e  :|: r0)))) :|: r4) ((f3 :&: (l2 :|: (f1 :&: (e' :|: r0)))) :|: r4)
bonlsrsr :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (l2 :|: (f1 :&: (l0 :|: e )))) :|: r4) ((f3 :&: (l2 :|: (f1 :&: (l0 :|: e')))) :|: r4)
bonlsrlf :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (l2 :|: ((e  :&: s0) :|: r1))) :|: r4) ((f3 :&: (l2 :|: ((e' :&: s0) :|: r1))) :|: r4)
bonlsrls :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (l2 :|: ((f0 :&: e ) :|: r1))) :|: r4) ((f3 :&: (l2 :|: ((f0 :&: e') :|: r1))) :|: r4)
bonlsrll :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (l2 :|: ((e  :|: r0) :|: r1))) :|: r4) ((f3 :&: (l2 :|: ((e' :|: r0) :|: r1))) :|: r4)
bonlsrlr :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (l2 :|: ((l0 :|: e ) :|: r1))) :|: r4) ((f3 :&: (l2 :|: ((l0 :|: e') :|: r1))) :|: r4)
bonlsrrf :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (l2 :|: (l1 :|: (e  :&: s0)))) :|: r4) ((f3 :&: (l2 :|: (l1 :|: (e' :&: s0)))) :|: r4)
bonlsrrs :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (l2 :|: (l1 :|: (f0 :&: e )))) :|: r4) ((f3 :&: (l2 :|: (l1 :|: (f0 :&: e')))) :|: r4)
bonlsrrl :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (l2 :|: (l1 :|: (e  :|: r0)))) :|: r4) ((f3 :&: (l2 :|: (l1 :|: (e' :|: r0)))) :|: r4)
bonlsrrr :: (BProd b, BSum b) => b e e' -> b ((f3 :&: (l2 :|: (l1 :|: (l0 :|: e )))) :|: r4) ((f3 :&: (l2 :|: (l1 :|: (l0 :|: e')))) :|: r4)
bonllfff :: (BProd b, BSum b) => b e e' -> b (((((e  :&: s0) :&: s1) :&: s2) :|: r3) :|: r4) (((((e' :&: s0) :&: s1) :&: s2) :|: r3) :|: r4)
bonllffs :: (BProd b, BSum b) => b e e' -> b (((((f0 :&: e ) :&: s1) :&: s2) :|: r3) :|: r4) (((((f0 :&: e') :&: s1) :&: s2) :|: r3) :|: r4)
bonllffl :: (BProd b, BSum b) => b e e' -> b (((((e  :|: r0) :&: s1) :&: s2) :|: r3) :|: r4) (((((e' :|: r0) :&: s1) :&: s2) :|: r3) :|: r4)
bonllffr :: (BProd b, BSum b) => b e e' -> b (((((l0 :|: e ) :&: s1) :&: s2) :|: r3) :|: r4) (((((l0 :|: e') :&: s1) :&: s2) :|: r3) :|: r4)
bonllfsf :: (BProd b, BSum b) => b e e' -> b ((((f1 :&: (e  :&: s0)) :&: s2) :|: r3) :|: r4) ((((f1 :&: (e' :&: s0)) :&: s2) :|: r3) :|: r4)
bonllfss :: (BProd b, BSum b) => b e e' -> b ((((f1 :&: (f0 :&: e )) :&: s2) :|: r3) :|: r4) ((((f1 :&: (f0 :&: e')) :&: s2) :|: r3) :|: r4)
bonllfsl :: (BProd b, BSum b) => b e e' -> b ((((f1 :&: (e  :|: r0)) :&: s2) :|: r3) :|: r4) ((((f1 :&: (e' :|: r0)) :&: s2) :|: r3) :|: r4)
bonllfsr :: (BProd b, BSum b) => b e e' -> b ((((f1 :&: (l0 :|: e )) :&: s2) :|: r3) :|: r4) ((((f1 :&: (l0 :|: e')) :&: s2) :|: r3) :|: r4)
bonllflf :: (BProd b, BSum b) => b e e' -> b (((((e  :&: s0) :|: r1) :&: s2) :|: r3) :|: r4) (((((e' :&: s0) :|: r1) :&: s2) :|: r3) :|: r4)
bonllfls :: (BProd b, BSum b) => b e e' -> b (((((f0 :&: e ) :|: r1) :&: s2) :|: r3) :|: r4) (((((f0 :&: e') :|: r1) :&: s2) :|: r3) :|: r4)
bonllfll :: (BProd b, BSum b) => b e e' -> b (((((e  :|: r0) :|: r1) :&: s2) :|: r3) :|: r4) (((((e' :|: r0) :|: r1) :&: s2) :|: r3) :|: r4)
bonllflr :: (BProd b, BSum b) => b e e' -> b (((((l0 :|: e ) :|: r1) :&: s2) :|: r3) :|: r4) (((((l0 :|: e') :|: r1) :&: s2) :|: r3) :|: r4)
bonllfrf :: (BProd b, BSum b) => b e e' -> b ((((l1 :|: (e  :&: s0)) :&: s2) :|: r3) :|: r4) ((((l1 :|: (e' :&: s0)) :&: s2) :|: r3) :|: r4)
bonllfrs :: (BProd b, BSum b) => b e e' -> b ((((l1 :|: (f0 :&: e )) :&: s2) :|: r3) :|: r4) ((((l1 :|: (f0 :&: e')) :&: s2) :|: r3) :|: r4)
bonllfrl :: (BProd b, BSum b) => b e e' -> b ((((l1 :|: (e  :|: r0)) :&: s2) :|: r3) :|: r4) ((((l1 :|: (e' :|: r0)) :&: s2) :|: r3) :|: r4)
bonllfrr :: (BProd b, BSum b) => b e e' -> b ((((l1 :|: (l0 :|: e )) :&: s2) :|: r3) :|: r4) ((((l1 :|: (l0 :|: e')) :&: s2) :|: r3) :|: r4)
bonllsff :: (BProd b, BSum b) => b e e' -> b (((f2 :&: ((e  :&: s0) :&: s1)) :|: r3) :|: r4) (((f2 :&: ((e' :&: s0) :&: s1)) :|: r3) :|: r4)
bonllsfs :: (BProd b, BSum b) => b e e' -> b (((f2 :&: ((f0 :&: e ) :&: s1)) :|: r3) :|: r4) (((f2 :&: ((f0 :&: e') :&: s1)) :|: r3) :|: r4)
bonllsfl :: (BProd b, BSum b) => b e e' -> b (((f2 :&: ((e  :|: r0) :&: s1)) :|: r3) :|: r4) (((f2 :&: ((e' :|: r0) :&: s1)) :|: r3) :|: r4)
bonllsfr :: (BProd b, BSum b) => b e e' -> b (((f2 :&: ((l0 :|: e ) :&: s1)) :|: r3) :|: r4) (((f2 :&: ((l0 :|: e') :&: s1)) :|: r3) :|: r4)
bonllssf :: (BProd b, BSum b) => b e e' -> b (((f2 :&: (f1 :&: (e  :&: s0))) :|: r3) :|: r4) (((f2 :&: (f1 :&: (e' :&: s0))) :|: r3) :|: r4)
bonllsss :: (BProd b, BSum b) => b e e' -> b (((f2 :&: (f1 :&: (f0 :&: e ))) :|: r3) :|: r4) (((f2 :&: (f1 :&: (f0 :&: e'))) :|: r3) :|: r4)
bonllssl :: (BProd b, BSum b) => b e e' -> b (((f2 :&: (f1 :&: (e  :|: r0))) :|: r3) :|: r4) (((f2 :&: (f1 :&: (e' :|: r0))) :|: r3) :|: r4)
bonllssr :: (BProd b, BSum b) => b e e' -> b (((f2 :&: (f1 :&: (l0 :|: e ))) :|: r3) :|: r4) (((f2 :&: (f1 :&: (l0 :|: e'))) :|: r3) :|: r4)
bonllslf :: (BProd b, BSum b) => b e e' -> b (((f2 :&: ((e  :&: s0) :|: r1)) :|: r3) :|: r4) (((f2 :&: ((e' :&: s0) :|: r1)) :|: r3) :|: r4)
bonllsls :: (BProd b, BSum b) => b e e' -> b (((f2 :&: ((f0 :&: e ) :|: r1)) :|: r3) :|: r4) (((f2 :&: ((f0 :&: e') :|: r1)) :|: r3) :|: r4)
bonllsll :: (BProd b, BSum b) => b e e' -> b (((f2 :&: ((e  :|: r0) :|: r1)) :|: r3) :|: r4) (((f2 :&: ((e' :|: r0) :|: r1)) :|: r3) :|: r4)
bonllslr :: (BProd b, BSum b) => b e e' -> b (((f2 :&: ((l0 :|: e ) :|: r1)) :|: r3) :|: r4) (((f2 :&: ((l0 :|: e') :|: r1)) :|: r3) :|: r4)
bonllsrf :: (BProd b, BSum b) => b e e' -> b (((f2 :&: (l1 :|: (e  :&: s0))) :|: r3) :|: r4) (((f2 :&: (l1 :|: (e' :&: s0))) :|: r3) :|: r4)
bonllsrs :: (BProd b, BSum b) => b e e' -> b (((f2 :&: (l1 :|: (f0 :&: e ))) :|: r3) :|: r4) (((f2 :&: (l1 :|: (f0 :&: e'))) :|: r3) :|: r4)
bonllsrl :: (BProd b, BSum b) => b e e' -> b (((f2 :&: (l1 :|: (e  :|: r0))) :|: r3) :|: r4) (((f2 :&: (l1 :|: (e' :|: r0))) :|: r3) :|: r4)
bonllsrr :: (BProd b, BSum b) => b e e' -> b (((f2 :&: (l1 :|: (l0 :|: e ))) :|: r3) :|: r4) (((f2 :&: (l1 :|: (l0 :|: e'))) :|: r3) :|: r4)
bonlllff :: (BProd b, BSum b) => b e e' -> b (((((e  :&: s0) :&: s1) :|: r2) :|: r3) :|: r4) (((((e' :&: s0) :&: s1) :|: r2) :|: r3) :|: r4)
bonlllfs :: (BProd b, BSum b) => b e e' -> b (((((f0 :&: e ) :&: s1) :|: r2) :|: r3) :|: r4) (((((f0 :&: e') :&: s1) :|: r2) :|: r3) :|: r4)
bonlllfl :: (BProd b, BSum b) => b e e' -> b (((((e  :|: r0) :&: s1) :|: r2) :|: r3) :|: r4) (((((e' :|: r0) :&: s1) :|: r2) :|: r3) :|: r4)
bonlllfr :: (BProd b, BSum b) => b e e' -> b (((((l0 :|: e ) :&: s1) :|: r2) :|: r3) :|: r4) (((((l0 :|: e') :&: s1) :|: r2) :|: r3) :|: r4)
bonlllsf :: (BProd b, BSum b) => b e e' -> b ((((f1 :&: (e  :&: s0)) :|: r2) :|: r3) :|: r4) ((((f1 :&: (e' :&: s0)) :|: r2) :|: r3) :|: r4)
bonlllss :: (BProd b, BSum b) => b e e' -> b ((((f1 :&: (f0 :&: e )) :|: r2) :|: r3) :|: r4) ((((f1 :&: (f0 :&: e')) :|: r2) :|: r3) :|: r4)
bonlllsl :: (BProd b, BSum b) => b e e' -> b ((((f1 :&: (e  :|: r0)) :|: r2) :|: r3) :|: r4) ((((f1 :&: (e' :|: r0)) :|: r2) :|: r3) :|: r4)
bonlllsr :: (BProd b, BSum b) => b e e' -> b ((((f1 :&: (l0 :|: e )) :|: r2) :|: r3) :|: r4) ((((f1 :&: (l0 :|: e')) :|: r2) :|: r3) :|: r4)
bonllllf :: (BProd b, BSum b) => b e e' -> b (((((e  :&: s0) :|: r1) :|: r2) :|: r3) :|: r4) (((((e' :&: s0) :|: r1) :|: r2) :|: r3) :|: r4)
bonlllls :: (BProd b, BSum b) => b e e' -> b (((((f0 :&: e ) :|: r1) :|: r2) :|: r3) :|: r4) (((((f0 :&: e') :|: r1) :|: r2) :|: r3) :|: r4)
bonlllll :: (BSum b) => b e e' -> b (((((e  :|: r0) :|: r1) :|: r2) :|: r3) :|: r4) (((((e' :|: r0) :|: r1) :|: r2) :|: r3) :|: r4)
bonllllr :: (BSum b) => b e e' -> b (((((l0 :|: e ) :|: r1) :|: r2) :|: r3) :|: r4) (((((l0 :|: e') :|: r1) :|: r2) :|: r3) :|: r4)
bonlllrf :: (BProd b, BSum b) => b e e' -> b ((((l1 :|: (e  :&: s0)) :|: r2) :|: r3) :|: r4) ((((l1 :|: (e' :&: s0)) :|: r2) :|: r3) :|: r4)
bonlllrs :: (BProd b, BSum b) => b e e' -> b ((((l1 :|: (f0 :&: e )) :|: r2) :|: r3) :|: r4) ((((l1 :|: (f0 :&: e')) :|: r2) :|: r3) :|: r4)
bonlllrl :: (BSum b) => b e e' -> b ((((l1 :|: (e  :|: r0)) :|: r2) :|: r3) :|: r4) ((((l1 :|: (e' :|: r0)) :|: r2) :|: r3) :|: r4)
bonlllrr :: (BSum b) => b e e' -> b ((((l1 :|: (l0 :|: e )) :|: r2) :|: r3) :|: r4) ((((l1 :|: (l0 :|: e')) :|: r2) :|: r3) :|: r4)
bonllrff :: (BProd b, BSum b) => b e e' -> b (((l2 :|: ((e  :&: s0) :&: s1)) :|: r3) :|: r4) (((l2 :|: ((e' :&: s0) :&: s1)) :|: r3) :|: r4)
bonllrfs :: (BProd b, BSum b) => b e e' -> b (((l2 :|: ((f0 :&: e ) :&: s1)) :|: r3) :|: r4) (((l2 :|: ((f0 :&: e') :&: s1)) :|: r3) :|: r4)
bonllrfl :: (BProd b, BSum b) => b e e' -> b (((l2 :|: ((e  :|: r0) :&: s1)) :|: r3) :|: r4) (((l2 :|: ((e' :|: r0) :&: s1)) :|: r3) :|: r4)
bonllrfr :: (BProd b, BSum b) => b e e' -> b (((l2 :|: ((l0 :|: e ) :&: s1)) :|: r3) :|: r4) (((l2 :|: ((l0 :|: e') :&: s1)) :|: r3) :|: r4)
bonllrsf :: (BProd b, BSum b) => b e e' -> b (((l2 :|: (f1 :&: (e  :&: s0))) :|: r3) :|: r4) (((l2 :|: (f1 :&: (e' :&: s0))) :|: r3) :|: r4)
bonllrss :: (BProd b, BSum b) => b e e' -> b (((l2 :|: (f1 :&: (f0 :&: e ))) :|: r3) :|: r4) (((l2 :|: (f1 :&: (f0 :&: e'))) :|: r3) :|: r4)
bonllrsl :: (BProd b, BSum b) => b e e' -> b (((l2 :|: (f1 :&: (e  :|: r0))) :|: r3) :|: r4) (((l2 :|: (f1 :&: (e' :|: r0))) :|: r3) :|: r4)
bonllrsr :: (BProd b, BSum b) => b e e' -> b (((l2 :|: (f1 :&: (l0 :|: e ))) :|: r3) :|: r4) (((l2 :|: (f1 :&: (l0 :|: e'))) :|: r3) :|: r4)
bonllrlf :: (BProd b, BSum b) => b e e' -> b (((l2 :|: ((e  :&: s0) :|: r1)) :|: r3) :|: r4) (((l2 :|: ((e' :&: s0) :|: r1)) :|: r3) :|: r4)
bonllrls :: (BProd b, BSum b) => b e e' -> b (((l2 :|: ((f0 :&: e ) :|: r1)) :|: r3) :|: r4) (((l2 :|: ((f0 :&: e') :|: r1)) :|: r3) :|: r4)
bonllrll :: (BSum b) => b e e' -> b (((l2 :|: ((e  :|: r0) :|: r1)) :|: r3) :|: r4) (((l2 :|: ((e' :|: r0) :|: r1)) :|: r3) :|: r4)
bonllrlr :: (BSum b) => b e e' -> b (((l2 :|: ((l0 :|: e ) :|: r1)) :|: r3) :|: r4) (((l2 :|: ((l0 :|: e') :|: r1)) :|: r3) :|: r4)
bonllrrf :: (BProd b, BSum b) => b e e' -> b (((l2 :|: (l1 :|: (e  :&: s0))) :|: r3) :|: r4) (((l2 :|: (l1 :|: (e' :&: s0))) :|: r3) :|: r4)
bonllrrs :: (BProd b, BSum b) => b e e' -> b (((l2 :|: (l1 :|: (f0 :&: e ))) :|: r3) :|: r4) (((l2 :|: (l1 :|: (f0 :&: e'))) :|: r3) :|: r4)
bonllrrl :: (BSum b) => b e e' -> b (((l2 :|: (l1 :|: (e  :|: r0))) :|: r3) :|: r4) (((l2 :|: (l1 :|: (e' :|: r0))) :|: r3) :|: r4)
bonllrrr :: (BSum b) => b e e' -> b (((l2 :|: (l1 :|: (l0 :|: e ))) :|: r3) :|: r4) (((l2 :|: (l1 :|: (l0 :|: e'))) :|: r3) :|: r4)
bonlrfff :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (((e  :&: s0) :&: s1) :&: s2)) :|: r4) ((l3 :|: (((e' :&: s0) :&: s1) :&: s2)) :|: r4)
bonlrffs :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (((f0 :&: e ) :&: s1) :&: s2)) :|: r4) ((l3 :|: (((f0 :&: e') :&: s1) :&: s2)) :|: r4)
bonlrffl :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (((e  :|: r0) :&: s1) :&: s2)) :|: r4) ((l3 :|: (((e' :|: r0) :&: s1) :&: s2)) :|: r4)
bonlrffr :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (((l0 :|: e ) :&: s1) :&: s2)) :|: r4) ((l3 :|: (((l0 :|: e') :&: s1) :&: s2)) :|: r4)
bonlrfsf :: (BProd b, BSum b) => b e e' -> b ((l3 :|: ((f1 :&: (e  :&: s0)) :&: s2)) :|: r4) ((l3 :|: ((f1 :&: (e' :&: s0)) :&: s2)) :|: r4)
bonlrfss :: (BProd b, BSum b) => b e e' -> b ((l3 :|: ((f1 :&: (f0 :&: e )) :&: s2)) :|: r4) ((l3 :|: ((f1 :&: (f0 :&: e')) :&: s2)) :|: r4)
bonlrfsl :: (BProd b, BSum b) => b e e' -> b ((l3 :|: ((f1 :&: (e  :|: r0)) :&: s2)) :|: r4) ((l3 :|: ((f1 :&: (e' :|: r0)) :&: s2)) :|: r4)
bonlrfsr :: (BProd b, BSum b) => b e e' -> b ((l3 :|: ((f1 :&: (l0 :|: e )) :&: s2)) :|: r4) ((l3 :|: ((f1 :&: (l0 :|: e')) :&: s2)) :|: r4)
bonlrflf :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (((e  :&: s0) :|: r1) :&: s2)) :|: r4) ((l3 :|: (((e' :&: s0) :|: r1) :&: s2)) :|: r4)
bonlrfls :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (((f0 :&: e ) :|: r1) :&: s2)) :|: r4) ((l3 :|: (((f0 :&: e') :|: r1) :&: s2)) :|: r4)
bonlrfll :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (((e  :|: r0) :|: r1) :&: s2)) :|: r4) ((l3 :|: (((e' :|: r0) :|: r1) :&: s2)) :|: r4)
bonlrflr :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (((l0 :|: e ) :|: r1) :&: s2)) :|: r4) ((l3 :|: (((l0 :|: e') :|: r1) :&: s2)) :|: r4)
bonlrfrf :: (BProd b, BSum b) => b e e' -> b ((l3 :|: ((l1 :|: (e  :&: s0)) :&: s2)) :|: r4) ((l3 :|: ((l1 :|: (e' :&: s0)) :&: s2)) :|: r4)
bonlrfrs :: (BProd b, BSum b) => b e e' -> b ((l3 :|: ((l1 :|: (f0 :&: e )) :&: s2)) :|: r4) ((l3 :|: ((l1 :|: (f0 :&: e')) :&: s2)) :|: r4)
bonlrfrl :: (BProd b, BSum b) => b e e' -> b ((l3 :|: ((l1 :|: (e  :|: r0)) :&: s2)) :|: r4) ((l3 :|: ((l1 :|: (e' :|: r0)) :&: s2)) :|: r4)
bonlrfrr :: (BProd b, BSum b) => b e e' -> b ((l3 :|: ((l1 :|: (l0 :|: e )) :&: s2)) :|: r4) ((l3 :|: ((l1 :|: (l0 :|: e')) :&: s2)) :|: r4)
bonlrsff :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (f2 :&: ((e  :&: s0) :&: s1))) :|: r4) ((l3 :|: (f2 :&: ((e' :&: s0) :&: s1))) :|: r4)
bonlrsfs :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (f2 :&: ((f0 :&: e ) :&: s1))) :|: r4) ((l3 :|: (f2 :&: ((f0 :&: e') :&: s1))) :|: r4)
bonlrsfl :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (f2 :&: ((e  :|: r0) :&: s1))) :|: r4) ((l3 :|: (f2 :&: ((e' :|: r0) :&: s1))) :|: r4)
bonlrsfr :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (f2 :&: ((l0 :|: e ) :&: s1))) :|: r4) ((l3 :|: (f2 :&: ((l0 :|: e') :&: s1))) :|: r4)
bonlrssf :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (f2 :&: (f1 :&: (e  :&: s0)))) :|: r4) ((l3 :|: (f2 :&: (f1 :&: (e' :&: s0)))) :|: r4)
bonlrsss :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (f2 :&: (f1 :&: (f0 :&: e )))) :|: r4) ((l3 :|: (f2 :&: (f1 :&: (f0 :&: e')))) :|: r4)
bonlrssl :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (f2 :&: (f1 :&: (e  :|: r0)))) :|: r4) ((l3 :|: (f2 :&: (f1 :&: (e' :|: r0)))) :|: r4)
bonlrssr :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (f2 :&: (f1 :&: (l0 :|: e )))) :|: r4) ((l3 :|: (f2 :&: (f1 :&: (l0 :|: e')))) :|: r4)
bonlrslf :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (f2 :&: ((e  :&: s0) :|: r1))) :|: r4) ((l3 :|: (f2 :&: ((e' :&: s0) :|: r1))) :|: r4)
bonlrsls :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (f2 :&: ((f0 :&: e ) :|: r1))) :|: r4) ((l3 :|: (f2 :&: ((f0 :&: e') :|: r1))) :|: r4)
bonlrsll :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (f2 :&: ((e  :|: r0) :|: r1))) :|: r4) ((l3 :|: (f2 :&: ((e' :|: r0) :|: r1))) :|: r4)
bonlrslr :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (f2 :&: ((l0 :|: e ) :|: r1))) :|: r4) ((l3 :|: (f2 :&: ((l0 :|: e') :|: r1))) :|: r4)
bonlrsrf :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (f2 :&: (l1 :|: (e  :&: s0)))) :|: r4) ((l3 :|: (f2 :&: (l1 :|: (e' :&: s0)))) :|: r4)
bonlrsrs :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (f2 :&: (l1 :|: (f0 :&: e )))) :|: r4) ((l3 :|: (f2 :&: (l1 :|: (f0 :&: e')))) :|: r4)
bonlrsrl :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (f2 :&: (l1 :|: (e  :|: r0)))) :|: r4) ((l3 :|: (f2 :&: (l1 :|: (e' :|: r0)))) :|: r4)
bonlrsrr :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (f2 :&: (l1 :|: (l0 :|: e )))) :|: r4) ((l3 :|: (f2 :&: (l1 :|: (l0 :|: e')))) :|: r4)
bonlrlff :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (((e  :&: s0) :&: s1) :|: r2)) :|: r4) ((l3 :|: (((e' :&: s0) :&: s1) :|: r2)) :|: r4)
bonlrlfs :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (((f0 :&: e ) :&: s1) :|: r2)) :|: r4) ((l3 :|: (((f0 :&: e') :&: s1) :|: r2)) :|: r4)
bonlrlfl :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (((e  :|: r0) :&: s1) :|: r2)) :|: r4) ((l3 :|: (((e' :|: r0) :&: s1) :|: r2)) :|: r4)
bonlrlfr :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (((l0 :|: e ) :&: s1) :|: r2)) :|: r4) ((l3 :|: (((l0 :|: e') :&: s1) :|: r2)) :|: r4)
bonlrlsf :: (BProd b, BSum b) => b e e' -> b ((l3 :|: ((f1 :&: (e  :&: s0)) :|: r2)) :|: r4) ((l3 :|: ((f1 :&: (e' :&: s0)) :|: r2)) :|: r4)
bonlrlss :: (BProd b, BSum b) => b e e' -> b ((l3 :|: ((f1 :&: (f0 :&: e )) :|: r2)) :|: r4) ((l3 :|: ((f1 :&: (f0 :&: e')) :|: r2)) :|: r4)
bonlrlsl :: (BProd b, BSum b) => b e e' -> b ((l3 :|: ((f1 :&: (e  :|: r0)) :|: r2)) :|: r4) ((l3 :|: ((f1 :&: (e' :|: r0)) :|: r2)) :|: r4)
bonlrlsr :: (BProd b, BSum b) => b e e' -> b ((l3 :|: ((f1 :&: (l0 :|: e )) :|: r2)) :|: r4) ((l3 :|: ((f1 :&: (l0 :|: e')) :|: r2)) :|: r4)
bonlrllf :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (((e  :&: s0) :|: r1) :|: r2)) :|: r4) ((l3 :|: (((e' :&: s0) :|: r1) :|: r2)) :|: r4)
bonlrlls :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (((f0 :&: e ) :|: r1) :|: r2)) :|: r4) ((l3 :|: (((f0 :&: e') :|: r1) :|: r2)) :|: r4)
bonlrlll :: (BSum b) => b e e' -> b ((l3 :|: (((e  :|: r0) :|: r1) :|: r2)) :|: r4) ((l3 :|: (((e' :|: r0) :|: r1) :|: r2)) :|: r4)
bonlrllr :: (BSum b) => b e e' -> b ((l3 :|: (((l0 :|: e ) :|: r1) :|: r2)) :|: r4) ((l3 :|: (((l0 :|: e') :|: r1) :|: r2)) :|: r4)
bonlrlrf :: (BProd b, BSum b) => b e e' -> b ((l3 :|: ((l1 :|: (e  :&: s0)) :|: r2)) :|: r4) ((l3 :|: ((l1 :|: (e' :&: s0)) :|: r2)) :|: r4)
bonlrlrs :: (BProd b, BSum b) => b e e' -> b ((l3 :|: ((l1 :|: (f0 :&: e )) :|: r2)) :|: r4) ((l3 :|: ((l1 :|: (f0 :&: e')) :|: r2)) :|: r4)
bonlrlrl :: (BSum b) => b e e' -> b ((l3 :|: ((l1 :|: (e  :|: r0)) :|: r2)) :|: r4) ((l3 :|: ((l1 :|: (e' :|: r0)) :|: r2)) :|: r4)
bonlrlrr :: (BSum b) => b e e' -> b ((l3 :|: ((l1 :|: (l0 :|: e )) :|: r2)) :|: r4) ((l3 :|: ((l1 :|: (l0 :|: e')) :|: r2)) :|: r4)
bonlrrff :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (l2 :|: ((e  :&: s0) :&: s1))) :|: r4) ((l3 :|: (l2 :|: ((e' :&: s0) :&: s1))) :|: r4)
bonlrrfs :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (l2 :|: ((f0 :&: e ) :&: s1))) :|: r4) ((l3 :|: (l2 :|: ((f0 :&: e') :&: s1))) :|: r4)
bonlrrfl :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (l2 :|: ((e  :|: r0) :&: s1))) :|: r4) ((l3 :|: (l2 :|: ((e' :|: r0) :&: s1))) :|: r4)
bonlrrfr :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (l2 :|: ((l0 :|: e ) :&: s1))) :|: r4) ((l3 :|: (l2 :|: ((l0 :|: e') :&: s1))) :|: r4)
bonlrrsf :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (l2 :|: (f1 :&: (e  :&: s0)))) :|: r4) ((l3 :|: (l2 :|: (f1 :&: (e' :&: s0)))) :|: r4)
bonlrrss :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (l2 :|: (f1 :&: (f0 :&: e )))) :|: r4) ((l3 :|: (l2 :|: (f1 :&: (f0 :&: e')))) :|: r4)
bonlrrsl :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (l2 :|: (f1 :&: (e  :|: r0)))) :|: r4) ((l3 :|: (l2 :|: (f1 :&: (e' :|: r0)))) :|: r4)
bonlrrsr :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (l2 :|: (f1 :&: (l0 :|: e )))) :|: r4) ((l3 :|: (l2 :|: (f1 :&: (l0 :|: e')))) :|: r4)
bonlrrlf :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (l2 :|: ((e  :&: s0) :|: r1))) :|: r4) ((l3 :|: (l2 :|: ((e' :&: s0) :|: r1))) :|: r4)
bonlrrls :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (l2 :|: ((f0 :&: e ) :|: r1))) :|: r4) ((l3 :|: (l2 :|: ((f0 :&: e') :|: r1))) :|: r4)
bonlrrll :: (BSum b) => b e e' -> b ((l3 :|: (l2 :|: ((e  :|: r0) :|: r1))) :|: r4) ((l3 :|: (l2 :|: ((e' :|: r0) :|: r1))) :|: r4)
bonlrrlr :: (BSum b) => b e e' -> b ((l3 :|: (l2 :|: ((l0 :|: e ) :|: r1))) :|: r4) ((l3 :|: (l2 :|: ((l0 :|: e') :|: r1))) :|: r4)
bonlrrrf :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (l2 :|: (l1 :|: (e  :&: s0)))) :|: r4) ((l3 :|: (l2 :|: (l1 :|: (e' :&: s0)))) :|: r4)
bonlrrrs :: (BProd b, BSum b) => b e e' -> b ((l3 :|: (l2 :|: (l1 :|: (f0 :&: e )))) :|: r4) ((l3 :|: (l2 :|: (l1 :|: (f0 :&: e')))) :|: r4)
bonlrrrl :: (BSum b) => b e e' -> b ((l3 :|: (l2 :|: (l1 :|: (e  :|: r0)))) :|: r4) ((l3 :|: (l2 :|: (l1 :|: (e' :|: r0)))) :|: r4)
bonlrrrr :: (BSum b) => b e e' -> b ((l3 :|: (l2 :|: (l1 :|: (l0 :|: e )))) :|: r4) ((l3 :|: (l2 :|: (l1 :|: (l0 :|: e')))) :|: r4)
bonrffff :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((((e  :&: s0) :&: s1) :&: s2) :&: s3)) (l4 :|: ((((e' :&: s0) :&: s1) :&: s2) :&: s3))
bonrfffs :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((((f0 :&: e ) :&: s1) :&: s2) :&: s3)) (l4 :|: ((((f0 :&: e') :&: s1) :&: s2) :&: s3))
bonrfffl :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((((e  :|: r0) :&: s1) :&: s2) :&: s3)) (l4 :|: ((((e' :|: r0) :&: s1) :&: s2) :&: s3))
bonrfffr :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((((l0 :|: e ) :&: s1) :&: s2) :&: s3)) (l4 :|: ((((l0 :|: e') :&: s1) :&: s2) :&: s3))
bonrffsf :: (BProd b, BSum b) => b e e' -> b (l4 :|: (((f1 :&: (e  :&: s0)) :&: s2) :&: s3)) (l4 :|: (((f1 :&: (e' :&: s0)) :&: s2) :&: s3))
bonrffss :: (BProd b, BSum b) => b e e' -> b (l4 :|: (((f1 :&: (f0 :&: e )) :&: s2) :&: s3)) (l4 :|: (((f1 :&: (f0 :&: e')) :&: s2) :&: s3))
bonrffsl :: (BProd b, BSum b) => b e e' -> b (l4 :|: (((f1 :&: (e  :|: r0)) :&: s2) :&: s3)) (l4 :|: (((f1 :&: (e' :|: r0)) :&: s2) :&: s3))
bonrffsr :: (BProd b, BSum b) => b e e' -> b (l4 :|: (((f1 :&: (l0 :|: e )) :&: s2) :&: s3)) (l4 :|: (((f1 :&: (l0 :|: e')) :&: s2) :&: s3))
bonrfflf :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((((e  :&: s0) :|: r1) :&: s2) :&: s3)) (l4 :|: ((((e' :&: s0) :|: r1) :&: s2) :&: s3))
bonrffls :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((((f0 :&: e ) :|: r1) :&: s2) :&: s3)) (l4 :|: ((((f0 :&: e') :|: r1) :&: s2) :&: s3))
bonrffll :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((((e  :|: r0) :|: r1) :&: s2) :&: s3)) (l4 :|: ((((e' :|: r0) :|: r1) :&: s2) :&: s3))
bonrfflr :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((((l0 :|: e ) :|: r1) :&: s2) :&: s3)) (l4 :|: ((((l0 :|: e') :|: r1) :&: s2) :&: s3))
bonrffrf :: (BProd b, BSum b) => b e e' -> b (l4 :|: (((l1 :|: (e  :&: s0)) :&: s2) :&: s3)) (l4 :|: (((l1 :|: (e' :&: s0)) :&: s2) :&: s3))
bonrffrs :: (BProd b, BSum b) => b e e' -> b (l4 :|: (((l1 :|: (f0 :&: e )) :&: s2) :&: s3)) (l4 :|: (((l1 :|: (f0 :&: e')) :&: s2) :&: s3))
bonrffrl :: (BProd b, BSum b) => b e e' -> b (l4 :|: (((l1 :|: (e  :|: r0)) :&: s2) :&: s3)) (l4 :|: (((l1 :|: (e' :|: r0)) :&: s2) :&: s3))
bonrffrr :: (BProd b, BSum b) => b e e' -> b (l4 :|: (((l1 :|: (l0 :|: e )) :&: s2) :&: s3)) (l4 :|: (((l1 :|: (l0 :|: e')) :&: s2) :&: s3))
bonrfsff :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((f2 :&: ((e  :&: s0) :&: s1)) :&: s3)) (l4 :|: ((f2 :&: ((e' :&: s0) :&: s1)) :&: s3))
bonrfsfs :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((f2 :&: ((f0 :&: e ) :&: s1)) :&: s3)) (l4 :|: ((f2 :&: ((f0 :&: e') :&: s1)) :&: s3))
bonrfsfl :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((f2 :&: ((e  :|: r0) :&: s1)) :&: s3)) (l4 :|: ((f2 :&: ((e' :|: r0) :&: s1)) :&: s3))
bonrfsfr :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((f2 :&: ((l0 :|: e ) :&: s1)) :&: s3)) (l4 :|: ((f2 :&: ((l0 :|: e') :&: s1)) :&: s3))
bonrfssf :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((f2 :&: (f1 :&: (e  :&: s0))) :&: s3)) (l4 :|: ((f2 :&: (f1 :&: (e' :&: s0))) :&: s3))
bonrfsss :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((f2 :&: (f1 :&: (f0 :&: e ))) :&: s3)) (l4 :|: ((f2 :&: (f1 :&: (f0 :&: e'))) :&: s3))
bonrfssl :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((f2 :&: (f1 :&: (e  :|: r0))) :&: s3)) (l4 :|: ((f2 :&: (f1 :&: (e' :|: r0))) :&: s3))
bonrfssr :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((f2 :&: (f1 :&: (l0 :|: e ))) :&: s3)) (l4 :|: ((f2 :&: (f1 :&: (l0 :|: e'))) :&: s3))
bonrfslf :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((f2 :&: ((e  :&: s0) :|: r1)) :&: s3)) (l4 :|: ((f2 :&: ((e' :&: s0) :|: r1)) :&: s3))
bonrfsls :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((f2 :&: ((f0 :&: e ) :|: r1)) :&: s3)) (l4 :|: ((f2 :&: ((f0 :&: e') :|: r1)) :&: s3))
bonrfsll :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((f2 :&: ((e  :|: r0) :|: r1)) :&: s3)) (l4 :|: ((f2 :&: ((e' :|: r0) :|: r1)) :&: s3))
bonrfslr :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((f2 :&: ((l0 :|: e ) :|: r1)) :&: s3)) (l4 :|: ((f2 :&: ((l0 :|: e') :|: r1)) :&: s3))
bonrfsrf :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((f2 :&: (l1 :|: (e  :&: s0))) :&: s3)) (l4 :|: ((f2 :&: (l1 :|: (e' :&: s0))) :&: s3))
bonrfsrs :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((f2 :&: (l1 :|: (f0 :&: e ))) :&: s3)) (l4 :|: ((f2 :&: (l1 :|: (f0 :&: e'))) :&: s3))
bonrfsrl :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((f2 :&: (l1 :|: (e  :|: r0))) :&: s3)) (l4 :|: ((f2 :&: (l1 :|: (e' :|: r0))) :&: s3))
bonrfsrr :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((f2 :&: (l1 :|: (l0 :|: e ))) :&: s3)) (l4 :|: ((f2 :&: (l1 :|: (l0 :|: e'))) :&: s3))
bonrflff :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((((e  :&: s0) :&: s1) :|: r2) :&: s3)) (l4 :|: ((((e' :&: s0) :&: s1) :|: r2) :&: s3))
bonrflfs :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((((f0 :&: e ) :&: s1) :|: r2) :&: s3)) (l4 :|: ((((f0 :&: e') :&: s1) :|: r2) :&: s3))
bonrflfl :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((((e  :|: r0) :&: s1) :|: r2) :&: s3)) (l4 :|: ((((e' :|: r0) :&: s1) :|: r2) :&: s3))
bonrflfr :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((((l0 :|: e ) :&: s1) :|: r2) :&: s3)) (l4 :|: ((((l0 :|: e') :&: s1) :|: r2) :&: s3))
bonrflsf :: (BProd b, BSum b) => b e e' -> b (l4 :|: (((f1 :&: (e  :&: s0)) :|: r2) :&: s3)) (l4 :|: (((f1 :&: (e' :&: s0)) :|: r2) :&: s3))
bonrflss :: (BProd b, BSum b) => b e e' -> b (l4 :|: (((f1 :&: (f0 :&: e )) :|: r2) :&: s3)) (l4 :|: (((f1 :&: (f0 :&: e')) :|: r2) :&: s3))
bonrflsl :: (BProd b, BSum b) => b e e' -> b (l4 :|: (((f1 :&: (e  :|: r0)) :|: r2) :&: s3)) (l4 :|: (((f1 :&: (e' :|: r0)) :|: r2) :&: s3))
bonrflsr :: (BProd b, BSum b) => b e e' -> b (l4 :|: (((f1 :&: (l0 :|: e )) :|: r2) :&: s3)) (l4 :|: (((f1 :&: (l0 :|: e')) :|: r2) :&: s3))
bonrfllf :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((((e  :&: s0) :|: r1) :|: r2) :&: s3)) (l4 :|: ((((e' :&: s0) :|: r1) :|: r2) :&: s3))
bonrflls :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((((f0 :&: e ) :|: r1) :|: r2) :&: s3)) (l4 :|: ((((f0 :&: e') :|: r1) :|: r2) :&: s3))
bonrflll :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((((e  :|: r0) :|: r1) :|: r2) :&: s3)) (l4 :|: ((((e' :|: r0) :|: r1) :|: r2) :&: s3))
bonrfllr :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((((l0 :|: e ) :|: r1) :|: r2) :&: s3)) (l4 :|: ((((l0 :|: e') :|: r1) :|: r2) :&: s3))
bonrflrf :: (BProd b, BSum b) => b e e' -> b (l4 :|: (((l1 :|: (e  :&: s0)) :|: r2) :&: s3)) (l4 :|: (((l1 :|: (e' :&: s0)) :|: r2) :&: s3))
bonrflrs :: (BProd b, BSum b) => b e e' -> b (l4 :|: (((l1 :|: (f0 :&: e )) :|: r2) :&: s3)) (l4 :|: (((l1 :|: (f0 :&: e')) :|: r2) :&: s3))
bonrflrl :: (BProd b, BSum b) => b e e' -> b (l4 :|: (((l1 :|: (e  :|: r0)) :|: r2) :&: s3)) (l4 :|: (((l1 :|: (e' :|: r0)) :|: r2) :&: s3))
bonrflrr :: (BProd b, BSum b) => b e e' -> b (l4 :|: (((l1 :|: (l0 :|: e )) :|: r2) :&: s3)) (l4 :|: (((l1 :|: (l0 :|: e')) :|: r2) :&: s3))
bonrfrff :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((l2 :|: ((e  :&: s0) :&: s1)) :&: s3)) (l4 :|: ((l2 :|: ((e' :&: s0) :&: s1)) :&: s3))
bonrfrfs :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((l2 :|: ((f0 :&: e ) :&: s1)) :&: s3)) (l4 :|: ((l2 :|: ((f0 :&: e') :&: s1)) :&: s3))
bonrfrfl :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((l2 :|: ((e  :|: r0) :&: s1)) :&: s3)) (l4 :|: ((l2 :|: ((e' :|: r0) :&: s1)) :&: s3))
bonrfrfr :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((l2 :|: ((l0 :|: e ) :&: s1)) :&: s3)) (l4 :|: ((l2 :|: ((l0 :|: e') :&: s1)) :&: s3))
bonrfrsf :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((l2 :|: (f1 :&: (e  :&: s0))) :&: s3)) (l4 :|: ((l2 :|: (f1 :&: (e' :&: s0))) :&: s3))
bonrfrss :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((l2 :|: (f1 :&: (f0 :&: e ))) :&: s3)) (l4 :|: ((l2 :|: (f1 :&: (f0 :&: e'))) :&: s3))
bonrfrsl :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((l2 :|: (f1 :&: (e  :|: r0))) :&: s3)) (l4 :|: ((l2 :|: (f1 :&: (e' :|: r0))) :&: s3))
bonrfrsr :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((l2 :|: (f1 :&: (l0 :|: e ))) :&: s3)) (l4 :|: ((l2 :|: (f1 :&: (l0 :|: e'))) :&: s3))
bonrfrlf :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((l2 :|: ((e  :&: s0) :|: r1)) :&: s3)) (l4 :|: ((l2 :|: ((e' :&: s0) :|: r1)) :&: s3))
bonrfrls :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((l2 :|: ((f0 :&: e ) :|: r1)) :&: s3)) (l4 :|: ((l2 :|: ((f0 :&: e') :|: r1)) :&: s3))
bonrfrll :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((l2 :|: ((e  :|: r0) :|: r1)) :&: s3)) (l4 :|: ((l2 :|: ((e' :|: r0) :|: r1)) :&: s3))
bonrfrlr :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((l2 :|: ((l0 :|: e ) :|: r1)) :&: s3)) (l4 :|: ((l2 :|: ((l0 :|: e') :|: r1)) :&: s3))
bonrfrrf :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((l2 :|: (l1 :|: (e  :&: s0))) :&: s3)) (l4 :|: ((l2 :|: (l1 :|: (e' :&: s0))) :&: s3))
bonrfrrs :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((l2 :|: (l1 :|: (f0 :&: e ))) :&: s3)) (l4 :|: ((l2 :|: (l1 :|: (f0 :&: e'))) :&: s3))
bonrfrrl :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((l2 :|: (l1 :|: (e  :|: r0))) :&: s3)) (l4 :|: ((l2 :|: (l1 :|: (e' :|: r0))) :&: s3))
bonrfrrr :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((l2 :|: (l1 :|: (l0 :|: e ))) :&: s3)) (l4 :|: ((l2 :|: (l1 :|: (l0 :|: e'))) :&: s3))
bonrsfff :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (((e  :&: s0) :&: s1) :&: s2))) (l4 :|: (f3 :&: (((e' :&: s0) :&: s1) :&: s2)))
bonrsffs :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (((f0 :&: e ) :&: s1) :&: s2))) (l4 :|: (f3 :&: (((f0 :&: e') :&: s1) :&: s2)))
bonrsffl :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (((e  :|: r0) :&: s1) :&: s2))) (l4 :|: (f3 :&: (((e' :|: r0) :&: s1) :&: s2)))
bonrsffr :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (((l0 :|: e ) :&: s1) :&: s2))) (l4 :|: (f3 :&: (((l0 :|: e') :&: s1) :&: s2)))
bonrsfsf :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: ((f1 :&: (e  :&: s0)) :&: s2))) (l4 :|: (f3 :&: ((f1 :&: (e' :&: s0)) :&: s2)))
bonrsfss :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: ((f1 :&: (f0 :&: e )) :&: s2))) (l4 :|: (f3 :&: ((f1 :&: (f0 :&: e')) :&: s2)))
bonrsfsl :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: ((f1 :&: (e  :|: r0)) :&: s2))) (l4 :|: (f3 :&: ((f1 :&: (e' :|: r0)) :&: s2)))
bonrsfsr :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: ((f1 :&: (l0 :|: e )) :&: s2))) (l4 :|: (f3 :&: ((f1 :&: (l0 :|: e')) :&: s2)))
bonrsflf :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (((e  :&: s0) :|: r1) :&: s2))) (l4 :|: (f3 :&: (((e' :&: s0) :|: r1) :&: s2)))
bonrsfls :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (((f0 :&: e ) :|: r1) :&: s2))) (l4 :|: (f3 :&: (((f0 :&: e') :|: r1) :&: s2)))
bonrsfll :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (((e  :|: r0) :|: r1) :&: s2))) (l4 :|: (f3 :&: (((e' :|: r0) :|: r1) :&: s2)))
bonrsflr :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (((l0 :|: e ) :|: r1) :&: s2))) (l4 :|: (f3 :&: (((l0 :|: e') :|: r1) :&: s2)))
bonrsfrf :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: ((l1 :|: (e  :&: s0)) :&: s2))) (l4 :|: (f3 :&: ((l1 :|: (e' :&: s0)) :&: s2)))
bonrsfrs :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: ((l1 :|: (f0 :&: e )) :&: s2))) (l4 :|: (f3 :&: ((l1 :|: (f0 :&: e')) :&: s2)))
bonrsfrl :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: ((l1 :|: (e  :|: r0)) :&: s2))) (l4 :|: (f3 :&: ((l1 :|: (e' :|: r0)) :&: s2)))
bonrsfrr :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: ((l1 :|: (l0 :|: e )) :&: s2))) (l4 :|: (f3 :&: ((l1 :|: (l0 :|: e')) :&: s2)))
bonrssff :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (f2 :&: ((e  :&: s0) :&: s1)))) (l4 :|: (f3 :&: (f2 :&: ((e' :&: s0) :&: s1))))
bonrssfs :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (f2 :&: ((f0 :&: e ) :&: s1)))) (l4 :|: (f3 :&: (f2 :&: ((f0 :&: e') :&: s1))))
bonrssfl :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (f2 :&: ((e  :|: r0) :&: s1)))) (l4 :|: (f3 :&: (f2 :&: ((e' :|: r0) :&: s1))))
bonrssfr :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (f2 :&: ((l0 :|: e ) :&: s1)))) (l4 :|: (f3 :&: (f2 :&: ((l0 :|: e') :&: s1))))
bonrsssf :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (f2 :&: (f1 :&: (e  :&: s0))))) (l4 :|: (f3 :&: (f2 :&: (f1 :&: (e' :&: s0)))))
bonrssss :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (f2 :&: (f1 :&: (f0 :&: e ))))) (l4 :|: (f3 :&: (f2 :&: (f1 :&: (f0 :&: e')))))
bonrsssl :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (f2 :&: (f1 :&: (e  :|: r0))))) (l4 :|: (f3 :&: (f2 :&: (f1 :&: (e' :|: r0)))))
bonrsssr :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (f2 :&: (f1 :&: (l0 :|: e ))))) (l4 :|: (f3 :&: (f2 :&: (f1 :&: (l0 :|: e')))))
bonrsslf :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (f2 :&: ((e  :&: s0) :|: r1)))) (l4 :|: (f3 :&: (f2 :&: ((e' :&: s0) :|: r1))))
bonrssls :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (f2 :&: ((f0 :&: e ) :|: r1)))) (l4 :|: (f3 :&: (f2 :&: ((f0 :&: e') :|: r1))))
bonrssll :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (f2 :&: ((e  :|: r0) :|: r1)))) (l4 :|: (f3 :&: (f2 :&: ((e' :|: r0) :|: r1))))
bonrsslr :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (f2 :&: ((l0 :|: e ) :|: r1)))) (l4 :|: (f3 :&: (f2 :&: ((l0 :|: e') :|: r1))))
bonrssrf :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (f2 :&: (l1 :|: (e  :&: s0))))) (l4 :|: (f3 :&: (f2 :&: (l1 :|: (e' :&: s0)))))
bonrssrs :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (f2 :&: (l1 :|: (f0 :&: e ))))) (l4 :|: (f3 :&: (f2 :&: (l1 :|: (f0 :&: e')))))
bonrssrl :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (f2 :&: (l1 :|: (e  :|: r0))))) (l4 :|: (f3 :&: (f2 :&: (l1 :|: (e' :|: r0)))))
bonrssrr :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (f2 :&: (l1 :|: (l0 :|: e ))))) (l4 :|: (f3 :&: (f2 :&: (l1 :|: (l0 :|: e')))))
bonrslff :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (((e  :&: s0) :&: s1) :|: r2))) (l4 :|: (f3 :&: (((e' :&: s0) :&: s1) :|: r2)))
bonrslfs :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (((f0 :&: e ) :&: s1) :|: r2))) (l4 :|: (f3 :&: (((f0 :&: e') :&: s1) :|: r2)))
bonrslfl :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (((e  :|: r0) :&: s1) :|: r2))) (l4 :|: (f3 :&: (((e' :|: r0) :&: s1) :|: r2)))
bonrslfr :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (((l0 :|: e ) :&: s1) :|: r2))) (l4 :|: (f3 :&: (((l0 :|: e') :&: s1) :|: r2)))
bonrslsf :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: ((f1 :&: (e  :&: s0)) :|: r2))) (l4 :|: (f3 :&: ((f1 :&: (e' :&: s0)) :|: r2)))
bonrslss :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: ((f1 :&: (f0 :&: e )) :|: r2))) (l4 :|: (f3 :&: ((f1 :&: (f0 :&: e')) :|: r2)))
bonrslsl :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: ((f1 :&: (e  :|: r0)) :|: r2))) (l4 :|: (f3 :&: ((f1 :&: (e' :|: r0)) :|: r2)))
bonrslsr :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: ((f1 :&: (l0 :|: e )) :|: r2))) (l4 :|: (f3 :&: ((f1 :&: (l0 :|: e')) :|: r2)))
bonrsllf :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (((e  :&: s0) :|: r1) :|: r2))) (l4 :|: (f3 :&: (((e' :&: s0) :|: r1) :|: r2)))
bonrslls :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (((f0 :&: e ) :|: r1) :|: r2))) (l4 :|: (f3 :&: (((f0 :&: e') :|: r1) :|: r2)))
bonrslll :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (((e  :|: r0) :|: r1) :|: r2))) (l4 :|: (f3 :&: (((e' :|: r0) :|: r1) :|: r2)))
bonrsllr :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (((l0 :|: e ) :|: r1) :|: r2))) (l4 :|: (f3 :&: (((l0 :|: e') :|: r1) :|: r2)))
bonrslrf :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: ((l1 :|: (e  :&: s0)) :|: r2))) (l4 :|: (f3 :&: ((l1 :|: (e' :&: s0)) :|: r2)))
bonrslrs :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: ((l1 :|: (f0 :&: e )) :|: r2))) (l4 :|: (f3 :&: ((l1 :|: (f0 :&: e')) :|: r2)))
bonrslrl :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: ((l1 :|: (e  :|: r0)) :|: r2))) (l4 :|: (f3 :&: ((l1 :|: (e' :|: r0)) :|: r2)))
bonrslrr :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: ((l1 :|: (l0 :|: e )) :|: r2))) (l4 :|: (f3 :&: ((l1 :|: (l0 :|: e')) :|: r2)))
bonrsrff :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (l2 :|: ((e  :&: s0) :&: s1)))) (l4 :|: (f3 :&: (l2 :|: ((e' :&: s0) :&: s1))))
bonrsrfs :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (l2 :|: ((f0 :&: e ) :&: s1)))) (l4 :|: (f3 :&: (l2 :|: ((f0 :&: e') :&: s1))))
bonrsrfl :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (l2 :|: ((e  :|: r0) :&: s1)))) (l4 :|: (f3 :&: (l2 :|: ((e' :|: r0) :&: s1))))
bonrsrfr :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (l2 :|: ((l0 :|: e ) :&: s1)))) (l4 :|: (f3 :&: (l2 :|: ((l0 :|: e') :&: s1))))
bonrsrsf :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (l2 :|: (f1 :&: (e  :&: s0))))) (l4 :|: (f3 :&: (l2 :|: (f1 :&: (e' :&: s0)))))
bonrsrss :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (l2 :|: (f1 :&: (f0 :&: e ))))) (l4 :|: (f3 :&: (l2 :|: (f1 :&: (f0 :&: e')))))
bonrsrsl :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (l2 :|: (f1 :&: (e  :|: r0))))) (l4 :|: (f3 :&: (l2 :|: (f1 :&: (e' :|: r0)))))
bonrsrsr :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (l2 :|: (f1 :&: (l0 :|: e ))))) (l4 :|: (f3 :&: (l2 :|: (f1 :&: (l0 :|: e')))))
bonrsrlf :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (l2 :|: ((e  :&: s0) :|: r1)))) (l4 :|: (f3 :&: (l2 :|: ((e' :&: s0) :|: r1))))
bonrsrls :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (l2 :|: ((f0 :&: e ) :|: r1)))) (l4 :|: (f3 :&: (l2 :|: ((f0 :&: e') :|: r1))))
bonrsrll :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (l2 :|: ((e  :|: r0) :|: r1)))) (l4 :|: (f3 :&: (l2 :|: ((e' :|: r0) :|: r1))))
bonrsrlr :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (l2 :|: ((l0 :|: e ) :|: r1)))) (l4 :|: (f3 :&: (l2 :|: ((l0 :|: e') :|: r1))))
bonrsrrf :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (l2 :|: (l1 :|: (e  :&: s0))))) (l4 :|: (f3 :&: (l2 :|: (l1 :|: (e' :&: s0)))))
bonrsrrs :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (l2 :|: (l1 :|: (f0 :&: e ))))) (l4 :|: (f3 :&: (l2 :|: (l1 :|: (f0 :&: e')))))
bonrsrrl :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (l2 :|: (l1 :|: (e  :|: r0))))) (l4 :|: (f3 :&: (l2 :|: (l1 :|: (e' :|: r0)))))
bonrsrrr :: (BProd b, BSum b) => b e e' -> b (l4 :|: (f3 :&: (l2 :|: (l1 :|: (l0 :|: e ))))) (l4 :|: (f3 :&: (l2 :|: (l1 :|: (l0 :|: e')))))
bonrlfff :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((((e  :&: s0) :&: s1) :&: s2) :|: r3)) (l4 :|: ((((e' :&: s0) :&: s1) :&: s2) :|: r3))
bonrlffs :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((((f0 :&: e ) :&: s1) :&: s2) :|: r3)) (l4 :|: ((((f0 :&: e') :&: s1) :&: s2) :|: r3))
bonrlffl :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((((e  :|: r0) :&: s1) :&: s2) :|: r3)) (l4 :|: ((((e' :|: r0) :&: s1) :&: s2) :|: r3))
bonrlffr :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((((l0 :|: e ) :&: s1) :&: s2) :|: r3)) (l4 :|: ((((l0 :|: e') :&: s1) :&: s2) :|: r3))
bonrlfsf :: (BProd b, BSum b) => b e e' -> b (l4 :|: (((f1 :&: (e  :&: s0)) :&: s2) :|: r3)) (l4 :|: (((f1 :&: (e' :&: s0)) :&: s2) :|: r3))
bonrlfss :: (BProd b, BSum b) => b e e' -> b (l4 :|: (((f1 :&: (f0 :&: e )) :&: s2) :|: r3)) (l4 :|: (((f1 :&: (f0 :&: e')) :&: s2) :|: r3))
bonrlfsl :: (BProd b, BSum b) => b e e' -> b (l4 :|: (((f1 :&: (e  :|: r0)) :&: s2) :|: r3)) (l4 :|: (((f1 :&: (e' :|: r0)) :&: s2) :|: r3))
bonrlfsr :: (BProd b, BSum b) => b e e' -> b (l4 :|: (((f1 :&: (l0 :|: e )) :&: s2) :|: r3)) (l4 :|: (((f1 :&: (l0 :|: e')) :&: s2) :|: r3))
bonrlflf :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((((e  :&: s0) :|: r1) :&: s2) :|: r3)) (l4 :|: ((((e' :&: s0) :|: r1) :&: s2) :|: r3))
bonrlfls :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((((f0 :&: e ) :|: r1) :&: s2) :|: r3)) (l4 :|: ((((f0 :&: e') :|: r1) :&: s2) :|: r3))
bonrlfll :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((((e  :|: r0) :|: r1) :&: s2) :|: r3)) (l4 :|: ((((e' :|: r0) :|: r1) :&: s2) :|: r3))
bonrlflr :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((((l0 :|: e ) :|: r1) :&: s2) :|: r3)) (l4 :|: ((((l0 :|: e') :|: r1) :&: s2) :|: r3))
bonrlfrf :: (BProd b, BSum b) => b e e' -> b (l4 :|: (((l1 :|: (e  :&: s0)) :&: s2) :|: r3)) (l4 :|: (((l1 :|: (e' :&: s0)) :&: s2) :|: r3))
bonrlfrs :: (BProd b, BSum b) => b e e' -> b (l4 :|: (((l1 :|: (f0 :&: e )) :&: s2) :|: r3)) (l4 :|: (((l1 :|: (f0 :&: e')) :&: s2) :|: r3))
bonrlfrl :: (BProd b, BSum b) => b e e' -> b (l4 :|: (((l1 :|: (e  :|: r0)) :&: s2) :|: r3)) (l4 :|: (((l1 :|: (e' :|: r0)) :&: s2) :|: r3))
bonrlfrr :: (BProd b, BSum b) => b e e' -> b (l4 :|: (((l1 :|: (l0 :|: e )) :&: s2) :|: r3)) (l4 :|: (((l1 :|: (l0 :|: e')) :&: s2) :|: r3))
bonrlsff :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((f2 :&: ((e  :&: s0) :&: s1)) :|: r3)) (l4 :|: ((f2 :&: ((e' :&: s0) :&: s1)) :|: r3))
bonrlsfs :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((f2 :&: ((f0 :&: e ) :&: s1)) :|: r3)) (l4 :|: ((f2 :&: ((f0 :&: e') :&: s1)) :|: r3))
bonrlsfl :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((f2 :&: ((e  :|: r0) :&: s1)) :|: r3)) (l4 :|: ((f2 :&: ((e' :|: r0) :&: s1)) :|: r3))
bonrlsfr :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((f2 :&: ((l0 :|: e ) :&: s1)) :|: r3)) (l4 :|: ((f2 :&: ((l0 :|: e') :&: s1)) :|: r3))
bonrlssf :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((f2 :&: (f1 :&: (e  :&: s0))) :|: r3)) (l4 :|: ((f2 :&: (f1 :&: (e' :&: s0))) :|: r3))
bonrlsss :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((f2 :&: (f1 :&: (f0 :&: e ))) :|: r3)) (l4 :|: ((f2 :&: (f1 :&: (f0 :&: e'))) :|: r3))
bonrlssl :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((f2 :&: (f1 :&: (e  :|: r0))) :|: r3)) (l4 :|: ((f2 :&: (f1 :&: (e' :|: r0))) :|: r3))
bonrlssr :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((f2 :&: (f1 :&: (l0 :|: e ))) :|: r3)) (l4 :|: ((f2 :&: (f1 :&: (l0 :|: e'))) :|: r3))
bonrlslf :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((f2 :&: ((e  :&: s0) :|: r1)) :|: r3)) (l4 :|: ((f2 :&: ((e' :&: s0) :|: r1)) :|: r3))
bonrlsls :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((f2 :&: ((f0 :&: e ) :|: r1)) :|: r3)) (l4 :|: ((f2 :&: ((f0 :&: e') :|: r1)) :|: r3))
bonrlsll :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((f2 :&: ((e  :|: r0) :|: r1)) :|: r3)) (l4 :|: ((f2 :&: ((e' :|: r0) :|: r1)) :|: r3))
bonrlslr :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((f2 :&: ((l0 :|: e ) :|: r1)) :|: r3)) (l4 :|: ((f2 :&: ((l0 :|: e') :|: r1)) :|: r3))
bonrlsrf :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((f2 :&: (l1 :|: (e  :&: s0))) :|: r3)) (l4 :|: ((f2 :&: (l1 :|: (e' :&: s0))) :|: r3))
bonrlsrs :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((f2 :&: (l1 :|: (f0 :&: e ))) :|: r3)) (l4 :|: ((f2 :&: (l1 :|: (f0 :&: e'))) :|: r3))
bonrlsrl :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((f2 :&: (l1 :|: (e  :|: r0))) :|: r3)) (l4 :|: ((f2 :&: (l1 :|: (e' :|: r0))) :|: r3))
bonrlsrr :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((f2 :&: (l1 :|: (l0 :|: e ))) :|: r3)) (l4 :|: ((f2 :&: (l1 :|: (l0 :|: e'))) :|: r3))
bonrllff :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((((e  :&: s0) :&: s1) :|: r2) :|: r3)) (l4 :|: ((((e' :&: s0) :&: s1) :|: r2) :|: r3))
bonrllfs :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((((f0 :&: e ) :&: s1) :|: r2) :|: r3)) (l4 :|: ((((f0 :&: e') :&: s1) :|: r2) :|: r3))
bonrllfl :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((((e  :|: r0) :&: s1) :|: r2) :|: r3)) (l4 :|: ((((e' :|: r0) :&: s1) :|: r2) :|: r3))
bonrllfr :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((((l0 :|: e ) :&: s1) :|: r2) :|: r3)) (l4 :|: ((((l0 :|: e') :&: s1) :|: r2) :|: r3))
bonrllsf :: (BProd b, BSum b) => b e e' -> b (l4 :|: (((f1 :&: (e  :&: s0)) :|: r2) :|: r3)) (l4 :|: (((f1 :&: (e' :&: s0)) :|: r2) :|: r3))
bonrllss :: (BProd b, BSum b) => b e e' -> b (l4 :|: (((f1 :&: (f0 :&: e )) :|: r2) :|: r3)) (l4 :|: (((f1 :&: (f0 :&: e')) :|: r2) :|: r3))
bonrllsl :: (BProd b, BSum b) => b e e' -> b (l4 :|: (((f1 :&: (e  :|: r0)) :|: r2) :|: r3)) (l4 :|: (((f1 :&: (e' :|: r0)) :|: r2) :|: r3))
bonrllsr :: (BProd b, BSum b) => b e e' -> b (l4 :|: (((f1 :&: (l0 :|: e )) :|: r2) :|: r3)) (l4 :|: (((f1 :&: (l0 :|: e')) :|: r2) :|: r3))
bonrlllf :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((((e  :&: s0) :|: r1) :|: r2) :|: r3)) (l4 :|: ((((e' :&: s0) :|: r1) :|: r2) :|: r3))
bonrllls :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((((f0 :&: e ) :|: r1) :|: r2) :|: r3)) (l4 :|: ((((f0 :&: e') :|: r1) :|: r2) :|: r3))
bonrllll :: (BSum b) => b e e' -> b (l4 :|: ((((e  :|: r0) :|: r1) :|: r2) :|: r3)) (l4 :|: ((((e' :|: r0) :|: r1) :|: r2) :|: r3))
bonrlllr :: (BSum b) => b e e' -> b (l4 :|: ((((l0 :|: e ) :|: r1) :|: r2) :|: r3)) (l4 :|: ((((l0 :|: e') :|: r1) :|: r2) :|: r3))
bonrllrf :: (BProd b, BSum b) => b e e' -> b (l4 :|: (((l1 :|: (e  :&: s0)) :|: r2) :|: r3)) (l4 :|: (((l1 :|: (e' :&: s0)) :|: r2) :|: r3))
bonrllrs :: (BProd b, BSum b) => b e e' -> b (l4 :|: (((l1 :|: (f0 :&: e )) :|: r2) :|: r3)) (l4 :|: (((l1 :|: (f0 :&: e')) :|: r2) :|: r3))
bonrllrl :: (BSum b) => b e e' -> b (l4 :|: (((l1 :|: (e  :|: r0)) :|: r2) :|: r3)) (l4 :|: (((l1 :|: (e' :|: r0)) :|: r2) :|: r3))
bonrllrr :: (BSum b) => b e e' -> b (l4 :|: (((l1 :|: (l0 :|: e )) :|: r2) :|: r3)) (l4 :|: (((l1 :|: (l0 :|: e')) :|: r2) :|: r3))
bonrlrff :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((l2 :|: ((e  :&: s0) :&: s1)) :|: r3)) (l4 :|: ((l2 :|: ((e' :&: s0) :&: s1)) :|: r3))
bonrlrfs :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((l2 :|: ((f0 :&: e ) :&: s1)) :|: r3)) (l4 :|: ((l2 :|: ((f0 :&: e') :&: s1)) :|: r3))
bonrlrfl :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((l2 :|: ((e  :|: r0) :&: s1)) :|: r3)) (l4 :|: ((l2 :|: ((e' :|: r0) :&: s1)) :|: r3))
bonrlrfr :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((l2 :|: ((l0 :|: e ) :&: s1)) :|: r3)) (l4 :|: ((l2 :|: ((l0 :|: e') :&: s1)) :|: r3))
bonrlrsf :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((l2 :|: (f1 :&: (e  :&: s0))) :|: r3)) (l4 :|: ((l2 :|: (f1 :&: (e' :&: s0))) :|: r3))
bonrlrss :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((l2 :|: (f1 :&: (f0 :&: e ))) :|: r3)) (l4 :|: ((l2 :|: (f1 :&: (f0 :&: e'))) :|: r3))
bonrlrsl :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((l2 :|: (f1 :&: (e  :|: r0))) :|: r3)) (l4 :|: ((l2 :|: (f1 :&: (e' :|: r0))) :|: r3))
bonrlrsr :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((l2 :|: (f1 :&: (l0 :|: e ))) :|: r3)) (l4 :|: ((l2 :|: (f1 :&: (l0 :|: e'))) :|: r3))
bonrlrlf :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((l2 :|: ((e  :&: s0) :|: r1)) :|: r3)) (l4 :|: ((l2 :|: ((e' :&: s0) :|: r1)) :|: r3))
bonrlrls :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((l2 :|: ((f0 :&: e ) :|: r1)) :|: r3)) (l4 :|: ((l2 :|: ((f0 :&: e') :|: r1)) :|: r3))
bonrlrll :: (BSum b) => b e e' -> b (l4 :|: ((l2 :|: ((e  :|: r0) :|: r1)) :|: r3)) (l4 :|: ((l2 :|: ((e' :|: r0) :|: r1)) :|: r3))
bonrlrlr :: (BSum b) => b e e' -> b (l4 :|: ((l2 :|: ((l0 :|: e ) :|: r1)) :|: r3)) (l4 :|: ((l2 :|: ((l0 :|: e') :|: r1)) :|: r3))
bonrlrrf :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((l2 :|: (l1 :|: (e  :&: s0))) :|: r3)) (l4 :|: ((l2 :|: (l1 :|: (e' :&: s0))) :|: r3))
bonrlrrs :: (BProd b, BSum b) => b e e' -> b (l4 :|: ((l2 :|: (l1 :|: (f0 :&: e ))) :|: r3)) (l4 :|: ((l2 :|: (l1 :|: (f0 :&: e'))) :|: r3))
bonrlrrl :: (BSum b) => b e e' -> b (l4 :|: ((l2 :|: (l1 :|: (e  :|: r0))) :|: r3)) (l4 :|: ((l2 :|: (l1 :|: (e' :|: r0))) :|: r3))
bonrlrrr :: (BSum b) => b e e' -> b (l4 :|: ((l2 :|: (l1 :|: (l0 :|: e ))) :|: r3)) (l4 :|: ((l2 :|: (l1 :|: (l0 :|: e'))) :|: r3))
bonrrfff :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (((e  :&: s0) :&: s1) :&: s2))) (l4 :|: (l3 :|: (((e' :&: s0) :&: s1) :&: s2)))
bonrrffs :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (((f0 :&: e ) :&: s1) :&: s2))) (l4 :|: (l3 :|: (((f0 :&: e') :&: s1) :&: s2)))
bonrrffl :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (((e  :|: r0) :&: s1) :&: s2))) (l4 :|: (l3 :|: (((e' :|: r0) :&: s1) :&: s2)))
bonrrffr :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (((l0 :|: e ) :&: s1) :&: s2))) (l4 :|: (l3 :|: (((l0 :|: e') :&: s1) :&: s2)))
bonrrfsf :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: ((f1 :&: (e  :&: s0)) :&: s2))) (l4 :|: (l3 :|: ((f1 :&: (e' :&: s0)) :&: s2)))
bonrrfss :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: ((f1 :&: (f0 :&: e )) :&: s2))) (l4 :|: (l3 :|: ((f1 :&: (f0 :&: e')) :&: s2)))
bonrrfsl :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: ((f1 :&: (e  :|: r0)) :&: s2))) (l4 :|: (l3 :|: ((f1 :&: (e' :|: r0)) :&: s2)))
bonrrfsr :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: ((f1 :&: (l0 :|: e )) :&: s2))) (l4 :|: (l3 :|: ((f1 :&: (l0 :|: e')) :&: s2)))
bonrrflf :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (((e  :&: s0) :|: r1) :&: s2))) (l4 :|: (l3 :|: (((e' :&: s0) :|: r1) :&: s2)))
bonrrfls :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (((f0 :&: e ) :|: r1) :&: s2))) (l4 :|: (l3 :|: (((f0 :&: e') :|: r1) :&: s2)))
bonrrfll :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (((e  :|: r0) :|: r1) :&: s2))) (l4 :|: (l3 :|: (((e' :|: r0) :|: r1) :&: s2)))
bonrrflr :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (((l0 :|: e ) :|: r1) :&: s2))) (l4 :|: (l3 :|: (((l0 :|: e') :|: r1) :&: s2)))
bonrrfrf :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: ((l1 :|: (e  :&: s0)) :&: s2))) (l4 :|: (l3 :|: ((l1 :|: (e' :&: s0)) :&: s2)))
bonrrfrs :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: ((l1 :|: (f0 :&: e )) :&: s2))) (l4 :|: (l3 :|: ((l1 :|: (f0 :&: e')) :&: s2)))
bonrrfrl :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: ((l1 :|: (e  :|: r0)) :&: s2))) (l4 :|: (l3 :|: ((l1 :|: (e' :|: r0)) :&: s2)))
bonrrfrr :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: ((l1 :|: (l0 :|: e )) :&: s2))) (l4 :|: (l3 :|: ((l1 :|: (l0 :|: e')) :&: s2)))
bonrrsff :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (f2 :&: ((e  :&: s0) :&: s1)))) (l4 :|: (l3 :|: (f2 :&: ((e' :&: s0) :&: s1))))
bonrrsfs :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (f2 :&: ((f0 :&: e ) :&: s1)))) (l4 :|: (l3 :|: (f2 :&: ((f0 :&: e') :&: s1))))
bonrrsfl :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (f2 :&: ((e  :|: r0) :&: s1)))) (l4 :|: (l3 :|: (f2 :&: ((e' :|: r0) :&: s1))))
bonrrsfr :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (f2 :&: ((l0 :|: e ) :&: s1)))) (l4 :|: (l3 :|: (f2 :&: ((l0 :|: e') :&: s1))))
bonrrssf :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (f2 :&: (f1 :&: (e  :&: s0))))) (l4 :|: (l3 :|: (f2 :&: (f1 :&: (e' :&: s0)))))
bonrrsss :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (f2 :&: (f1 :&: (f0 :&: e ))))) (l4 :|: (l3 :|: (f2 :&: (f1 :&: (f0 :&: e')))))
bonrrssl :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (f2 :&: (f1 :&: (e  :|: r0))))) (l4 :|: (l3 :|: (f2 :&: (f1 :&: (e' :|: r0)))))
bonrrssr :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (f2 :&: (f1 :&: (l0 :|: e ))))) (l4 :|: (l3 :|: (f2 :&: (f1 :&: (l0 :|: e')))))
bonrrslf :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (f2 :&: ((e  :&: s0) :|: r1)))) (l4 :|: (l3 :|: (f2 :&: ((e' :&: s0) :|: r1))))
bonrrsls :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (f2 :&: ((f0 :&: e ) :|: r1)))) (l4 :|: (l3 :|: (f2 :&: ((f0 :&: e') :|: r1))))
bonrrsll :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (f2 :&: ((e  :|: r0) :|: r1)))) (l4 :|: (l3 :|: (f2 :&: ((e' :|: r0) :|: r1))))
bonrrslr :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (f2 :&: ((l0 :|: e ) :|: r1)))) (l4 :|: (l3 :|: (f2 :&: ((l0 :|: e') :|: r1))))
bonrrsrf :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (f2 :&: (l1 :|: (e  :&: s0))))) (l4 :|: (l3 :|: (f2 :&: (l1 :|: (e' :&: s0)))))
bonrrsrs :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (f2 :&: (l1 :|: (f0 :&: e ))))) (l4 :|: (l3 :|: (f2 :&: (l1 :|: (f0 :&: e')))))
bonrrsrl :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (f2 :&: (l1 :|: (e  :|: r0))))) (l4 :|: (l3 :|: (f2 :&: (l1 :|: (e' :|: r0)))))
bonrrsrr :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (f2 :&: (l1 :|: (l0 :|: e ))))) (l4 :|: (l3 :|: (f2 :&: (l1 :|: (l0 :|: e')))))
bonrrlff :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (((e  :&: s0) :&: s1) :|: r2))) (l4 :|: (l3 :|: (((e' :&: s0) :&: s1) :|: r2)))
bonrrlfs :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (((f0 :&: e ) :&: s1) :|: r2))) (l4 :|: (l3 :|: (((f0 :&: e') :&: s1) :|: r2)))
bonrrlfl :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (((e  :|: r0) :&: s1) :|: r2))) (l4 :|: (l3 :|: (((e' :|: r0) :&: s1) :|: r2)))
bonrrlfr :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (((l0 :|: e ) :&: s1) :|: r2))) (l4 :|: (l3 :|: (((l0 :|: e') :&: s1) :|: r2)))
bonrrlsf :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: ((f1 :&: (e  :&: s0)) :|: r2))) (l4 :|: (l3 :|: ((f1 :&: (e' :&: s0)) :|: r2)))
bonrrlss :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: ((f1 :&: (f0 :&: e )) :|: r2))) (l4 :|: (l3 :|: ((f1 :&: (f0 :&: e')) :|: r2)))
bonrrlsl :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: ((f1 :&: (e  :|: r0)) :|: r2))) (l4 :|: (l3 :|: ((f1 :&: (e' :|: r0)) :|: r2)))
bonrrlsr :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: ((f1 :&: (l0 :|: e )) :|: r2))) (l4 :|: (l3 :|: ((f1 :&: (l0 :|: e')) :|: r2)))
bonrrllf :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (((e  :&: s0) :|: r1) :|: r2))) (l4 :|: (l3 :|: (((e' :&: s0) :|: r1) :|: r2)))
bonrrlls :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (((f0 :&: e ) :|: r1) :|: r2))) (l4 :|: (l3 :|: (((f0 :&: e') :|: r1) :|: r2)))
bonrrlll :: (BSum b) => b e e' -> b (l4 :|: (l3 :|: (((e  :|: r0) :|: r1) :|: r2))) (l4 :|: (l3 :|: (((e' :|: r0) :|: r1) :|: r2)))
bonrrllr :: (BSum b) => b e e' -> b (l4 :|: (l3 :|: (((l0 :|: e ) :|: r1) :|: r2))) (l4 :|: (l3 :|: (((l0 :|: e') :|: r1) :|: r2)))
bonrrlrf :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: ((l1 :|: (e  :&: s0)) :|: r2))) (l4 :|: (l3 :|: ((l1 :|: (e' :&: s0)) :|: r2)))
bonrrlrs :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: ((l1 :|: (f0 :&: e )) :|: r2))) (l4 :|: (l3 :|: ((l1 :|: (f0 :&: e')) :|: r2)))
bonrrlrl :: (BSum b) => b e e' -> b (l4 :|: (l3 :|: ((l1 :|: (e  :|: r0)) :|: r2))) (l4 :|: (l3 :|: ((l1 :|: (e' :|: r0)) :|: r2)))
bonrrlrr :: (BSum b) => b e e' -> b (l4 :|: (l3 :|: ((l1 :|: (l0 :|: e )) :|: r2))) (l4 :|: (l3 :|: ((l1 :|: (l0 :|: e')) :|: r2)))
bonrrrff :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (l2 :|: ((e  :&: s0) :&: s1)))) (l4 :|: (l3 :|: (l2 :|: ((e' :&: s0) :&: s1))))
bonrrrfs :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (l2 :|: ((f0 :&: e ) :&: s1)))) (l4 :|: (l3 :|: (l2 :|: ((f0 :&: e') :&: s1))))
bonrrrfl :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (l2 :|: ((e  :|: r0) :&: s1)))) (l4 :|: (l3 :|: (l2 :|: ((e' :|: r0) :&: s1))))
bonrrrfr :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (l2 :|: ((l0 :|: e ) :&: s1)))) (l4 :|: (l3 :|: (l2 :|: ((l0 :|: e') :&: s1))))
bonrrrsf :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (l2 :|: (f1 :&: (e  :&: s0))))) (l4 :|: (l3 :|: (l2 :|: (f1 :&: (e' :&: s0)))))
bonrrrss :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (l2 :|: (f1 :&: (f0 :&: e ))))) (l4 :|: (l3 :|: (l2 :|: (f1 :&: (f0 :&: e')))))
bonrrrsl :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (l2 :|: (f1 :&: (e  :|: r0))))) (l4 :|: (l3 :|: (l2 :|: (f1 :&: (e' :|: r0)))))
bonrrrsr :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (l2 :|: (f1 :&: (l0 :|: e ))))) (l4 :|: (l3 :|: (l2 :|: (f1 :&: (l0 :|: e')))))
bonrrrlf :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (l2 :|: ((e  :&: s0) :|: r1)))) (l4 :|: (l3 :|: (l2 :|: ((e' :&: s0) :|: r1))))
bonrrrls :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (l2 :|: ((f0 :&: e ) :|: r1)))) (l4 :|: (l3 :|: (l2 :|: ((f0 :&: e') :|: r1))))
bonrrrll :: (BSum b) => b e e' -> b (l4 :|: (l3 :|: (l2 :|: ((e  :|: r0) :|: r1)))) (l4 :|: (l3 :|: (l2 :|: ((e' :|: r0) :|: r1))))
bonrrrlr :: (BSum b) => b e e' -> b (l4 :|: (l3 :|: (l2 :|: ((l0 :|: e ) :|: r1)))) (l4 :|: (l3 :|: (l2 :|: ((l0 :|: e') :|: r1))))
bonrrrrf :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (l2 :|: (l1 :|: (e  :&: s0))))) (l4 :|: (l3 :|: (l2 :|: (l1 :|: (e' :&: s0)))))
bonrrrrs :: (BProd b, BSum b) => b e e' -> b (l4 :|: (l3 :|: (l2 :|: (l1 :|: (f0 :&: e ))))) (l4 :|: (l3 :|: (l2 :|: (l1 :|: (f0 :&: e')))))
bonrrrrl :: (BSum b) => b e e' -> b (l4 :|: (l3 :|: (l2 :|: (l1 :|: (e  :|: r0))))) (l4 :|: (l3 :|: (l2 :|: (l1 :|: (e' :|: r0)))))
bonrrrrr :: (BSum b) => b e e' -> b (l4 :|: (l3 :|: (l2 :|: (l1 :|: (l0 :|: e ))))) (l4 :|: (l3 :|: (l2 :|: (l1 :|: (l0 :|: e')))))

bxf = bfst     -- for consistent naming
bxs = bsnd     -- for consistent naming
bxff = bxf >>> bxf
bxfs = bxf >>> bxs
bxsf = bxs >>> bxf
bxss = bxs >>> bxs
bxfff = bxf >>> bxff
bxffs = bxf >>> bxfs
bxfsf = bxf >>> bxsf
bxfss = bxf >>> bxss
bxsff = bxs >>> bxff
bxsfs = bxs >>> bxfs
bxssf = bxs >>> bxsf
bxsss = bxs >>> bxss
bxffff = bxf >>> bxfff
bxfffs = bxf >>> bxffs
bxffsf = bxf >>> bxfsf
bxffss = bxf >>> bxfss
bxfsff = bxf >>> bxsff
bxfsfs = bxf >>> bxsfs
bxfssf = bxf >>> bxssf
bxfsss = bxf >>> bxsss
bxsfff = bxs >>> bxfff
bxsffs = bxs >>> bxffs
bxsfsf = bxs >>> bxfsf
bxsfss = bxs >>> bxfss
bxssff = bxs >>> bxsff
bxssfs = bxs >>> bxsfs
bxsssf = bxs >>> bxssf
bxssss = bxs >>> bxsss
bxfffff = bxf >>> bxffff
bxffffs = bxf >>> bxfffs
bxfffsf = bxf >>> bxffsf
bxfffss = bxf >>> bxffss
bxffsff = bxf >>> bxfsff
bxffsfs = bxf >>> bxfsfs
bxffssf = bxf >>> bxfssf
bxffsss = bxf >>> bxfsss
bxfsfff = bxf >>> bxsfff
bxfsffs = bxf >>> bxsffs
bxfsfsf = bxf >>> bxsfsf
bxfsfss = bxf >>> bxsfss
bxfssff = bxf >>> bxssff
bxfssfs = bxf >>> bxssfs
bxfsssf = bxf >>> bxsssf
bxfssss = bxf >>> bxssss
bxsffff = bxs >>> bxffff
bxsfffs = bxs >>> bxfffs
bxsffsf = bxs >>> bxffsf
bxsffss = bxs >>> bxffss
bxsfsff = bxs >>> bxfsff
bxsfsfs = bxs >>> bxfsfs
bxsfssf = bxs >>> bxfssf
bxsfsss = bxs >>> bxfsss
bxssfff = bxs >>> bxsfff
bxssffs = bxs >>> bxsffs
bxssfsf = bxs >>> bxsfsf
bxssfss = bxs >>> bxsfss
bxsssff = bxs >>> bxssff
bxsssfs = bxs >>> bxssfs
bxssssf = bxs >>> bxsssf
bxsssss = bxs >>> bxssss
-- binl already defined in FRP.Sirea.Behavior.
-- binr already defined in FRP.Sirea.Behavior.
binll = binl <<< binl
binlr = binl <<< binr
binrl = binr <<< binl
binrr = binr <<< binr
binlll = binl <<< binll
binllr = binl <<< binlr
binlrl = binl <<< binrl
binlrr = binl <<< binrr
binrll = binr <<< binll
binrlr = binr <<< binlr
binrrl = binr <<< binrl
binrrr = binr <<< binrr
binllll = binl <<< binlll
binlllr = binl <<< binllr
binllrl = binl <<< binlrl
binllrr = binl <<< binlrr
binlrll = binl <<< binrll
binlrlr = binl <<< binrlr
binlrrl = binl <<< binrrl
binlrrr = binl <<< binrrr
binrlll = binr <<< binlll
binrllr = binr <<< binllr
binrlrl = binr <<< binlrl
binrlrr = binr <<< binlrr
binrrll = binr <<< binrll
binrrlr = binr <<< binrlr
binrrrl = binr <<< binrrl
binrrrr = binr <<< binrrr
binlllll = binl <<< binllll
binllllr = binl <<< binlllr
binlllrl = binl <<< binllrl
binlllrr = binl <<< binllrr
binllrll = binl <<< binlrll
binllrlr = binl <<< binlrlr
binllrrl = binl <<< binlrrl
binllrrr = binl <<< binlrrr
binlrlll = binl <<< binrlll
binlrllr = binl <<< binrllr
binlrlrl = binl <<< binrlrl
binlrlrr = binl <<< binrlrr
binlrrll = binl <<< binrrll
binlrrlr = binl <<< binrrlr
binlrrrl = binl <<< binrrrl
binlrrrr = binl <<< binrrrr
binrllll = binr <<< binllll
binrlllr = binr <<< binlllr
binrllrl = binr <<< binllrl
binrllrr = binr <<< binllrr
binrlrll = binr <<< binlrll
binrlrlr = binr <<< binlrlr
binrlrrl = binr <<< binlrrl
binrlrrr = binr <<< binlrrr
binrrlll = binr <<< binrlll
binrrllr = binr <<< binrllr
binrrlrl = binr <<< binrlrl
binrrlrr = binr <<< binrlrr
binrrrll = binr <<< binrrll
binrrrlr = binr <<< binrrlr
binrrrrl = binr <<< binrrrl
binrrrrr = binr <<< binrrrr
bonf = bfirst  -- for consistent naming
bons = bsecond -- for consistent naming
bonl = bleft   -- for consistent naming
bonr = bright  -- for consistent naming
bonff = bonf . bonf
bonfs = bonf . bons
bonfl = bonf . bonl
bonfr = bonf . bonr
bonsf = bons . bonf
bonss = bons . bons
bonsl = bons . bonl
bonsr = bons . bonr
bonlf = bonl . bonf
bonls = bonl . bons
bonll = bonl . bonl
bonlr = bonl . bonr
bonrf = bonr . bonf
bonrs = bonr . bons
bonrl = bonr . bonl
bonrr = bonr . bonr
bonfff = bonf . bonff
bonffs = bonf . bonfs
bonffl = bonf . bonfl
bonffr = bonf . bonfr
bonfsf = bonf . bonsf
bonfss = bonf . bonss
bonfsl = bonf . bonsl
bonfsr = bonf . bonsr
bonflf = bonf . bonlf
bonfls = bonf . bonls
bonfll = bonf . bonll
bonflr = bonf . bonlr
bonfrf = bonf . bonrf
bonfrs = bonf . bonrs
bonfrl = bonf . bonrl
bonfrr = bonf . bonrr
bonsff = bons . bonff
bonsfs = bons . bonfs
bonsfl = bons . bonfl
bonsfr = bons . bonfr
bonssf = bons . bonsf
bonsss = bons . bonss
bonssl = bons . bonsl
bonssr = bons . bonsr
bonslf = bons . bonlf
bonsls = bons . bonls
bonsll = bons . bonll
bonslr = bons . bonlr
bonsrf = bons . bonrf
bonsrs = bons . bonrs
bonsrl = bons . bonrl
bonsrr = bons . bonrr
bonlff = bonl . bonff
bonlfs = bonl . bonfs
bonlfl = bonl . bonfl
bonlfr = bonl . bonfr
bonlsf = bonl . bonsf
bonlss = bonl . bonss
bonlsl = bonl . bonsl
bonlsr = bonl . bonsr
bonllf = bonl . bonlf
bonlls = bonl . bonls
bonlll = bonl . bonll
bonllr = bonl . bonlr
bonlrf = bonl . bonrf
bonlrs = bonl . bonrs
bonlrl = bonl . bonrl
bonlrr = bonl . bonrr
bonrff = bonr . bonff
bonrfs = bonr . bonfs
bonrfl = bonr . bonfl
bonrfr = bonr . bonfr
bonrsf = bonr . bonsf
bonrss = bonr . bonss
bonrsl = bonr . bonsl
bonrsr = bonr . bonsr
bonrlf = bonr . bonlf
bonrls = bonr . bonls
bonrll = bonr . bonll
bonrlr = bonr . bonlr
bonrrf = bonr . bonrf
bonrrs = bonr . bonrs
bonrrl = bonr . bonrl
bonrrr = bonr . bonrr
bonffff = bonf . bonfff
bonfffs = bonf . bonffs
bonfffl = bonf . bonffl
bonfffr = bonf . bonffr
bonffsf = bonf . bonfsf
bonffss = bonf . bonfss
bonffsl = bonf . bonfsl
bonffsr = bonf . bonfsr
bonfflf = bonf . bonflf
bonffls = bonf . bonfls
bonffll = bonf . bonfll
bonfflr = bonf . bonflr
bonffrf = bonf . bonfrf
bonffrs = bonf . bonfrs
bonffrl = bonf . bonfrl
bonffrr = bonf . bonfrr
bonfsff = bonf . bonsff
bonfsfs = bonf . bonsfs
bonfsfl = bonf . bonsfl
bonfsfr = bonf . bonsfr
bonfssf = bonf . bonssf
bonfsss = bonf . bonsss
bonfssl = bonf . bonssl
bonfssr = bonf . bonssr
bonfslf = bonf . bonslf
bonfsls = bonf . bonsls
bonfsll = bonf . bonsll
bonfslr = bonf . bonslr
bonfsrf = bonf . bonsrf
bonfsrs = bonf . bonsrs
bonfsrl = bonf . bonsrl
bonfsrr = bonf . bonsrr
bonflff = bonf . bonlff
bonflfs = bonf . bonlfs
bonflfl = bonf . bonlfl
bonflfr = bonf . bonlfr
bonflsf = bonf . bonlsf
bonflss = bonf . bonlss
bonflsl = bonf . bonlsl
bonflsr = bonf . bonlsr
bonfllf = bonf . bonllf
bonflls = bonf . bonlls
bonflll = bonf . bonlll
bonfllr = bonf . bonllr
bonflrf = bonf . bonlrf
bonflrs = bonf . bonlrs
bonflrl = bonf . bonlrl
bonflrr = bonf . bonlrr
bonfrff = bonf . bonrff
bonfrfs = bonf . bonrfs
bonfrfl = bonf . bonrfl
bonfrfr = bonf . bonrfr
bonfrsf = bonf . bonrsf
bonfrss = bonf . bonrss
bonfrsl = bonf . bonrsl
bonfrsr = bonf . bonrsr
bonfrlf = bonf . bonrlf
bonfrls = bonf . bonrls
bonfrll = bonf . bonrll
bonfrlr = bonf . bonrlr
bonfrrf = bonf . bonrrf
bonfrrs = bonf . bonrrs
bonfrrl = bonf . bonrrl
bonfrrr = bonf . bonrrr
bonsfff = bons . bonfff
bonsffs = bons . bonffs
bonsffl = bons . bonffl
bonsffr = bons . bonffr
bonsfsf = bons . bonfsf
bonsfss = bons . bonfss
bonsfsl = bons . bonfsl
bonsfsr = bons . bonfsr
bonsflf = bons . bonflf
bonsfls = bons . bonfls
bonsfll = bons . bonfll
bonsflr = bons . bonflr
bonsfrf = bons . bonfrf
bonsfrs = bons . bonfrs
bonsfrl = bons . bonfrl
bonsfrr = bons . bonfrr
bonssff = bons . bonsff
bonssfs = bons . bonsfs
bonssfl = bons . bonsfl
bonssfr = bons . bonsfr
bonsssf = bons . bonssf
bonssss = bons . bonsss
bonsssl = bons . bonssl
bonsssr = bons . bonssr
bonsslf = bons . bonslf
bonssls = bons . bonsls
bonssll = bons . bonsll
bonsslr = bons . bonslr
bonssrf = bons . bonsrf
bonssrs = bons . bonsrs
bonssrl = bons . bonsrl
bonssrr = bons . bonsrr
bonslff = bons . bonlff
bonslfs = bons . bonlfs
bonslfl = bons . bonlfl
bonslfr = bons . bonlfr
bonslsf = bons . bonlsf
bonslss = bons . bonlss
bonslsl = bons . bonlsl
bonslsr = bons . bonlsr
bonsllf = bons . bonllf
bonslls = bons . bonlls
bonslll = bons . bonlll
bonsllr = bons . bonllr
bonslrf = bons . bonlrf
bonslrs = bons . bonlrs
bonslrl = bons . bonlrl
bonslrr = bons . bonlrr
bonsrff = bons . bonrff
bonsrfs = bons . bonrfs
bonsrfl = bons . bonrfl
bonsrfr = bons . bonrfr
bonsrsf = bons . bonrsf
bonsrss = bons . bonrss
bonsrsl = bons . bonrsl
bonsrsr = bons . bonrsr
bonsrlf = bons . bonrlf
bonsrls = bons . bonrls
bonsrll = bons . bonrll
bonsrlr = bons . bonrlr
bonsrrf = bons . bonrrf
bonsrrs = bons . bonrrs
bonsrrl = bons . bonrrl
bonsrrr = bons . bonrrr
bonlfff = bonl . bonfff
bonlffs = bonl . bonffs
bonlffl = bonl . bonffl
bonlffr = bonl . bonffr
bonlfsf = bonl . bonfsf
bonlfss = bonl . bonfss
bonlfsl = bonl . bonfsl
bonlfsr = bonl . bonfsr
bonlflf = bonl . bonflf
bonlfls = bonl . bonfls
bonlfll = bonl . bonfll
bonlflr = bonl . bonflr
bonlfrf = bonl . bonfrf
bonlfrs = bonl . bonfrs
bonlfrl = bonl . bonfrl
bonlfrr = bonl . bonfrr
bonlsff = bonl . bonsff
bonlsfs = bonl . bonsfs
bonlsfl = bonl . bonsfl
bonlsfr = bonl . bonsfr
bonlssf = bonl . bonssf
bonlsss = bonl . bonsss
bonlssl = bonl . bonssl
bonlssr = bonl . bonssr
bonlslf = bonl . bonslf
bonlsls = bonl . bonsls
bonlsll = bonl . bonsll
bonlslr = bonl . bonslr
bonlsrf = bonl . bonsrf
bonlsrs = bonl . bonsrs
bonlsrl = bonl . bonsrl
bonlsrr = bonl . bonsrr
bonllff = bonl . bonlff
bonllfs = bonl . bonlfs
bonllfl = bonl . bonlfl
bonllfr = bonl . bonlfr
bonllsf = bonl . bonlsf
bonllss = bonl . bonlss
bonllsl = bonl . bonlsl
bonllsr = bonl . bonlsr
bonlllf = bonl . bonllf
bonllls = bonl . bonlls
bonllll = bonl . bonlll
bonlllr = bonl . bonllr
bonllrf = bonl . bonlrf
bonllrs = bonl . bonlrs
bonllrl = bonl . bonlrl
bonllrr = bonl . bonlrr
bonlrff = bonl . bonrff
bonlrfs = bonl . bonrfs
bonlrfl = bonl . bonrfl
bonlrfr = bonl . bonrfr
bonlrsf = bonl . bonrsf
bonlrss = bonl . bonrss
bonlrsl = bonl . bonrsl
bonlrsr = bonl . bonrsr
bonlrlf = bonl . bonrlf
bonlrls = bonl . bonrls
bonlrll = bonl . bonrll
bonlrlr = bonl . bonrlr
bonlrrf = bonl . bonrrf
bonlrrs = bonl . bonrrs
bonlrrl = bonl . bonrrl
bonlrrr = bonl . bonrrr
bonrfff = bonr . bonfff
bonrffs = bonr . bonffs
bonrffl = bonr . bonffl
bonrffr = bonr . bonffr
bonrfsf = bonr . bonfsf
bonrfss = bonr . bonfss
bonrfsl = bonr . bonfsl
bonrfsr = bonr . bonfsr
bonrflf = bonr . bonflf
bonrfls = bonr . bonfls
bonrfll = bonr . bonfll
bonrflr = bonr . bonflr
bonrfrf = bonr . bonfrf
bonrfrs = bonr . bonfrs
bonrfrl = bonr . bonfrl
bonrfrr = bonr . bonfrr
bonrsff = bonr . bonsff
bonrsfs = bonr . bonsfs
bonrsfl = bonr . bonsfl
bonrsfr = bonr . bonsfr
bonrssf = bonr . bonssf
bonrsss = bonr . bonsss
bonrssl = bonr . bonssl
bonrssr = bonr . bonssr
bonrslf = bonr . bonslf
bonrsls = bonr . bonsls
bonrsll = bonr . bonsll
bonrslr = bonr . bonslr
bonrsrf = bonr . bonsrf
bonrsrs = bonr . bonsrs
bonrsrl = bonr . bonsrl
bonrsrr = bonr . bonsrr
bonrlff = bonr . bonlff
bonrlfs = bonr . bonlfs
bonrlfl = bonr . bonlfl
bonrlfr = bonr . bonlfr
bonrlsf = bonr . bonlsf
bonrlss = bonr . bonlss
bonrlsl = bonr . bonlsl
bonrlsr = bonr . bonlsr
bonrllf = bonr . bonllf
bonrlls = bonr . bonlls
bonrlll = bonr . bonlll
bonrllr = bonr . bonllr
bonrlrf = bonr . bonlrf
bonrlrs = bonr . bonlrs
bonrlrl = bonr . bonlrl
bonrlrr = bonr . bonlrr
bonrrff = bonr . bonrff
bonrrfs = bonr . bonrfs
bonrrfl = bonr . bonrfl
bonrrfr = bonr . bonrfr
bonrrsf = bonr . bonrsf
bonrrss = bonr . bonrss
bonrrsl = bonr . bonrsl
bonrrsr = bonr . bonrsr
bonrrlf = bonr . bonrlf
bonrrls = bonr . bonrls
bonrrll = bonr . bonrll
bonrrlr = bonr . bonrlr
bonrrrf = bonr . bonrrf
bonrrrs = bonr . bonrrs
bonrrrl = bonr . bonrrl
bonrrrr = bonr . bonrrr
bonfffff = bonf . bonffff
bonffffs = bonf . bonfffs
bonffffl = bonf . bonfffl
bonffffr = bonf . bonfffr
bonfffsf = bonf . bonffsf
bonfffss = bonf . bonffss
bonfffsl = bonf . bonffsl
bonfffsr = bonf . bonffsr
bonffflf = bonf . bonfflf
bonfffls = bonf . bonffls
bonfffll = bonf . bonffll
bonffflr = bonf . bonfflr
bonfffrf = bonf . bonffrf
bonfffrs = bonf . bonffrs
bonfffrl = bonf . bonffrl
bonfffrr = bonf . bonffrr
bonffsff = bonf . bonfsff
bonffsfs = bonf . bonfsfs
bonffsfl = bonf . bonfsfl
bonffsfr = bonf . bonfsfr
bonffssf = bonf . bonfssf
bonffsss = bonf . bonfsss
bonffssl = bonf . bonfssl
bonffssr = bonf . bonfssr
bonffslf = bonf . bonfslf
bonffsls = bonf . bonfsls
bonffsll = bonf . bonfsll
bonffslr = bonf . bonfslr
bonffsrf = bonf . bonfsrf
bonffsrs = bonf . bonfsrs
bonffsrl = bonf . bonfsrl
bonffsrr = bonf . bonfsrr
bonfflff = bonf . bonflff
bonfflfs = bonf . bonflfs
bonfflfl = bonf . bonflfl
bonfflfr = bonf . bonflfr
bonfflsf = bonf . bonflsf
bonfflss = bonf . bonflss
bonfflsl = bonf . bonflsl
bonfflsr = bonf . bonflsr
bonffllf = bonf . bonfllf
bonfflls = bonf . bonflls
bonfflll = bonf . bonflll
bonffllr = bonf . bonfllr
bonfflrf = bonf . bonflrf
bonfflrs = bonf . bonflrs
bonfflrl = bonf . bonflrl
bonfflrr = bonf . bonflrr
bonffrff = bonf . bonfrff
bonffrfs = bonf . bonfrfs
bonffrfl = bonf . bonfrfl
bonffrfr = bonf . bonfrfr
bonffrsf = bonf . bonfrsf
bonffrss = bonf . bonfrss
bonffrsl = bonf . bonfrsl
bonffrsr = bonf . bonfrsr
bonffrlf = bonf . bonfrlf
bonffrls = bonf . bonfrls
bonffrll = bonf . bonfrll
bonffrlr = bonf . bonfrlr
bonffrrf = bonf . bonfrrf
bonffrrs = bonf . bonfrrs
bonffrrl = bonf . bonfrrl
bonffrrr = bonf . bonfrrr
bonfsfff = bonf . bonsfff
bonfsffs = bonf . bonsffs
bonfsffl = bonf . bonsffl
bonfsffr = bonf . bonsffr
bonfsfsf = bonf . bonsfsf
bonfsfss = bonf . bonsfss
bonfsfsl = bonf . bonsfsl
bonfsfsr = bonf . bonsfsr
bonfsflf = bonf . bonsflf
bonfsfls = bonf . bonsfls
bonfsfll = bonf . bonsfll
bonfsflr = bonf . bonsflr
bonfsfrf = bonf . bonsfrf
bonfsfrs = bonf . bonsfrs
bonfsfrl = bonf . bonsfrl
bonfsfrr = bonf . bonsfrr
bonfssff = bonf . bonssff
bonfssfs = bonf . bonssfs
bonfssfl = bonf . bonssfl
bonfssfr = bonf . bonssfr
bonfsssf = bonf . bonsssf
bonfssss = bonf . bonssss
bonfsssl = bonf . bonsssl
bonfsssr = bonf . bonsssr
bonfsslf = bonf . bonsslf
bonfssls = bonf . bonssls
bonfssll = bonf . bonssll
bonfsslr = bonf . bonsslr
bonfssrf = bonf . bonssrf
bonfssrs = bonf . bonssrs
bonfssrl = bonf . bonssrl
bonfssrr = bonf . bonssrr
bonfslff = bonf . bonslff
bonfslfs = bonf . bonslfs
bonfslfl = bonf . bonslfl
bonfslfr = bonf . bonslfr
bonfslsf = bonf . bonslsf
bonfslss = bonf . bonslss
bonfslsl = bonf . bonslsl
bonfslsr = bonf . bonslsr
bonfsllf = bonf . bonsllf
bonfslls = bonf . bonslls
bonfslll = bonf . bonslll
bonfsllr = bonf . bonsllr
bonfslrf = bonf . bonslrf
bonfslrs = bonf . bonslrs
bonfslrl = bonf . bonslrl
bonfslrr = bonf . bonslrr
bonfsrff = bonf . bonsrff
bonfsrfs = bonf . bonsrfs
bonfsrfl = bonf . bonsrfl
bonfsrfr = bonf . bonsrfr
bonfsrsf = bonf . bonsrsf
bonfsrss = bonf . bonsrss
bonfsrsl = bonf . bonsrsl
bonfsrsr = bonf . bonsrsr
bonfsrlf = bonf . bonsrlf
bonfsrls = bonf . bonsrls
bonfsrll = bonf . bonsrll
bonfsrlr = bonf . bonsrlr
bonfsrrf = bonf . bonsrrf
bonfsrrs = bonf . bonsrrs
bonfsrrl = bonf . bonsrrl
bonfsrrr = bonf . bonsrrr
bonflfff = bonf . bonlfff
bonflffs = bonf . bonlffs
bonflffl = bonf . bonlffl
bonflffr = bonf . bonlffr
bonflfsf = bonf . bonlfsf
bonflfss = bonf . bonlfss
bonflfsl = bonf . bonlfsl
bonflfsr = bonf . bonlfsr
bonflflf = bonf . bonlflf
bonflfls = bonf . bonlfls
bonflfll = bonf . bonlfll
bonflflr = bonf . bonlflr
bonflfrf = bonf . bonlfrf
bonflfrs = bonf . bonlfrs
bonflfrl = bonf . bonlfrl
bonflfrr = bonf . bonlfrr
bonflsff = bonf . bonlsff
bonflsfs = bonf . bonlsfs
bonflsfl = bonf . bonlsfl
bonflsfr = bonf . bonlsfr
bonflssf = bonf . bonlssf
bonflsss = bonf . bonlsss
bonflssl = bonf . bonlssl
bonflssr = bonf . bonlssr
bonflslf = bonf . bonlslf
bonflsls = bonf . bonlsls
bonflsll = bonf . bonlsll
bonflslr = bonf . bonlslr
bonflsrf = bonf . bonlsrf
bonflsrs = bonf . bonlsrs
bonflsrl = bonf . bonlsrl
bonflsrr = bonf . bonlsrr
bonfllff = bonf . bonllff
bonfllfs = bonf . bonllfs
bonfllfl = bonf . bonllfl
bonfllfr = bonf . bonllfr
bonfllsf = bonf . bonllsf
bonfllss = bonf . bonllss
bonfllsl = bonf . bonllsl
bonfllsr = bonf . bonllsr
bonflllf = bonf . bonlllf
bonfllls = bonf . bonllls
bonfllll = bonf . bonllll
bonflllr = bonf . bonlllr
bonfllrf = bonf . bonllrf
bonfllrs = bonf . bonllrs
bonfllrl = bonf . bonllrl
bonfllrr = bonf . bonllrr
bonflrff = bonf . bonlrff
bonflrfs = bonf . bonlrfs
bonflrfl = bonf . bonlrfl
bonflrfr = bonf . bonlrfr
bonflrsf = bonf . bonlrsf
bonflrss = bonf . bonlrss
bonflrsl = bonf . bonlrsl
bonflrsr = bonf . bonlrsr
bonflrlf = bonf . bonlrlf
bonflrls = bonf . bonlrls
bonflrll = bonf . bonlrll
bonflrlr = bonf . bonlrlr
bonflrrf = bonf . bonlrrf
bonflrrs = bonf . bonlrrs
bonflrrl = bonf . bonlrrl
bonflrrr = bonf . bonlrrr
bonfrfff = bonf . bonrfff
bonfrffs = bonf . bonrffs
bonfrffl = bonf . bonrffl
bonfrffr = bonf . bonrffr
bonfrfsf = bonf . bonrfsf
bonfrfss = bonf . bonrfss
bonfrfsl = bonf . bonrfsl
bonfrfsr = bonf . bonrfsr
bonfrflf = bonf . bonrflf
bonfrfls = bonf . bonrfls
bonfrfll = bonf . bonrfll
bonfrflr = bonf . bonrflr
bonfrfrf = bonf . bonrfrf
bonfrfrs = bonf . bonrfrs
bonfrfrl = bonf . bonrfrl
bonfrfrr = bonf . bonrfrr
bonfrsff = bonf . bonrsff
bonfrsfs = bonf . bonrsfs
bonfrsfl = bonf . bonrsfl
bonfrsfr = bonf . bonrsfr
bonfrssf = bonf . bonrssf
bonfrsss = bonf . bonrsss
bonfrssl = bonf . bonrssl
bonfrssr = bonf . bonrssr
bonfrslf = bonf . bonrslf
bonfrsls = bonf . bonrsls
bonfrsll = bonf . bonrsll
bonfrslr = bonf . bonrslr
bonfrsrf = bonf . bonrsrf
bonfrsrs = bonf . bonrsrs
bonfrsrl = bonf . bonrsrl
bonfrsrr = bonf . bonrsrr
bonfrlff = bonf . bonrlff
bonfrlfs = bonf . bonrlfs
bonfrlfl = bonf . bonrlfl
bonfrlfr = bonf . bonrlfr
bonfrlsf = bonf . bonrlsf
bonfrlss = bonf . bonrlss
bonfrlsl = bonf . bonrlsl
bonfrlsr = bonf . bonrlsr
bonfrllf = bonf . bonrllf
bonfrlls = bonf . bonrlls
bonfrlll = bonf . bonrlll
bonfrllr = bonf . bonrllr
bonfrlrf = bonf . bonrlrf
bonfrlrs = bonf . bonrlrs
bonfrlrl = bonf . bonrlrl
bonfrlrr = bonf . bonrlrr
bonfrrff = bonf . bonrrff
bonfrrfs = bonf . bonrrfs
bonfrrfl = bonf . bonrrfl
bonfrrfr = bonf . bonrrfr
bonfrrsf = bonf . bonrrsf
bonfrrss = bonf . bonrrss
bonfrrsl = bonf . bonrrsl
bonfrrsr = bonf . bonrrsr
bonfrrlf = bonf . bonrrlf
bonfrrls = bonf . bonrrls
bonfrrll = bonf . bonrrll
bonfrrlr = bonf . bonrrlr
bonfrrrf = bonf . bonrrrf
bonfrrrs = bonf . bonrrrs
bonfrrrl = bonf . bonrrrl
bonfrrrr = bonf . bonrrrr
bonsffff = bons . bonffff
bonsfffs = bons . bonfffs
bonsfffl = bons . bonfffl
bonsfffr = bons . bonfffr
bonsffsf = bons . bonffsf
bonsffss = bons . bonffss
bonsffsl = bons . bonffsl
bonsffsr = bons . bonffsr
bonsfflf = bons . bonfflf
bonsffls = bons . bonffls
bonsffll = bons . bonffll
bonsfflr = bons . bonfflr
bonsffrf = bons . bonffrf
bonsffrs = bons . bonffrs
bonsffrl = bons . bonffrl
bonsffrr = bons . bonffrr
bonsfsff = bons . bonfsff
bonsfsfs = bons . bonfsfs
bonsfsfl = bons . bonfsfl
bonsfsfr = bons . bonfsfr
bonsfssf = bons . bonfssf
bonsfsss = bons . bonfsss
bonsfssl = bons . bonfssl
bonsfssr = bons . bonfssr
bonsfslf = bons . bonfslf
bonsfsls = bons . bonfsls
bonsfsll = bons . bonfsll
bonsfslr = bons . bonfslr
bonsfsrf = bons . bonfsrf
bonsfsrs = bons . bonfsrs
bonsfsrl = bons . bonfsrl
bonsfsrr = bons . bonfsrr
bonsflff = bons . bonflff
bonsflfs = bons . bonflfs
bonsflfl = bons . bonflfl
bonsflfr = bons . bonflfr
bonsflsf = bons . bonflsf
bonsflss = bons . bonflss
bonsflsl = bons . bonflsl
bonsflsr = bons . bonflsr
bonsfllf = bons . bonfllf
bonsflls = bons . bonflls
bonsflll = bons . bonflll
bonsfllr = bons . bonfllr
bonsflrf = bons . bonflrf
bonsflrs = bons . bonflrs
bonsflrl = bons . bonflrl
bonsflrr = bons . bonflrr
bonsfrff = bons . bonfrff
bonsfrfs = bons . bonfrfs
bonsfrfl = bons . bonfrfl
bonsfrfr = bons . bonfrfr
bonsfrsf = bons . bonfrsf
bonsfrss = bons . bonfrss
bonsfrsl = bons . bonfrsl
bonsfrsr = bons . bonfrsr
bonsfrlf = bons . bonfrlf
bonsfrls = bons . bonfrls
bonsfrll = bons . bonfrll
bonsfrlr = bons . bonfrlr
bonsfrrf = bons . bonfrrf
bonsfrrs = bons . bonfrrs
bonsfrrl = bons . bonfrrl
bonsfrrr = bons . bonfrrr
bonssfff = bons . bonsfff
bonssffs = bons . bonsffs
bonssffl = bons . bonsffl
bonssffr = bons . bonsffr
bonssfsf = bons . bonsfsf
bonssfss = bons . bonsfss
bonssfsl = bons . bonsfsl
bonssfsr = bons . bonsfsr
bonssflf = bons . bonsflf
bonssfls = bons . bonsfls
bonssfll = bons . bonsfll
bonssflr = bons . bonsflr
bonssfrf = bons . bonsfrf
bonssfrs = bons . bonsfrs
bonssfrl = bons . bonsfrl
bonssfrr = bons . bonsfrr
bonsssff = bons . bonssff
bonsssfs = bons . bonssfs
bonsssfl = bons . bonssfl
bonsssfr = bons . bonssfr
bonssssf = bons . bonsssf
bonsssss = bons . bonssss
bonssssl = bons . bonsssl
bonssssr = bons . bonsssr
bonssslf = bons . bonsslf
bonsssls = bons . bonssls
bonsssll = bons . bonssll
bonssslr = bons . bonsslr
bonsssrf = bons . bonssrf
bonsssrs = bons . bonssrs
bonsssrl = bons . bonssrl
bonsssrr = bons . bonssrr
bonsslff = bons . bonslff
bonsslfs = bons . bonslfs
bonsslfl = bons . bonslfl
bonsslfr = bons . bonslfr
bonsslsf = bons . bonslsf
bonsslss = bons . bonslss
bonsslsl = bons . bonslsl
bonsslsr = bons . bonslsr
bonssllf = bons . bonsllf
bonsslls = bons . bonslls
bonsslll = bons . bonslll
bonssllr = bons . bonsllr
bonsslrf = bons . bonslrf
bonsslrs = bons . bonslrs
bonsslrl = bons . bonslrl
bonsslrr = bons . bonslrr
bonssrff = bons . bonsrff
bonssrfs = bons . bonsrfs
bonssrfl = bons . bonsrfl
bonssrfr = bons . bonsrfr
bonssrsf = bons . bonsrsf
bonssrss = bons . bonsrss
bonssrsl = bons . bonsrsl
bonssrsr = bons . bonsrsr
bonssrlf = bons . bonsrlf
bonssrls = bons . bonsrls
bonssrll = bons . bonsrll
bonssrlr = bons . bonsrlr
bonssrrf = bons . bonsrrf
bonssrrs = bons . bonsrrs
bonssrrl = bons . bonsrrl
bonssrrr = bons . bonsrrr
bonslfff = bons . bonlfff
bonslffs = bons . bonlffs
bonslffl = bons . bonlffl
bonslffr = bons . bonlffr
bonslfsf = bons . bonlfsf
bonslfss = bons . bonlfss
bonslfsl = bons . bonlfsl
bonslfsr = bons . bonlfsr
bonslflf = bons . bonlflf
bonslfls = bons . bonlfls
bonslfll = bons . bonlfll
bonslflr = bons . bonlflr
bonslfrf = bons . bonlfrf
bonslfrs = bons . bonlfrs
bonslfrl = bons . bonlfrl
bonslfrr = bons . bonlfrr
bonslsff = bons . bonlsff
bonslsfs = bons . bonlsfs
bonslsfl = bons . bonlsfl
bonslsfr = bons . bonlsfr
bonslssf = bons . bonlssf
bonslsss = bons . bonlsss
bonslssl = bons . bonlssl
bonslssr = bons . bonlssr
bonslslf = bons . bonlslf
bonslsls = bons . bonlsls
bonslsll = bons . bonlsll
bonslslr = bons . bonlslr
bonslsrf = bons . bonlsrf
bonslsrs = bons . bonlsrs
bonslsrl = bons . bonlsrl
bonslsrr = bons . bonlsrr
bonsllff = bons . bonllff
bonsllfs = bons . bonllfs
bonsllfl = bons . bonllfl
bonsllfr = bons . bonllfr
bonsllsf = bons . bonllsf
bonsllss = bons . bonllss
bonsllsl = bons . bonllsl
bonsllsr = bons . bonllsr
bonslllf = bons . bonlllf
bonsllls = bons . bonllls
bonsllll = bons . bonllll
bonslllr = bons . bonlllr
bonsllrf = bons . bonllrf
bonsllrs = bons . bonllrs
bonsllrl = bons . bonllrl
bonsllrr = bons . bonllrr
bonslrff = bons . bonlrff
bonslrfs = bons . bonlrfs
bonslrfl = bons . bonlrfl
bonslrfr = bons . bonlrfr
bonslrsf = bons . bonlrsf
bonslrss = bons . bonlrss
bonslrsl = bons . bonlrsl
bonslrsr = bons . bonlrsr
bonslrlf = bons . bonlrlf
bonslrls = bons . bonlrls
bonslrll = bons . bonlrll
bonslrlr = bons . bonlrlr
bonslrrf = bons . bonlrrf
bonslrrs = bons . bonlrrs
bonslrrl = bons . bonlrrl
bonslrrr = bons . bonlrrr
bonsrfff = bons . bonrfff
bonsrffs = bons . bonrffs
bonsrffl = bons . bonrffl
bonsrffr = bons . bonrffr
bonsrfsf = bons . bonrfsf
bonsrfss = bons . bonrfss
bonsrfsl = bons . bonrfsl
bonsrfsr = bons . bonrfsr
bonsrflf = bons . bonrflf
bonsrfls = bons . bonrfls
bonsrfll = bons . bonrfll
bonsrflr = bons . bonrflr
bonsrfrf = bons . bonrfrf
bonsrfrs = bons . bonrfrs
bonsrfrl = bons . bonrfrl
bonsrfrr = bons . bonrfrr
bonsrsff = bons . bonrsff
bonsrsfs = bons . bonrsfs
bonsrsfl = bons . bonrsfl
bonsrsfr = bons . bonrsfr
bonsrssf = bons . bonrssf
bonsrsss = bons . bonrsss
bonsrssl = bons . bonrssl
bonsrssr = bons . bonrssr
bonsrslf = bons . bonrslf
bonsrsls = bons . bonrsls
bonsrsll = bons . bonrsll
bonsrslr = bons . bonrslr
bonsrsrf = bons . bonrsrf
bonsrsrs = bons . bonrsrs
bonsrsrl = bons . bonrsrl
bonsrsrr = bons . bonrsrr
bonsrlff = bons . bonrlff
bonsrlfs = bons . bonrlfs
bonsrlfl = bons . bonrlfl
bonsrlfr = bons . bonrlfr
bonsrlsf = bons . bonrlsf
bonsrlss = bons . bonrlss
bonsrlsl = bons . bonrlsl
bonsrlsr = bons . bonrlsr
bonsrllf = bons . bonrllf
bonsrlls = bons . bonrlls
bonsrlll = bons . bonrlll
bonsrllr = bons . bonrllr
bonsrlrf = bons . bonrlrf
bonsrlrs = bons . bonrlrs
bonsrlrl = bons . bonrlrl
bonsrlrr = bons . bonrlrr
bonsrrff = bons . bonrrff
bonsrrfs = bons . bonrrfs
bonsrrfl = bons . bonrrfl
bonsrrfr = bons . bonrrfr
bonsrrsf = bons . bonrrsf
bonsrrss = bons . bonrrss
bonsrrsl = bons . bonrrsl
bonsrrsr = bons . bonrrsr
bonsrrlf = bons . bonrrlf
bonsrrls = bons . bonrrls
bonsrrll = bons . bonrrll
bonsrrlr = bons . bonrrlr
bonsrrrf = bons . bonrrrf
bonsrrrs = bons . bonrrrs
bonsrrrl = bons . bonrrrl
bonsrrrr = bons . bonrrrr
bonlffff = bonl . bonffff
bonlfffs = bonl . bonfffs
bonlfffl = bonl . bonfffl
bonlfffr = bonl . bonfffr
bonlffsf = bonl . bonffsf
bonlffss = bonl . bonffss
bonlffsl = bonl . bonffsl
bonlffsr = bonl . bonffsr
bonlfflf = bonl . bonfflf
bonlffls = bonl . bonffls
bonlffll = bonl . bonffll
bonlfflr = bonl . bonfflr
bonlffrf = bonl . bonffrf
bonlffrs = bonl . bonffrs
bonlffrl = bonl . bonffrl
bonlffrr = bonl . bonffrr
bonlfsff = bonl . bonfsff
bonlfsfs = bonl . bonfsfs
bonlfsfl = bonl . bonfsfl
bonlfsfr = bonl . bonfsfr
bonlfssf = bonl . bonfssf
bonlfsss = bonl . bonfsss
bonlfssl = bonl . bonfssl
bonlfssr = bonl . bonfssr
bonlfslf = bonl . bonfslf
bonlfsls = bonl . bonfsls
bonlfsll = bonl . bonfsll
bonlfslr = bonl . bonfslr
bonlfsrf = bonl . bonfsrf
bonlfsrs = bonl . bonfsrs
bonlfsrl = bonl . bonfsrl
bonlfsrr = bonl . bonfsrr
bonlflff = bonl . bonflff
bonlflfs = bonl . bonflfs
bonlflfl = bonl . bonflfl
bonlflfr = bonl . bonflfr
bonlflsf = bonl . bonflsf
bonlflss = bonl . bonflss
bonlflsl = bonl . bonflsl
bonlflsr = bonl . bonflsr
bonlfllf = bonl . bonfllf
bonlflls = bonl . bonflls
bonlflll = bonl . bonflll
bonlfllr = bonl . bonfllr
bonlflrf = bonl . bonflrf
bonlflrs = bonl . bonflrs
bonlflrl = bonl . bonflrl
bonlflrr = bonl . bonflrr
bonlfrff = bonl . bonfrff
bonlfrfs = bonl . bonfrfs
bonlfrfl = bonl . bonfrfl
bonlfrfr = bonl . bonfrfr
bonlfrsf = bonl . bonfrsf
bonlfrss = bonl . bonfrss
bonlfrsl = bonl . bonfrsl
bonlfrsr = bonl . bonfrsr
bonlfrlf = bonl . bonfrlf
bonlfrls = bonl . bonfrls
bonlfrll = bonl . bonfrll
bonlfrlr = bonl . bonfrlr
bonlfrrf = bonl . bonfrrf
bonlfrrs = bonl . bonfrrs
bonlfrrl = bonl . bonfrrl
bonlfrrr = bonl . bonfrrr
bonlsfff = bonl . bonsfff
bonlsffs = bonl . bonsffs
bonlsffl = bonl . bonsffl
bonlsffr = bonl . bonsffr
bonlsfsf = bonl . bonsfsf
bonlsfss = bonl . bonsfss
bonlsfsl = bonl . bonsfsl
bonlsfsr = bonl . bonsfsr
bonlsflf = bonl . bonsflf
bonlsfls = bonl . bonsfls
bonlsfll = bonl . bonsfll
bonlsflr = bonl . bonsflr
bonlsfrf = bonl . bonsfrf
bonlsfrs = bonl . bonsfrs
bonlsfrl = bonl . bonsfrl
bonlsfrr = bonl . bonsfrr
bonlssff = bonl . bonssff
bonlssfs = bonl . bonssfs
bonlssfl = bonl . bonssfl
bonlssfr = bonl . bonssfr
bonlsssf = bonl . bonsssf
bonlssss = bonl . bonssss
bonlsssl = bonl . bonsssl
bonlsssr = bonl . bonsssr
bonlsslf = bonl . bonsslf
bonlssls = bonl . bonssls
bonlssll = bonl . bonssll
bonlsslr = bonl . bonsslr
bonlssrf = bonl . bonssrf
bonlssrs = bonl . bonssrs
bonlssrl = bonl . bonssrl
bonlssrr = bonl . bonssrr
bonlslff = bonl . bonslff
bonlslfs = bonl . bonslfs
bonlslfl = bonl . bonslfl
bonlslfr = bonl . bonslfr
bonlslsf = bonl . bonslsf
bonlslss = bonl . bonslss
bonlslsl = bonl . bonslsl
bonlslsr = bonl . bonslsr
bonlsllf = bonl . bonsllf
bonlslls = bonl . bonslls
bonlslll = bonl . bonslll
bonlsllr = bonl . bonsllr
bonlslrf = bonl . bonslrf
bonlslrs = bonl . bonslrs
bonlslrl = bonl . bonslrl
bonlslrr = bonl . bonslrr
bonlsrff = bonl . bonsrff
bonlsrfs = bonl . bonsrfs
bonlsrfl = bonl . bonsrfl
bonlsrfr = bonl . bonsrfr
bonlsrsf = bonl . bonsrsf
bonlsrss = bonl . bonsrss
bonlsrsl = bonl . bonsrsl
bonlsrsr = bonl . bonsrsr
bonlsrlf = bonl . bonsrlf
bonlsrls = bonl . bonsrls
bonlsrll = bonl . bonsrll
bonlsrlr = bonl . bonsrlr
bonlsrrf = bonl . bonsrrf
bonlsrrs = bonl . bonsrrs
bonlsrrl = bonl . bonsrrl
bonlsrrr = bonl . bonsrrr
bonllfff = bonl . bonlfff
bonllffs = bonl . bonlffs
bonllffl = bonl . bonlffl
bonllffr = bonl . bonlffr
bonllfsf = bonl . bonlfsf
bonllfss = bonl . bonlfss
bonllfsl = bonl . bonlfsl
bonllfsr = bonl . bonlfsr
bonllflf = bonl . bonlflf
bonllfls = bonl . bonlfls
bonllfll = bonl . bonlfll
bonllflr = bonl . bonlflr
bonllfrf = bonl . bonlfrf
bonllfrs = bonl . bonlfrs
bonllfrl = bonl . bonlfrl
bonllfrr = bonl . bonlfrr
bonllsff = bonl . bonlsff
bonllsfs = bonl . bonlsfs
bonllsfl = bonl . bonlsfl
bonllsfr = bonl . bonlsfr
bonllssf = bonl . bonlssf
bonllsss = bonl . bonlsss
bonllssl = bonl . bonlssl
bonllssr = bonl . bonlssr
bonllslf = bonl . bonlslf
bonllsls = bonl . bonlsls
bonllsll = bonl . bonlsll
bonllslr = bonl . bonlslr
bonllsrf = bonl . bonlsrf
bonllsrs = bonl . bonlsrs
bonllsrl = bonl . bonlsrl
bonllsrr = bonl . bonlsrr
bonlllff = bonl . bonllff
bonlllfs = bonl . bonllfs
bonlllfl = bonl . bonllfl
bonlllfr = bonl . bonllfr
bonlllsf = bonl . bonllsf
bonlllss = bonl . bonllss
bonlllsl = bonl . bonllsl
bonlllsr = bonl . bonllsr
bonllllf = bonl . bonlllf
bonlllls = bonl . bonllls
bonlllll = bonl . bonllll
bonllllr = bonl . bonlllr
bonlllrf = bonl . bonllrf
bonlllrs = bonl . bonllrs
bonlllrl = bonl . bonllrl
bonlllrr = bonl . bonllrr
bonllrff = bonl . bonlrff
bonllrfs = bonl . bonlrfs
bonllrfl = bonl . bonlrfl
bonllrfr = bonl . bonlrfr
bonllrsf = bonl . bonlrsf
bonllrss = bonl . bonlrss
bonllrsl = bonl . bonlrsl
bonllrsr = bonl . bonlrsr
bonllrlf = bonl . bonlrlf
bonllrls = bonl . bonlrls
bonllrll = bonl . bonlrll
bonllrlr = bonl . bonlrlr
bonllrrf = bonl . bonlrrf
bonllrrs = bonl . bonlrrs
bonllrrl = bonl . bonlrrl
bonllrrr = bonl . bonlrrr
bonlrfff = bonl . bonrfff
bonlrffs = bonl . bonrffs
bonlrffl = bonl . bonrffl
bonlrffr = bonl . bonrffr
bonlrfsf = bonl . bonrfsf
bonlrfss = bonl . bonrfss
bonlrfsl = bonl . bonrfsl
bonlrfsr = bonl . bonrfsr
bonlrflf = bonl . bonrflf
bonlrfls = bonl . bonrfls
bonlrfll = bonl . bonrfll
bonlrflr = bonl . bonrflr
bonlrfrf = bonl . bonrfrf
bonlrfrs = bonl . bonrfrs
bonlrfrl = bonl . bonrfrl
bonlrfrr = bonl . bonrfrr
bonlrsff = bonl . bonrsff
bonlrsfs = bonl . bonrsfs
bonlrsfl = bonl . bonrsfl
bonlrsfr = bonl . bonrsfr
bonlrssf = bonl . bonrssf
bonlrsss = bonl . bonrsss
bonlrssl = bonl . bonrssl
bonlrssr = bonl . bonrssr
bonlrslf = bonl . bonrslf
bonlrsls = bonl . bonrsls
bonlrsll = bonl . bonrsll
bonlrslr = bonl . bonrslr
bonlrsrf = bonl . bonrsrf
bonlrsrs = bonl . bonrsrs
bonlrsrl = bonl . bonrsrl
bonlrsrr = bonl . bonrsrr
bonlrlff = bonl . bonrlff
bonlrlfs = bonl . bonrlfs
bonlrlfl = bonl . bonrlfl
bonlrlfr = bonl . bonrlfr
bonlrlsf = bonl . bonrlsf
bonlrlss = bonl . bonrlss
bonlrlsl = bonl . bonrlsl
bonlrlsr = bonl . bonrlsr
bonlrllf = bonl . bonrllf
bonlrlls = bonl . bonrlls
bonlrlll = bonl . bonrlll
bonlrllr = bonl . bonrllr
bonlrlrf = bonl . bonrlrf
bonlrlrs = bonl . bonrlrs
bonlrlrl = bonl . bonrlrl
bonlrlrr = bonl . bonrlrr
bonlrrff = bonl . bonrrff
bonlrrfs = bonl . bonrrfs
bonlrrfl = bonl . bonrrfl
bonlrrfr = bonl . bonrrfr
bonlrrsf = bonl . bonrrsf
bonlrrss = bonl . bonrrss
bonlrrsl = bonl . bonrrsl
bonlrrsr = bonl . bonrrsr
bonlrrlf = bonl . bonrrlf
bonlrrls = bonl . bonrrls
bonlrrll = bonl . bonrrll
bonlrrlr = bonl . bonrrlr
bonlrrrf = bonl . bonrrrf
bonlrrrs = bonl . bonrrrs
bonlrrrl = bonl . bonrrrl
bonlrrrr = bonl . bonrrrr
bonrffff = bonr . bonffff
bonrfffs = bonr . bonfffs
bonrfffl = bonr . bonfffl
bonrfffr = bonr . bonfffr
bonrffsf = bonr . bonffsf
bonrffss = bonr . bonffss
bonrffsl = bonr . bonffsl
bonrffsr = bonr . bonffsr
bonrfflf = bonr . bonfflf
bonrffls = bonr . bonffls
bonrffll = bonr . bonffll
bonrfflr = bonr . bonfflr
bonrffrf = bonr . bonffrf
bonrffrs = bonr . bonffrs
bonrffrl = bonr . bonffrl
bonrffrr = bonr . bonffrr
bonrfsff = bonr . bonfsff
bonrfsfs = bonr . bonfsfs
bonrfsfl = bonr . bonfsfl
bonrfsfr = bonr . bonfsfr
bonrfssf = bonr . bonfssf
bonrfsss = bonr . bonfsss
bonrfssl = bonr . bonfssl
bonrfssr = bonr . bonfssr
bonrfslf = bonr . bonfslf
bonrfsls = bonr . bonfsls
bonrfsll = bonr . bonfsll
bonrfslr = bonr . bonfslr
bonrfsrf = bonr . bonfsrf
bonrfsrs = bonr . bonfsrs
bonrfsrl = bonr . bonfsrl
bonrfsrr = bonr . bonfsrr
bonrflff = bonr . bonflff
bonrflfs = bonr . bonflfs
bonrflfl = bonr . bonflfl
bonrflfr = bonr . bonflfr
bonrflsf = bonr . bonflsf
bonrflss = bonr . bonflss
bonrflsl = bonr . bonflsl
bonrflsr = bonr . bonflsr
bonrfllf = bonr . bonfllf
bonrflls = bonr . bonflls
bonrflll = bonr . bonflll
bonrfllr = bonr . bonfllr
bonrflrf = bonr . bonflrf
bonrflrs = bonr . bonflrs
bonrflrl = bonr . bonflrl
bonrflrr = bonr . bonflrr
bonrfrff = bonr . bonfrff
bonrfrfs = bonr . bonfrfs
bonrfrfl = bonr . bonfrfl
bonrfrfr = bonr . bonfrfr
bonrfrsf = bonr . bonfrsf
bonrfrss = bonr . bonfrss
bonrfrsl = bonr . bonfrsl
bonrfrsr = bonr . bonfrsr
bonrfrlf = bonr . bonfrlf
bonrfrls = bonr . bonfrls
bonrfrll = bonr . bonfrll
bonrfrlr = bonr . bonfrlr
bonrfrrf = bonr . bonfrrf
bonrfrrs = bonr . bonfrrs
bonrfrrl = bonr . bonfrrl
bonrfrrr = bonr . bonfrrr
bonrsfff = bonr . bonsfff
bonrsffs = bonr . bonsffs
bonrsffl = bonr . bonsffl
bonrsffr = bonr . bonsffr
bonrsfsf = bonr . bonsfsf
bonrsfss = bonr . bonsfss
bonrsfsl = bonr . bonsfsl
bonrsfsr = bonr . bonsfsr
bonrsflf = bonr . bonsflf
bonrsfls = bonr . bonsfls
bonrsfll = bonr . bonsfll
bonrsflr = bonr . bonsflr
bonrsfrf = bonr . bonsfrf
bonrsfrs = bonr . bonsfrs
bonrsfrl = bonr . bonsfrl
bonrsfrr = bonr . bonsfrr
bonrssff = bonr . bonssff
bonrssfs = bonr . bonssfs
bonrssfl = bonr . bonssfl
bonrssfr = bonr . bonssfr
bonrsssf = bonr . bonsssf
bonrssss = bonr . bonssss
bonrsssl = bonr . bonsssl
bonrsssr = bonr . bonsssr
bonrsslf = bonr . bonsslf
bonrssls = bonr . bonssls
bonrssll = bonr . bonssll
bonrsslr = bonr . bonsslr
bonrssrf = bonr . bonssrf
bonrssrs = bonr . bonssrs
bonrssrl = bonr . bonssrl
bonrssrr = bonr . bonssrr
bonrslff = bonr . bonslff
bonrslfs = bonr . bonslfs
bonrslfl = bonr . bonslfl
bonrslfr = bonr . bonslfr
bonrslsf = bonr . bonslsf
bonrslss = bonr . bonslss
bonrslsl = bonr . bonslsl
bonrslsr = bonr . bonslsr
bonrsllf = bonr . bonsllf
bonrslls = bonr . bonslls
bonrslll = bonr . bonslll
bonrsllr = bonr . bonsllr
bonrslrf = bonr . bonslrf
bonrslrs = bonr . bonslrs
bonrslrl = bonr . bonslrl
bonrslrr = bonr . bonslrr
bonrsrff = bonr . bonsrff
bonrsrfs = bonr . bonsrfs
bonrsrfl = bonr . bonsrfl
bonrsrfr = bonr . bonsrfr
bonrsrsf = bonr . bonsrsf
bonrsrss = bonr . bonsrss
bonrsrsl = bonr . bonsrsl
bonrsrsr = bonr . bonsrsr
bonrsrlf = bonr . bonsrlf
bonrsrls = bonr . bonsrls
bonrsrll = bonr . bonsrll
bonrsrlr = bonr . bonsrlr
bonrsrrf = bonr . bonsrrf
bonrsrrs = bonr . bonsrrs
bonrsrrl = bonr . bonsrrl
bonrsrrr = bonr . bonsrrr
bonrlfff = bonr . bonlfff
bonrlffs = bonr . bonlffs
bonrlffl = bonr . bonlffl
bonrlffr = bonr . bonlffr
bonrlfsf = bonr . bonlfsf
bonrlfss = bonr . bonlfss
bonrlfsl = bonr . bonlfsl
bonrlfsr = bonr . bonlfsr
bonrlflf = bonr . bonlflf
bonrlfls = bonr . bonlfls
bonrlfll = bonr . bonlfll
bonrlflr = bonr . bonlflr
bonrlfrf = bonr . bonlfrf
bonrlfrs = bonr . bonlfrs
bonrlfrl = bonr . bonlfrl
bonrlfrr = bonr . bonlfrr
bonrlsff = bonr . bonlsff
bonrlsfs = bonr . bonlsfs
bonrlsfl = bonr . bonlsfl
bonrlsfr = bonr . bonlsfr
bonrlssf = bonr . bonlssf
bonrlsss = bonr . bonlsss
bonrlssl = bonr . bonlssl
bonrlssr = bonr . bonlssr
bonrlslf = bonr . bonlslf
bonrlsls = bonr . bonlsls
bonrlsll = bonr . bonlsll
bonrlslr = bonr . bonlslr
bonrlsrf = bonr . bonlsrf
bonrlsrs = bonr . bonlsrs
bonrlsrl = bonr . bonlsrl
bonrlsrr = bonr . bonlsrr
bonrllff = bonr . bonllff
bonrllfs = bonr . bonllfs
bonrllfl = bonr . bonllfl
bonrllfr = bonr . bonllfr
bonrllsf = bonr . bonllsf
bonrllss = bonr . bonllss
bonrllsl = bonr . bonllsl
bonrllsr = bonr . bonllsr
bonrlllf = bonr . bonlllf
bonrllls = bonr . bonllls
bonrllll = bonr . bonllll
bonrlllr = bonr . bonlllr
bonrllrf = bonr . bonllrf
bonrllrs = bonr . bonllrs
bonrllrl = bonr . bonllrl
bonrllrr = bonr . bonllrr
bonrlrff = bonr . bonlrff
bonrlrfs = bonr . bonlrfs
bonrlrfl = bonr . bonlrfl
bonrlrfr = bonr . bonlrfr
bonrlrsf = bonr . bonlrsf
bonrlrss = bonr . bonlrss
bonrlrsl = bonr . bonlrsl
bonrlrsr = bonr . bonlrsr
bonrlrlf = bonr . bonlrlf
bonrlrls = bonr . bonlrls
bonrlrll = bonr . bonlrll
bonrlrlr = bonr . bonlrlr
bonrlrrf = bonr . bonlrrf
bonrlrrs = bonr . bonlrrs
bonrlrrl = bonr . bonlrrl
bonrlrrr = bonr . bonlrrr
bonrrfff = bonr . bonrfff
bonrrffs = bonr . bonrffs
bonrrffl = bonr . bonrffl
bonrrffr = bonr . bonrffr
bonrrfsf = bonr . bonrfsf
bonrrfss = bonr . bonrfss
bonrrfsl = bonr . bonrfsl
bonrrfsr = bonr . bonrfsr
bonrrflf = bonr . bonrflf
bonrrfls = bonr . bonrfls
bonrrfll = bonr . bonrfll
bonrrflr = bonr . bonrflr
bonrrfrf = bonr . bonrfrf
bonrrfrs = bonr . bonrfrs
bonrrfrl = bonr . bonrfrl
bonrrfrr = bonr . bonrfrr
bonrrsff = bonr . bonrsff
bonrrsfs = bonr . bonrsfs
bonrrsfl = bonr . bonrsfl
bonrrsfr = bonr . bonrsfr
bonrrssf = bonr . bonrssf
bonrrsss = bonr . bonrsss
bonrrssl = bonr . bonrssl
bonrrssr = bonr . bonrssr
bonrrslf = bonr . bonrslf
bonrrsls = bonr . bonrsls
bonrrsll = bonr . bonrsll
bonrrslr = bonr . bonrslr
bonrrsrf = bonr . bonrsrf
bonrrsrs = bonr . bonrsrs
bonrrsrl = bonr . bonrsrl
bonrrsrr = bonr . bonrsrr
bonrrlff = bonr . bonrlff
bonrrlfs = bonr . bonrlfs
bonrrlfl = bonr . bonrlfl
bonrrlfr = bonr . bonrlfr
bonrrlsf = bonr . bonrlsf
bonrrlss = bonr . bonrlss
bonrrlsl = bonr . bonrlsl
bonrrlsr = bonr . bonrlsr
bonrrllf = bonr . bonrllf
bonrrlls = bonr . bonrlls
bonrrlll = bonr . bonrlll
bonrrllr = bonr . bonrllr
bonrrlrf = bonr . bonrlrf
bonrrlrs = bonr . bonrlrs
bonrrlrl = bonr . bonrlrl
bonrrlrr = bonr . bonrlrr
bonrrrff = bonr . bonrrff
bonrrrfs = bonr . bonrrfs
bonrrrfl = bonr . bonrrfl
bonrrrfr = bonr . bonrrfr
bonrrrsf = bonr . bonrrsf
bonrrrss = bonr . bonrrss
bonrrrsl = bonr . bonrrsl
bonrrrsr = bonr . bonrrsr
bonrrrlf = bonr . bonrrlf
bonrrrls = bonr . bonrrls
bonrrrll = bonr . bonrrll
bonrrrlr = bonr . bonrrlr
bonrrrrf = bonr . bonrrrf
bonrrrrs = bonr . bonrrrs
bonrrrrl = bonr . bonrrrl
bonrrrrr = bonr . bonrrrr

