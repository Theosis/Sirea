Name: Sirea
Version: 0.1
Cabal-Version: >= 1.2
Synopsis: Simply Reactive! Declarative orchestration in Haskell with RDP.
Category: Reactive, FRP
Description:
  Reactive Demand Programming (RDP) is a paradigm for declarative
  orchestration of open systems. Services, resources, and functions 
  are represented as behaviors that transform signals. For services
  and resources, signals act as live queries, commands, demands able 
  to observe and influence them. However, effects are constrained:
  continuous, collaborative, concurrent, commutative, idempotent.
  .
  Those constraints ensure even the side effects are declarative. 
  .
  RDP is not FRP, but much should be familiar to those who work with 
  arrowized FRP models. The big differences regard how RDP manages
  effects and state, and RDP's lack of direct support for events.
  State is modeled as an external resource. Events are represented 
  by transient (but not instantaneous) changes in state or a signal. 
  .
  Sirea is an implementation of RDP for use in a Haskell process. It
  allows the full gamut of Haskell types. Sirea behaviors can create
  threads and help build connectivity to resources so developers can
  avoid hooking things up by hand. Sirea is designed to be suitable  
  for long lived soft real time applications such as multimedia, 
  games, command and control software, or live programming. 

Author: David Barbour
Maintainer: dmbarbour@gmail.com
Homepage: http://awelon.sourceforge.net/
Package-Url: https://github.com/dmbarbour/Sirea
Copyright: (c) 2012 by David Barbour
License: BSD3
Stability: experimental
build-type: Simple

Library
  hs-Source-Dirs: src
  Extensions:
  Build-Depends: base>4.5
    ,parallel>3
    ,time

  Exposed-Modules:
    FRP.Sirea.Time
    FRP.Sirea.Signal
    FRP.Sirea.Behavior

  ghc-options: -threaded -Wall -fno-warn-orphans 


